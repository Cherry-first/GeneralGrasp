pybullet build time: Nov 28 2023 23:45:17
Save path for results: /home/a/acw799/cliport/exps_clipfit/put-block-in-bowl-seen-colors-clipfit-n10-train/checkpoints/
steps=00120-val_loss=0.00013769.ckpt
Evaluating: ['steps=00120-val_loss=0.00013769.ckpt']
[2025-02-09 19:18:01,915][root][INFO] - Loaded checkpoint sucessfully
[2025-02-09 19:18:02,449][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-09 19:18:09,477][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-09 19:18:51,157][root][INFO] - Loaded checkpoint sucessfully
[2025-02-09 19:18:51,311][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-09 19:18:58,054][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-09 19:19:07,074][root][INFO] - Loaded checkpoint sucessfully
[2025-02-09 19:19:07,236][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-09 19:19:13,652][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-09 19:19:22,647][root][INFO] - Loaded checkpoint sucessfully
[2025-02-09 19:19:22,800][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-09 19:19:29,372][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: put-block-in-bowl-seen-colors-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/put-block-in-bowl-seen-colors-clipfit-n10-train/checkpoints/steps=00120-val_loss=0.00013769.ckpt
Test: 1/50
[2025-02-09 19:20:13,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:20:13,925][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:20:16,052][root][INFO] - Image embeddings computed.
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Memory efficient kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:723.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Memory Efficient attention has been runtime disabled. (Triggered internally at ../aten/src/ATen/native/transformers/sdp_utils_cpp.h:495.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Flash attention kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:725.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Expected query, key and value to all be of dtype: {Half, BFloat16}. Got Query dtype: float, Key dtype: float, and Value dtype: float instead. (Triggered internally at ../aten/src/ATen/native/transformers/sdp_utils_cpp.h:98.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: CuDNN attention kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:727.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: The CuDNN backend needs to be enabled by setting the enviornment variable`TORCH_CUDNN_SDPA_ENABLED=1` (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:496.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/home/a/acw799/.local/lib/python3.10/site-packages/torch/nn/modules/module.py:1562: UserWarning: Flash Attention kernel failed due to: No available kernel. Aborting execution.
Falling back to all available kernels for scaled_dot_product_attention (which may have a slower speed).
  return forward_call(*args, **kwargs)
[2025-02-09 19:20:35,305][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:20:35,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:20:35,495][root][INFO] - Image embeddings computed.
[2025-02-09 19:20:39,626][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:20:39,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:20:39,737][root][INFO] - Image embeddings computed.
[2025-02-09 19:20:43,877][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:20:44,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:20:44,030][root][INFO] - Image embeddings computed.
[2025-02-09 19:20:48,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:20:48,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:20:48,286][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:21:02,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:21:02,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:21:02,846][root][INFO] - Image embeddings computed.
[2025-02-09 19:21:19,482][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:21:19,590][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:21:19,611][root][INFO] - Image embeddings computed.
[2025-02-09 19:21:23,760][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:21:23,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:21:23,882][root][INFO] - Image embeddings computed.
[2025-02-09 19:21:28,052][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:21:28,148][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:21:28,168][root][INFO] - Image embeddings computed.
[2025-02-09 19:21:32,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:21:32,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:21:32,462][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 2/50
[2025-02-09 19:21:48,429][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:21:48,433][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:21:48,453][root][INFO] - Image embeddings computed.
[2025-02-09 19:22:05,110][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:22:05,113][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:22:05,133][root][INFO] - Image embeddings computed.
[2025-02-09 19:22:09,332][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:22:09,335][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:22:09,354][root][INFO] - Image embeddings computed.
[2025-02-09 19:22:13,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:22:13,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:22:13,574][root][INFO] - Image embeddings computed.
[2025-02-09 19:22:17,736][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:22:17,739][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:22:17,759][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 18
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:22:28,397][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:22:28,400][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:22:28,420][root][INFO] - Image embeddings computed.
[2025-02-09 19:22:45,403][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:22:45,406][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:22:45,426][root][INFO] - Image embeddings computed.
[2025-02-09 19:22:49,643][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:22:49,653][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:22:49,672][root][INFO] - Image embeddings computed.
[2025-02-09 19:22:53,880][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:22:53,883][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:22:53,904][root][INFO] - Image embeddings computed.
[2025-02-09 19:22:58,088][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:22:58,091][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:22:58,111][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 16
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 3/50
[2025-02-09 19:23:15,965][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:23:15,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:23:16,010][root][INFO] - Image embeddings computed.
[2025-02-09 19:23:32,663][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:23:32,666][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:23:32,686][root][INFO] - Image embeddings computed.
[2025-02-09 19:23:36,897][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:23:36,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:23:36,920][root][INFO] - Image embeddings computed.
[2025-02-09 19:23:41,166][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:23:41,169][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:23:41,189][root][INFO] - Image embeddings computed.
[2025-02-09 19:23:45,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:23:45,474][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:23:45,494][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 14
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.000 | Done: False

[2025-02-09 19:24:00,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:24:00,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:24:00,182][root][INFO] - Image embeddings computed.
[2025-02-09 19:24:16,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:24:16,939][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:24:16,959][root][INFO] - Image embeddings computed.
[2025-02-09 19:24:21,182][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:24:21,184][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:24:21,204][root][INFO] - Image embeddings computed.
[2025-02-09 19:24:25,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:24:25,440][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:24:25,460][root][INFO] - Image embeddings computed.
[2025-02-09 19:24:29,646][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:24:29,738][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:24:29,758][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 15
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:24:42,489][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:24:42,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:24:42,627][root][INFO] - Image embeddings computed.
[2025-02-09 19:24:59,434][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:24:59,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:24:59,639][root][INFO] - Image embeddings computed.
[2025-02-09 19:25:03,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:25:03,958][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:25:03,978][root][INFO] - Image embeddings computed.
[2025-02-09 19:25:08,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:25:08,355][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:25:08,375][root][INFO] - Image embeddings computed.
[2025-02-09 19:25:12,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:25:12,657][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:25:12,676][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 6
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.500 | Done: False

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 4/50
[2025-02-09 19:25:32,412][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:25:32,416][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:25:32,435][root][INFO] - Image embeddings computed.
[2025-02-09 19:25:49,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:25:49,105][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:25:49,125][root][INFO] - Image embeddings computed.
[2025-02-09 19:25:53,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:25:53,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:25:53,362][root][INFO] - Image embeddings computed.
[2025-02-09 19:25:57,587][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:25:57,590][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:25:57,609][root][INFO] - Image embeddings computed.
[2025-02-09 19:26:01,794][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:26:01,797][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:26:01,817][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 17
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.333 | Done: False

[2025-02-09 19:26:16,073][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:26:16,076][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:26:16,096][root][INFO] - Image embeddings computed.
[2025-02-09 19:26:32,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:26:32,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:26:32,935][root][INFO] - Image embeddings computed.
[2025-02-09 19:26:37,151][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:26:37,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:26:37,174][root][INFO] - Image embeddings computed.
[2025-02-09 19:26:41,399][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:26:41,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:26:41,421][root][INFO] - Image embeddings computed.
[2025-02-09 19:26:45,623][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:26:45,635][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:26:45,655][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 16
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.667 | Done: False

[2025-02-09 19:26:57,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:26:57,341][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:26:57,361][root][INFO] - Image embeddings computed.
[2025-02-09 19:27:14,137][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:27:14,141][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:27:14,161][root][INFO] - Image embeddings computed.
[2025-02-09 19:27:18,384][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:27:18,387][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:27:18,407][root][INFO] - Image embeddings computed.
[2025-02-09 19:27:22,629][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:27:22,632][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:27:22,652][root][INFO] - Image embeddings computed.
[2025-02-09 19:27:26,865][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:27:26,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:27:26,888][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 5/50
[2025-02-09 19:27:45,763][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:27:45,766][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:27:45,786][root][INFO] - Image embeddings computed.
[2025-02-09 19:28:02,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:28:02,586][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:28:02,606][root][INFO] - Image embeddings computed.
[2025-02-09 19:28:06,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:28:06,848][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:28:06,868][root][INFO] - Image embeddings computed.
[2025-02-09 19:28:11,081][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:28:11,084][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:28:11,104][root][INFO] - Image embeddings computed.
[2025-02-09 19:28:15,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:28:15,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:28:15,344][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 16
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:28:32,817][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:28:32,925][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:28:32,945][root][INFO] - Image embeddings computed.
[2025-02-09 19:28:49,727][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:28:49,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:28:49,843][root][INFO] - Image embeddings computed.
[2025-02-09 19:28:54,067][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:28:54,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:28:54,179][root][INFO] - Image embeddings computed.
[2025-02-09 19:28:58,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:28:58,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:28:58,501][root][INFO] - Image embeddings computed.
[2025-02-09 19:29:02,722][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:29:02,843][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:29:02,863][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 15
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 6/50
[2025-02-09 19:29:23,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:29:23,333][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:29:23,353][root][INFO] - Image embeddings computed.
[2025-02-09 19:29:40,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:29:40,043][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:29:40,063][root][INFO] - Image embeddings computed.
[2025-02-09 19:29:44,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:29:44,292][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:29:44,312][root][INFO] - Image embeddings computed.
[2025-02-09 19:29:48,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:29:48,531][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:29:48,551][root][INFO] - Image embeddings computed.
[2025-02-09 19:29:52,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:29:52,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:29:52,793][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 15
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:30:07,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:30:07,397][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:30:07,417][root][INFO] - Image embeddings computed.
[2025-02-09 19:30:24,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:30:24,220][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:30:24,241][root][INFO] - Image embeddings computed.
[2025-02-09 19:30:28,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:30:28,581][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:30:28,601][root][INFO] - Image embeddings computed.
[2025-02-09 19:30:32,818][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:30:32,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:30:32,956][root][INFO] - Image embeddings computed.
[2025-02-09 19:30:37,174][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:30:37,275][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:30:37,295][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:30:53,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:30:53,165][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:30:53,186][root][INFO] - Image embeddings computed.
[2025-02-09 19:31:09,840][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:31:09,948][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:31:09,968][root][INFO] - Image embeddings computed.
[2025-02-09 19:31:14,196][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:31:14,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:31:14,310][root][INFO] - Image embeddings computed.
[2025-02-09 19:31:18,515][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:31:18,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:31:18,651][root][INFO] - Image embeddings computed.
[2025-02-09 19:31:22,867][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:31:22,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:31:22,985][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 15
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9166666666666666 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 7/50
[2025-02-09 19:31:47,651][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:31:47,750][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:31:47,770][root][INFO] - Image embeddings computed.
[2025-02-09 19:32:04,483][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:32:04,581][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:32:04,606][root][INFO] - Image embeddings computed.
[2025-02-09 19:32:08,803][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:32:08,898][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:32:08,918][root][INFO] - Image embeddings computed.
[2025-02-09 19:32:13,135][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:32:13,227][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:32:13,247][root][INFO] - Image embeddings computed.
[2025-02-09 19:32:17,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:32:17,558][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:32:17,578][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 15
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.9285714285714286 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 8/50
[2025-02-09 19:32:40,894][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:32:41,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:32:41,027][root][INFO] - Image embeddings computed.
[2025-02-09 19:32:57,942][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:32:58,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:32:58,054][root][INFO] - Image embeddings computed.
[2025-02-09 19:33:02,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:33:02,358][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:33:02,378][root][INFO] - Image embeddings computed.
[2025-02-09 19:33:06,582][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:33:06,673][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:33:06,693][root][INFO] - Image embeddings computed.
[2025-02-09 19:33:10,867][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:33:10,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:33:10,979][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 19
Lang Goal: put the brown blocks in a red bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:33:27,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:33:27,135][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:33:27,155][root][INFO] - Image embeddings computed.
[2025-02-09 19:33:44,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:33:44,109][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:33:44,129][root][INFO] - Image embeddings computed.
[2025-02-09 19:33:48,338][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:33:48,434][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:33:48,454][root][INFO] - Image embeddings computed.
[2025-02-09 19:33:52,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:33:52,761][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:33:52,781][root][INFO] - Image embeddings computed.
[2025-02-09 19:33:56,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:33:57,070][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:33:57,090][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 18
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.9375 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 9/50
[2025-02-09 19:34:22,612][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:34:22,710][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:34:22,730][root][INFO] - Image embeddings computed.
[2025-02-09 19:34:39,920][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:34:40,036][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:34:40,056][root][INFO] - Image embeddings computed.
[2025-02-09 19:34:44,220][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:34:44,323][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:34:44,342][root][INFO] - Image embeddings computed.
[2025-02-09 19:34:48,532][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:34:48,688][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:34:48,708][root][INFO] - Image embeddings computed.
[2025-02-09 19:34:52,865][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:34:52,997][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:34:53,016][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 14
Lang Goal: put the green blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.9444444444444444 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 10/50
[2025-02-09 19:35:17,922][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:35:18,020][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:35:18,041][root][INFO] - Image embeddings computed.
[2025-02-09 19:35:34,633][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:35:34,737][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:35:34,757][root][INFO] - Image embeddings computed.
[2025-02-09 19:35:38,943][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:35:39,051][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:35:39,071][root][INFO] - Image embeddings computed.
[2025-02-09 19:35:43,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:35:43,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:35:43,391][root][INFO] - Image embeddings computed.
[2025-02-09 19:35:47,594][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:35:47,686][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:35:47,706][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.95 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 11/50
[2025-02-09 19:36:08,597][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:36:08,604][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:36:08,624][root][INFO] - Image embeddings computed.
[2025-02-09 19:36:25,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:36:25,273][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:36:25,293][root][INFO] - Image embeddings computed.
[2025-02-09 19:36:29,512][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:36:29,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:36:29,535][root][INFO] - Image embeddings computed.
[2025-02-09 19:36:33,765][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:36:33,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:36:33,793][root][INFO] - Image embeddings computed.
[2025-02-09 19:36:37,969][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:36:37,972][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:36:37,991][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 16
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9545454545454546 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 12/50
[2025-02-09 19:37:04,215][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:37:04,218][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:37:04,238][root][INFO] - Image embeddings computed.
[2025-02-09 19:37:20,969][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:37:21,070][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:37:21,090][root][INFO] - Image embeddings computed.
[2025-02-09 19:37:25,317][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:37:25,408][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:37:25,428][root][INFO] - Image embeddings computed.
[2025-02-09 19:37:29,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:37:29,723][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:37:29,743][root][INFO] - Image embeddings computed.
[2025-02-09 19:37:33,924][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:37:34,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:37:34,046][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 20
Lang Goal: put the brown blocks in a gray bowl
Total Reward: 0.333 | Done: False

[2025-02-09 19:37:51,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:37:51,059][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:37:51,079][root][INFO] - Image embeddings computed.
[2025-02-09 19:38:07,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:38:07,781][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:38:07,801][root][INFO] - Image embeddings computed.
[2025-02-09 19:38:12,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:38:12,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:38:12,058][root][INFO] - Image embeddings computed.
[2025-02-09 19:38:16,281][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:38:16,284][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:38:16,304][root][INFO] - Image embeddings computed.
[2025-02-09 19:38:20,509][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:38:20,518][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:38:20,537][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 19
Lang Goal: put the brown blocks in a gray bowl
Total Reward: 0.667 | Done: False

[2025-02-09 19:38:37,263][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:38:37,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:38:37,287][root][INFO] - Image embeddings computed.
[2025-02-09 19:38:54,005][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:38:54,008][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:38:54,028][root][INFO] - Image embeddings computed.
[2025-02-09 19:38:58,251][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:38:58,254][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:38:58,274][root][INFO] - Image embeddings computed.
[2025-02-09 19:39:02,544][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:39:02,547][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:39:02,567][root][INFO] - Image embeddings computed.
[2025-02-09 19:39:06,754][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:39:06,762][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:39:06,782][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 18
Lang Goal: put the brown blocks in a gray bowl
Total Reward: 0.667 | Done: False

[2025-02-09 19:39:24,960][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:39:25,063][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:39:25,083][root][INFO] - Image embeddings computed.
[2025-02-09 19:39:41,818][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:39:41,918][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:39:41,938][root][INFO] - Image embeddings computed.
[2025-02-09 19:39:46,164][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:39:46,258][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:39:46,278][root][INFO] - Image embeddings computed.
[2025-02-09 19:39:50,508][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:39:50,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:39:50,631][root][INFO] - Image embeddings computed.
[2025-02-09 19:39:54,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:39:54,916][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:39:54,936][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 18
Lang Goal: put the brown blocks in a gray bowl
Total Reward: 0.667 | Done: False

Mean: 0.9305555555555555 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 13/50
[2025-02-09 19:40:18,281][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:40:18,397][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:40:18,418][root][INFO] - Image embeddings computed.
[2025-02-09 19:40:35,275][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:40:35,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:40:35,387][root][INFO] - Image embeddings computed.
[2025-02-09 19:40:39,592][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:40:39,683][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:40:39,703][root][INFO] - Image embeddings computed.
[2025-02-09 19:40:43,907][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:40:44,012][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:40:44,032][root][INFO] - Image embeddings computed.
[2025-02-09 19:40:48,197][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:40:48,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:40:48,327][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:41:07,602][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:41:07,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:41:07,626][root][INFO] - Image embeddings computed.
[2025-02-09 19:41:24,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:41:24,337][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:41:24,357][root][INFO] - Image embeddings computed.
[2025-02-09 19:41:28,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:41:28,548][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:41:28,568][root][INFO] - Image embeddings computed.
[2025-02-09 19:41:32,772][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:41:32,774][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:41:32,794][root][INFO] - Image embeddings computed.
[2025-02-09 19:41:36,970][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:41:36,978][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:41:36,998][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9358974358974359 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 14/50
[2025-02-09 19:42:03,248][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:42:03,254][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:42:03,285][root][INFO] - Image embeddings computed.
[2025-02-09 19:42:19,951][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:42:19,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:42:19,974][root][INFO] - Image embeddings computed.
[2025-02-09 19:42:24,185][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:42:24,188][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:42:24,208][root][INFO] - Image embeddings computed.
[2025-02-09 19:42:28,403][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:42:28,406][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:42:28,426][root][INFO] - Image embeddings computed.
[2025-02-09 19:42:32,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:42:32,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:42:32,645][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 15
Lang Goal: put the red blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9404761904761905 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 15/50
[2025-02-09 19:42:56,536][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:42:56,539][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:42:56,560][root][INFO] - Image embeddings computed.
[2025-02-09 19:43:13,079][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:43:13,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:43:13,108][root][INFO] - Image embeddings computed.
[2025-02-09 19:43:17,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:43:17,333][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:43:17,353][root][INFO] - Image embeddings computed.
[2025-02-09 19:43:21,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:43:21,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:43:21,564][root][INFO] - Image embeddings computed.
[2025-02-09 19:43:25,780][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:43:25,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:43:25,808][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.9444444444444444 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 16/50
[2025-02-09 19:43:48,574][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:43:48,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:43:48,599][root][INFO] - Image embeddings computed.
[2025-02-09 19:44:05,243][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:44:05,341][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:44:05,361][root][INFO] - Image embeddings computed.
[2025-02-09 19:44:09,562][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:44:09,653][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:44:09,673][root][INFO] - Image embeddings computed.
[2025-02-09 19:44:13,896][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:44:13,988][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:44:14,008][root][INFO] - Image embeddings computed.
[2025-02-09 19:44:18,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:44:18,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:44:18,333][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:44:39,172][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:44:39,271][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:44:39,291][root][INFO] - Image embeddings computed.
[2025-02-09 19:44:55,961][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:44:56,101][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:44:56,121][root][INFO] - Image embeddings computed.
[2025-02-09 19:45:00,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:45:00,387][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:45:00,407][root][INFO] - Image embeddings computed.
[2025-02-09 19:45:04,625][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:45:04,729][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:45:04,749][root][INFO] - Image embeddings computed.
[2025-02-09 19:45:08,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:45:09,027][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:45:09,046][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 14
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.9479166666666666 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 17/50
[2025-02-09 19:45:33,026][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:45:33,035][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:45:33,055][root][INFO] - Image embeddings computed.
[2025-02-09 19:45:49,679][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:45:49,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:45:49,702][root][INFO] - Image embeddings computed.
[2025-02-09 19:45:53,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:45:53,933][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:45:53,953][root][INFO] - Image embeddings computed.
[2025-02-09 19:45:58,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:45:58,139][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:45:58,173][root][INFO] - Image embeddings computed.
[2025-02-09 19:46:02,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:46:02,361][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:46:02,381][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 14
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9509803921568626 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 18/50
[2025-02-09 19:46:25,570][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:46:25,574][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:46:25,594][root][INFO] - Image embeddings computed.
[2025-02-09 19:46:42,221][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:46:42,224][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:46:42,243][root][INFO] - Image embeddings computed.
[2025-02-09 19:46:46,436][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:46:46,439][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:46:46,459][root][INFO] - Image embeddings computed.
[2025-02-09 19:46:50,656][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:46:50,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:46:50,684][root][INFO] - Image embeddings computed.
[2025-02-09 19:46:54,823][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:46:54,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:46:54,935][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9537037037037036 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 19/50
[2025-02-09 19:47:19,848][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:47:19,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:47:19,883][root][INFO] - Image embeddings computed.
[2025-02-09 19:47:37,910][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:47:37,913][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:47:37,933][root][INFO] - Image embeddings computed.
[2025-02-09 19:47:42,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:47:42,134][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:47:42,154][root][INFO] - Image embeddings computed.
[2025-02-09 19:47:46,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:47:46,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:47:46,361][root][INFO] - Image embeddings computed.
[2025-02-09 19:47:50,542][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:47:50,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:47:50,565][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 16
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:48:09,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:48:09,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:48:09,881][root][INFO] - Image embeddings computed.
[2025-02-09 19:48:26,742][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:48:26,745][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:48:26,765][root][INFO] - Image embeddings computed.
[2025-02-09 19:48:30,968][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:48:30,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:48:30,990][root][INFO] - Image embeddings computed.
[2025-02-09 19:48:35,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:48:35,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:48:35,211][root][INFO] - Image embeddings computed.
[2025-02-09 19:48:39,415][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:48:39,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:48:39,438][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:48:58,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:48:58,829][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:48:58,849][root][INFO] - Image embeddings computed.
[2025-02-09 19:49:15,614][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:49:15,621][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:49:15,641][root][INFO] - Image embeddings computed.
[2025-02-09 19:49:19,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:49:19,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:49:19,888][root][INFO] - Image embeddings computed.
[2025-02-09 19:49:24,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:49:24,077][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:49:24,097][root][INFO] - Image embeddings computed.
[2025-02-09 19:49:28,287][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:49:28,296][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:49:28,315][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 16
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9561403508771928 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 20/50
[2025-02-09 19:49:56,984][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:49:56,988][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:49:57,008][root][INFO] - Image embeddings computed.
[2025-02-09 19:50:13,580][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:50:13,673][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:50:13,715][root][INFO] - Image embeddings computed.
[2025-02-09 19:50:17,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:50:18,011][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:50:18,030][root][INFO] - Image embeddings computed.
[2025-02-09 19:50:22,235][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:50:22,357][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:50:22,377][root][INFO] - Image embeddings computed.
[2025-02-09 19:50:26,561][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:50:26,689][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:50:26,709][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 14
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:50:50,749][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:50:50,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:50:50,878][root][INFO] - Image embeddings computed.
[2025-02-09 19:51:07,421][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:51:07,521][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:51:07,541][root][INFO] - Image embeddings computed.
[2025-02-09 19:51:11,729][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:51:11,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:51:11,843][root][INFO] - Image embeddings computed.
[2025-02-09 19:51:16,055][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:51:16,147][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:51:16,166][root][INFO] - Image embeddings computed.
[2025-02-09 19:51:20,341][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:51:20,433][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:51:20,453][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 13
Lang Goal: put the green blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9583333333333333 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 21/50
[2025-02-09 19:51:49,814][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:51:49,818][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:51:49,837][root][INFO] - Image embeddings computed.
[2025-02-09 19:52:06,486][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:52:06,490][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:52:06,509][root][INFO] - Image embeddings computed.
[2025-02-09 19:52:10,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:52:10,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:52:10,815][root][INFO] - Image embeddings computed.
[2025-02-09 19:52:14,985][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:52:15,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:52:15,113][root][INFO] - Image embeddings computed.
[2025-02-09 19:52:19,298][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:52:19,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:52:19,409][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 14
Lang Goal: put the gray blocks in a red bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:52:39,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:52:39,412][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:52:39,432][root][INFO] - Image embeddings computed.
[2025-02-09 19:52:55,973][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:52:55,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:52:56,002][root][INFO] - Image embeddings computed.
[2025-02-09 19:53:00,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:53:00,228][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:53:00,248][root][INFO] - Image embeddings computed.
[2025-02-09 19:53:04,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:53:04,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:53:04,461][root][INFO] - Image embeddings computed.
[2025-02-09 19:53:08,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:53:08,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:53:08,684][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 12
Lang Goal: put the gray blocks in a red bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:53:30,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:53:30,350][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:53:30,370][root][INFO] - Image embeddings computed.
[2025-02-09 19:53:46,888][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:53:46,891][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:53:46,912][root][INFO] - Image embeddings computed.
[2025-02-09 19:53:51,106][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:53:51,109][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:53:51,129][root][INFO] - Image embeddings computed.
[2025-02-09 19:53:55,300][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:53:55,303][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:53:55,323][root][INFO] - Image embeddings computed.
[2025-02-09 19:53:59,523][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:53:59,526][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:53:59,551][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 14
Lang Goal: put the gray blocks in a red bowl
Total Reward: 0.500 | Done: False

Mean: 0.9365079365079364 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 22/50
[2025-02-09 19:54:30,681][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:54:30,802][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:54:30,822][root][INFO] - Image embeddings computed.
[2025-02-09 19:54:47,389][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:54:47,492][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:54:47,512][root][INFO] - Image embeddings computed.
[2025-02-09 19:54:51,689][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:54:51,820][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:54:51,841][root][INFO] - Image embeddings computed.
[2025-02-09 19:54:56,024][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:54:56,118][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:54:56,138][root][INFO] - Image embeddings computed.
[2025-02-09 19:55:00,329][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:55:00,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:55:00,476][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:55:23,948][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:55:24,040][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:55:24,060][root][INFO] - Image embeddings computed.
[2025-02-09 19:55:40,929][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:55:41,031][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:55:41,051][root][INFO] - Image embeddings computed.
[2025-02-09 19:55:45,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:55:45,319][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:55:45,339][root][INFO] - Image embeddings computed.
[2025-02-09 19:55:49,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:55:49,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:55:49,668][root][INFO] - Image embeddings computed.
[2025-02-09 19:55:53,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:55:53,952][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:55:53,972][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:56:15,476][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:56:15,486][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:56:15,506][root][INFO] - Image embeddings computed.
[2025-02-09 19:56:32,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:56:32,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:56:32,140][root][INFO] - Image embeddings computed.
[2025-02-09 19:56:36,322][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:56:36,330][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:56:36,351][root][INFO] - Image embeddings computed.
[2025-02-09 19:56:40,549][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:56:40,563][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:56:40,583][root][INFO] - Image embeddings computed.
[2025-02-09 19:56:44,767][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:56:44,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:56:44,878][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 13
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.500 | Done: False

Mean: 0.9166666666666665 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 23/50
[2025-02-09 19:57:16,408][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:57:16,506][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:57:16,526][root][INFO] - Image embeddings computed.
[2025-02-09 19:57:33,086][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:57:33,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:57:33,199][root][INFO] - Image embeddings computed.
[2025-02-09 19:57:37,404][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:57:37,496][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:57:37,516][root][INFO] - Image embeddings computed.
[2025-02-09 19:57:41,698][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:57:41,790][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:57:41,810][root][INFO] - Image embeddings computed.
[2025-02-09 19:57:45,983][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:57:46,087][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:57:46,107][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 16
Lang Goal: put the yellow blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-09 19:58:12,579][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:58:12,676][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:58:12,696][root][INFO] - Image embeddings computed.
[2025-02-09 19:58:29,249][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:58:29,364][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:58:29,384][root][INFO] - Image embeddings computed.
[2025-02-09 19:58:33,587][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:58:33,693][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:58:33,713][root][INFO] - Image embeddings computed.
[2025-02-09 19:58:37,884][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:58:37,987][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:58:38,007][root][INFO] - Image embeddings computed.
[2025-02-09 19:58:42,184][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:58:42,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:58:42,309][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 14
Lang Goal: put the yellow blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9202898550724636 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 24/50
[2025-02-09 19:59:14,225][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:59:14,228][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:59:14,248][root][INFO] - Image embeddings computed.
[2025-02-09 19:59:30,880][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:59:30,882][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:59:30,902][root][INFO] - Image embeddings computed.
[2025-02-09 19:59:35,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:59:35,075][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:59:35,096][root][INFO] - Image embeddings computed.
[2025-02-09 19:59:39,307][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:59:39,399][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:59:39,419][root][INFO] - Image embeddings computed.
[2025-02-09 19:59:43,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 19:59:43,699][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 19:59:43,719][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 18
Lang Goal: put the green blocks in a blue bowl
Total Reward: 0.333 | Done: False

[2025-02-09 20:00:07,520][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:00:07,528][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:00:07,548][root][INFO] - Image embeddings computed.
[2025-02-09 20:00:24,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:00:24,732][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:00:24,752][root][INFO] - Image embeddings computed.
[2025-02-09 20:00:28,921][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:00:29,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:00:29,038][root][INFO] - Image embeddings computed.
[2025-02-09 20:00:33,236][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:00:33,332][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:00:33,352][root][INFO] - Image embeddings computed.
[2025-02-09 20:00:37,538][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:00:37,629][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:00:37,649][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 20
Lang Goal: put the green blocks in a blue bowl
Total Reward: 0.667 | Done: False

[2025-02-09 20:01:02,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:01:02,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:01:02,372][root][INFO] - Image embeddings computed.
[2025-02-09 20:01:19,050][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:01:19,149][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:01:19,169][root][INFO] - Image embeddings computed.
[2025-02-09 20:01:23,345][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:01:23,455][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:01:23,475][root][INFO] - Image embeddings computed.
[2025-02-09 20:01:27,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:01:27,774][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:01:27,794][root][INFO] - Image embeddings computed.
[2025-02-09 20:01:32,002][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:01:32,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:01:32,118][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 19
Lang Goal: put the green blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.923611111111111 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 25/50
[2025-02-09 20:02:00,718][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:02:00,736][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:02:00,757][root][INFO] - Image embeddings computed.
[2025-02-09 20:02:17,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:02:17,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:02:17,375][root][INFO] - Image embeddings computed.
[2025-02-09 20:02:21,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:02:21,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:02:21,615][root][INFO] - Image embeddings computed.
[2025-02-09 20:02:25,838][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:02:25,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:02:25,867][root][INFO] - Image embeddings computed.
[2025-02-09 20:02:30,032][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:02:30,040][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:02:30,060][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:02:52,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:02:52,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:02:52,661][root][INFO] - Image embeddings computed.
[2025-02-09 20:03:09,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:03:09,572][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:03:09,591][root][INFO] - Image embeddings computed.
[2025-02-09 20:03:13,742][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:03:13,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:03:13,764][root][INFO] - Image embeddings computed.
[2025-02-09 20:03:17,962][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:03:17,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:03:17,985][root][INFO] - Image embeddings computed.
[2025-02-09 20:03:22,196][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:03:22,199][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:03:22,219][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9266666666666665 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 26/50
[2025-02-09 20:03:51,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:03:51,398][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:03:51,418][root][INFO] - Image embeddings computed.
[2025-02-09 20:04:08,063][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:04:08,071][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:04:08,091][root][INFO] - Image embeddings computed.
[2025-02-09 20:04:12,302][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:04:12,305][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:04:12,325][root][INFO] - Image embeddings computed.
[2025-02-09 20:04:16,533][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:04:16,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:04:16,566][root][INFO] - Image embeddings computed.
[2025-02-09 20:04:20,732][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:04:20,739][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:04:20,759][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 14
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:04:48,293][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:04:48,401][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:04:48,421][root][INFO] - Image embeddings computed.
[2025-02-09 20:05:04,987][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:05:05,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:05:05,113][root][INFO] - Image embeddings computed.
[2025-02-09 20:05:09,301][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:05:09,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:05:09,415][root][INFO] - Image embeddings computed.
[2025-02-09 20:05:13,620][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:05:13,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:05:13,732][root][INFO] - Image embeddings computed.
[2025-02-09 20:05:17,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:05:17,980][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:05:18,000][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.000 | Done: False

[2025-02-09 20:05:45,126][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:05:45,129][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:05:45,149][root][INFO] - Image embeddings computed.
[2025-02-09 20:06:01,720][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:06:01,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:06:01,874][root][INFO] - Image embeddings computed.
[2025-02-09 20:06:06,079][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:06:06,188][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:06:06,209][root][INFO] - Image embeddings computed.
[2025-02-09 20:06:10,424][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:06:10,524][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:06:10,544][root][INFO] - Image embeddings computed.
[2025-02-09 20:06:14,707][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:06:14,811][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:06:14,845][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 14
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.500 | Done: False

Mean: 0.9102564102564101 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 27/50
[2025-02-09 20:06:46,701][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:06:46,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:06:46,867][root][INFO] - Image embeddings computed.
[2025-02-09 20:07:03,515][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:07:03,607][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:07:03,628][root][INFO] - Image embeddings computed.
[2025-02-09 20:07:07,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:07:07,901][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:07:07,922][root][INFO] - Image embeddings computed.
[2025-02-09 20:07:12,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:07:12,204][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:07:12,224][root][INFO] - Image embeddings computed.
[2025-02-09 20:07:16,412][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:07:16,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:07:16,529][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 14
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9135802469135802 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 28/50
[2025-02-09 20:07:47,144][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:07:47,155][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:07:47,175][root][INFO] - Image embeddings computed.
[2025-02-09 20:08:03,795][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:08:03,810][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:08:03,829][root][INFO] - Image embeddings computed.
[2025-02-09 20:08:08,036][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:08:08,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:08:08,065][root][INFO] - Image embeddings computed.
[2025-02-09 20:08:12,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:08:12,261][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:08:12,281][root][INFO] - Image embeddings computed.
[2025-02-09 20:08:16,447][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:08:16,450][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:08:16,470][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: put the gray blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:08:40,378][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:08:40,406][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:08:40,426][root][INFO] - Image embeddings computed.
[2025-02-09 20:08:57,021][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:08:57,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:08:57,044][root][INFO] - Image embeddings computed.
[2025-02-09 20:09:01,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:09:01,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:09:01,253][root][INFO] - Image embeddings computed.
[2025-02-09 20:09:05,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:09:05,472][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:09:05,492][root][INFO] - Image embeddings computed.
[2025-02-09 20:09:09,660][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:09:09,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:09:09,683][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: put the gray blocks in a cyan bowl
Total Reward: 0.000 | Done: False

[2025-02-09 20:09:36,500][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:09:36,598][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:09:36,618][root][INFO] - Image embeddings computed.
[2025-02-09 20:09:53,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:09:53,373][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:09:53,394][root][INFO] - Image embeddings computed.
[2025-02-09 20:09:57,604][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:09:57,704][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:09:57,725][root][INFO] - Image embeddings computed.
[2025-02-09 20:10:01,918][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:10:02,022][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:10:02,043][root][INFO] - Image embeddings computed.
[2025-02-09 20:10:06,219][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:10:06,316][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:10:06,336][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 16
Lang Goal: put the gray blocks in a cyan bowl
Total Reward: 0.500 | Done: False

Mean: 0.8988095238095237 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 29/50
[2025-02-09 20:10:42,596][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:10:42,689][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:10:42,709][root][INFO] - Image embeddings computed.
[2025-02-09 20:10:59,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:10:59,362][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:10:59,393][root][INFO] - Image embeddings computed.
[2025-02-09 20:11:03,576][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:11:03,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:11:03,599][root][INFO] - Image embeddings computed.
[2025-02-09 20:11:07,798][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:11:07,801][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:11:07,820][root][INFO] - Image embeddings computed.
[2025-02-09 20:11:11,984][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:11:11,987][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:11:12,007][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 17
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:11:39,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:11:39,524][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:11:39,544][root][INFO] - Image embeddings computed.
[2025-02-09 20:11:56,194][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:11:56,208][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:11:56,228][root][INFO] - Image embeddings computed.
[2025-02-09 20:12:00,368][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:12:00,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:12:00,395][root][INFO] - Image embeddings computed.
[2025-02-09 20:12:04,592][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:12:04,605][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:12:04,625][root][INFO] - Image embeddings computed.
[2025-02-09 20:12:08,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:12:08,804][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:12:08,824][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9022988505747126 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 30/50
[2025-02-09 20:12:45,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:12:45,728][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:12:45,749][root][INFO] - Image embeddings computed.
[2025-02-09 20:13:02,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:13:02,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:13:02,456][root][INFO] - Image embeddings computed.
[2025-02-09 20:13:06,646][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:13:06,738][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:13:06,758][root][INFO] - Image embeddings computed.
[2025-02-09 20:13:10,965][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:13:11,144][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:13:11,164][root][INFO] - Image embeddings computed.
[2025-02-09 20:13:15,320][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:13:15,412][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:13:15,432][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 15
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:13:43,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:13:43,849][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:13:43,869][root][INFO] - Image embeddings computed.
[2025-02-09 20:14:00,430][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:14:00,527][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:14:00,546][root][INFO] - Image embeddings computed.
[2025-02-09 20:14:04,739][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:14:04,834][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:14:04,854][root][INFO] - Image embeddings computed.
[2025-02-09 20:14:09,032][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:14:09,126][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:14:09,146][root][INFO] - Image embeddings computed.
[2025-02-09 20:14:13,316][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:14:13,407][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:14:13,427][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 15
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9055555555555554 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 31/50
[2025-02-09 20:14:45,017][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:14:45,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:14:45,041][root][INFO] - Image embeddings computed.
[2025-02-09 20:15:01,611][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:15:01,614][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:15:01,634][root][INFO] - Image embeddings computed.
[2025-02-09 20:15:05,838][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:15:05,940][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:15:05,960][root][INFO] - Image embeddings computed.
[2025-02-09 20:15:10,157][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:15:10,248][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:15:10,268][root][INFO] - Image embeddings computed.
[2025-02-09 20:15:14,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:15:14,542][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:15:14,584][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 10
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9086021505376344 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 32/50
[2025-02-09 20:15:48,360][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:15:48,369][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:15:48,389][root][INFO] - Image embeddings computed.
[2025-02-09 20:16:04,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:16:04,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:16:04,946][root][INFO] - Image embeddings computed.
[2025-02-09 20:16:09,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:16:09,148][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:16:09,168][root][INFO] - Image embeddings computed.
[2025-02-09 20:16:13,348][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:16:13,350][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:16:13,370][root][INFO] - Image embeddings computed.
[2025-02-09 20:16:17,533][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:16:17,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:16:17,555][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 14
Lang Goal: put the red blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.9114583333333333 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 33/50
[2025-02-09 20:16:48,392][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:16:48,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:16:48,416][root][INFO] - Image embeddings computed.
[2025-02-09 20:17:04,876][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:17:04,879][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:17:04,899][root][INFO] - Image embeddings computed.
[2025-02-09 20:17:09,087][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:17:09,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:17:09,110][root][INFO] - Image embeddings computed.
[2025-02-09 20:17:13,284][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:17:13,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:17:13,307][root][INFO] - Image embeddings computed.
[2025-02-09 20:17:17,505][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:17:17,508][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:17:17,528][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 10
Lang Goal: put the green blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.914141414141414 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 34/50
[2025-02-09 20:17:52,781][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:17:52,893][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:17:52,913][root][INFO] - Image embeddings computed.
[2025-02-09 20:18:09,424][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:18:09,557][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:18:09,577][root][INFO] - Image embeddings computed.
[2025-02-09 20:18:13,763][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:18:13,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:18:13,874][root][INFO] - Image embeddings computed.
[2025-02-09 20:18:18,059][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:18:18,157][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:18:18,177][root][INFO] - Image embeddings computed.
[2025-02-09 20:18:22,341][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:18:22,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:18:22,455][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 12
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9166666666666666 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 35/50
[2025-02-09 20:18:59,988][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:19:00,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:19:00,136][root][INFO] - Image embeddings computed.
[2025-02-09 20:19:16,651][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:19:16,750][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:19:16,770][root][INFO] - Image embeddings computed.
[2025-02-09 20:19:20,993][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:19:21,106][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:19:21,126][root][INFO] - Image embeddings computed.
[2025-02-09 20:19:25,317][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:19:25,421][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:19:25,441][root][INFO] - Image embeddings computed.
[2025-02-09 20:19:29,595][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:19:29,688][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:19:29,708][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 14
Lang Goal: put the red blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.919047619047619 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 36/50
[2025-02-09 20:20:03,124][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:20:03,130][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:20:03,150][root][INFO] - Image embeddings computed.
[2025-02-09 20:20:19,694][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:20:19,697][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:20:19,716][root][INFO] - Image embeddings computed.
[2025-02-09 20:20:23,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:20:23,907][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:20:23,926][root][INFO] - Image embeddings computed.
[2025-02-09 20:20:28,114][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:20:28,117][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:20:28,137][root][INFO] - Image embeddings computed.
[2025-02-09 20:20:32,328][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:20:32,330][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:20:32,350][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 13
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:20:59,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:20:59,384][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:20:59,404][root][INFO] - Image embeddings computed.
[2025-02-09 20:21:15,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:21:15,894][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:21:15,914][root][INFO] - Image embeddings computed.
[2025-02-09 20:21:20,096][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:21:20,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:21:20,118][root][INFO] - Image embeddings computed.
[2025-02-09 20:21:24,295][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:21:24,298][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:21:24,318][root][INFO] - Image embeddings computed.
[2025-02-09 20:21:28,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:21:28,537][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:21:28,557][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 13
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.000 | Done: False

[2025-02-09 20:21:57,329][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:21:57,438][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:21:57,459][root][INFO] - Image embeddings computed.
[2025-02-09 20:22:14,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:22:14,123][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:22:14,143][root][INFO] - Image embeddings computed.
[2025-02-09 20:22:18,326][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:22:18,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:22:18,438][root][INFO] - Image embeddings computed.
[2025-02-09 20:22:22,638][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:22:22,730][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:22:22,750][root][INFO] - Image embeddings computed.
[2025-02-09 20:22:26,972][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:22:27,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:22:27,108][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 12
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.500 | Done: False

Mean: 0.9074074074074073 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 37/50
[2025-02-09 20:23:05,364][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:23:05,462][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:23:05,482][root][INFO] - Image embeddings computed.
[2025-02-09 20:23:22,208][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:23:22,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:23:22,333][root][INFO] - Image embeddings computed.
[2025-02-09 20:23:26,513][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:23:26,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:23:26,639][root][INFO] - Image embeddings computed.
[2025-02-09 20:23:30,797][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:23:30,894][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:23:30,914][root][INFO] - Image embeddings computed.
[2025-02-09 20:23:35,078][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:23:35,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:23:35,236][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:24:06,708][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:24:06,719][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:24:06,739][root][INFO] - Image embeddings computed.
[2025-02-09 20:24:23,231][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:24:23,234][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:24:23,254][root][INFO] - Image embeddings computed.
[2025-02-09 20:24:27,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:24:27,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:24:27,454][root][INFO] - Image embeddings computed.
[2025-02-09 20:24:31,620][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:24:31,623][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:24:31,643][root][INFO] - Image embeddings computed.
[2025-02-09 20:24:35,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:24:35,804][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:24:35,824][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.9099099099099098 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 38/50
[2025-02-09 20:25:13,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:25:13,642][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:25:13,662][root][INFO] - Image embeddings computed.
[2025-02-09 20:25:30,175][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:25:30,190][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:25:30,210][root][INFO] - Image embeddings computed.
[2025-02-09 20:25:34,412][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:25:34,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:25:34,438][root][INFO] - Image embeddings computed.
[2025-02-09 20:25:38,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:25:38,642][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:25:38,662][root][INFO] - Image embeddings computed.
[2025-02-09 20:25:42,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:25:42,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:25:42,879][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9122807017543859 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 39/50
[2025-02-09 20:26:18,284][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:26:18,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:26:18,307][root][INFO] - Image embeddings computed.
[2025-02-09 20:26:34,751][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:26:34,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:26:34,774][root][INFO] - Image embeddings computed.
[2025-02-09 20:26:38,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:26:38,973][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:26:38,993][root][INFO] - Image embeddings computed.
[2025-02-09 20:26:43,191][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:26:43,193][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:26:43,213][root][INFO] - Image embeddings computed.
[2025-02-09 20:26:47,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:26:47,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:26:47,402][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 13
Lang Goal: put the yellow blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9145299145299145 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 40/50
[2025-02-09 20:27:25,840][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:27:25,945][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:27:25,965][root][INFO] - Image embeddings computed.
[2025-02-09 20:27:42,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:27:42,676][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:27:42,696][root][INFO] - Image embeddings computed.
[2025-02-09 20:27:46,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:27:46,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:27:46,990][root][INFO] - Image embeddings computed.
[2025-02-09 20:27:51,170][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:27:51,263][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:27:51,283][root][INFO] - Image embeddings computed.
[2025-02-09 20:27:55,413][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:27:55,534][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:27:55,554][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9166666666666666 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 41/50
[2025-02-09 20:28:30,658][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:28:30,661][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:28:30,681][root][INFO] - Image embeddings computed.
[2025-02-09 20:28:47,316][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:28:47,319][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:28:47,339][root][INFO] - Image embeddings computed.
[2025-02-09 20:28:51,538][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:28:51,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:28:51,561][root][INFO] - Image embeddings computed.
[2025-02-09 20:28:55,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:28:55,772][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:28:55,792][root][INFO] - Image embeddings computed.
[2025-02-09 20:28:59,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:28:59,950][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:28:59,969][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 13
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9186991869918698 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 42/50
[2025-02-09 20:29:39,981][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:29:40,101][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:29:40,121][root][INFO] - Image embeddings computed.
[2025-02-09 20:29:56,623][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:29:56,715][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:29:56,735][root][INFO] - Image embeddings computed.
[2025-02-09 20:30:00,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:30:01,022][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:30:01,048][root][INFO] - Image embeddings computed.
[2025-02-09 20:30:05,234][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:30:05,325][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:30:05,345][root][INFO] - Image embeddings computed.
[2025-02-09 20:30:09,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:30:09,601][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:30:09,621][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:30:44,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:30:44,196][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:30:44,216][root][INFO] - Image embeddings computed.
[2025-02-09 20:31:00,759][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:31:00,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:31:00,897][root][INFO] - Image embeddings computed.
[2025-02-09 20:31:05,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:31:05,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:31:05,212][root][INFO] - Image embeddings computed.
[2025-02-09 20:31:09,402][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:31:09,505][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:31:09,525][root][INFO] - Image embeddings computed.
[2025-02-09 20:31:13,660][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:31:13,769][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:31:13,789][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9206349206349206 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 43/50
[2025-02-09 20:31:51,664][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:31:51,797][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:31:51,818][root][INFO] - Image embeddings computed.
[2025-02-09 20:32:08,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:32:08,438][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:32:08,465][root][INFO] - Image embeddings computed.
[2025-02-09 20:32:12,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:32:12,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:32:12,833][root][INFO] - Image embeddings computed.
[2025-02-09 20:32:17,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:32:17,205][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:32:17,225][root][INFO] - Image embeddings computed.
[2025-02-09 20:32:21,409][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:32:21,577][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:32:21,597][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9224806201550387 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 44/50
[2025-02-09 20:33:01,354][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:33:01,458][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:33:01,478][root][INFO] - Image embeddings computed.
[2025-02-09 20:33:18,011][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:33:18,105][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:33:18,126][root][INFO] - Image embeddings computed.
[2025-02-09 20:33:22,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:33:22,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:33:22,444][root][INFO] - Image embeddings computed.
[2025-02-09 20:33:26,609][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:33:26,706][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:33:26,726][root][INFO] - Image embeddings computed.
[2025-02-09 20:33:30,899][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:33:30,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:33:31,021][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 14
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:34:05,680][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:34:05,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:34:05,867][root][INFO] - Image embeddings computed.
[2025-02-09 20:34:22,434][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:34:22,526][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:34:22,546][root][INFO] - Image embeddings computed.
[2025-02-09 20:34:26,743][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:34:26,835][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:34:26,854][root][INFO] - Image embeddings computed.
[2025-02-09 20:34:31,029][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:34:31,150][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:34:31,172][root][INFO] - Image embeddings computed.
[2025-02-09 20:34:35,346][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:34:35,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:34:35,462][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 14
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9242424242424242 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 45/50
[2025-02-09 20:35:16,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:35:16,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:35:16,564][root][INFO] - Image embeddings computed.
[2025-02-09 20:35:33,110][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:35:33,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:35:33,135][root][INFO] - Image embeddings computed.
[2025-02-09 20:35:37,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:35:37,343][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:35:37,363][root][INFO] - Image embeddings computed.
[2025-02-09 20:35:41,533][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:35:41,555][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:35:41,575][root][INFO] - Image embeddings computed.
[2025-02-09 20:35:45,752][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:35:45,755][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:35:45,775][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.000 | Done: False

[2025-02-09 20:36:17,758][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:36:17,761][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:36:17,782][root][INFO] - Image embeddings computed.
[2025-02-09 20:36:34,371][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:36:34,374][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:36:34,394][root][INFO] - Image embeddings computed.
[2025-02-09 20:36:38,561][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:36:38,564][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:36:38,584][root][INFO] - Image embeddings computed.
[2025-02-09 20:36:42,742][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:36:42,745][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:36:42,765][root][INFO] - Image embeddings computed.
[2025-02-09 20:36:46,947][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:36:46,949][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:36:46,969][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 16
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:37:22,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:37:22,269][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:37:22,289][root][INFO] - Image embeddings computed.
[2025-02-09 20:37:38,870][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:37:38,879][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:37:38,898][root][INFO] - Image embeddings computed.
[2025-02-09 20:37:43,056][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:37:43,059][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:37:43,079][root][INFO] - Image embeddings computed.
[2025-02-09 20:37:47,229][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:37:47,231][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:37:47,251][root][INFO] - Image embeddings computed.
[2025-02-09 20:37:51,433][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:37:51,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:37:51,456][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 15
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.000 | Done: False

Mean: 0.9037037037037037 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 46/50
[2025-02-09 20:38:29,039][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:38:29,042][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:38:29,062][root][INFO] - Image embeddings computed.
[2025-02-09 20:38:45,607][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:38:45,610][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:38:45,630][root][INFO] - Image embeddings computed.
[2025-02-09 20:38:49,811][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:38:49,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:38:49,833][root][INFO] - Image embeddings computed.
[2025-02-09 20:38:54,014][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:38:54,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:38:54,037][root][INFO] - Image embeddings computed.
[2025-02-09 20:38:58,233][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:38:58,247][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:38:58,266][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:39:30,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:39:30,126][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:39:30,146][root][INFO] - Image embeddings computed.
[2025-02-09 20:39:46,725][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:39:46,728][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:39:46,748][root][INFO] - Image embeddings computed.
[2025-02-09 20:39:50,907][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:39:50,910][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:39:50,930][root][INFO] - Image embeddings computed.
[2025-02-09 20:39:55,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:39:55,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:39:55,141][root][INFO] - Image embeddings computed.
[2025-02-09 20:39:59,331][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:39:59,334][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:39:59,353][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 15
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9057971014492753 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 47/50
[2025-02-09 20:40:42,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:40:42,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:40:42,253][root][INFO] - Image embeddings computed.
[2025-02-09 20:40:58,742][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:40:58,864][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:40:58,884][root][INFO] - Image embeddings computed.
[2025-02-09 20:41:03,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:41:03,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:41:03,179][root][INFO] - Image embeddings computed.
[2025-02-09 20:41:07,608][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:41:07,699][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:41:07,719][root][INFO] - Image embeddings computed.
[2025-02-09 20:41:11,879][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:41:11,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:41:11,998][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 16
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:41:44,491][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:41:44,497][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:41:44,517][root][INFO] - Image embeddings computed.
[2025-02-09 20:42:01,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:42:01,044][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:42:01,064][root][INFO] - Image embeddings computed.
[2025-02-09 20:42:05,233][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:42:05,236][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:42:05,256][root][INFO] - Image embeddings computed.
[2025-02-09 20:42:09,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:42:09,463][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:42:09,483][root][INFO] - Image embeddings computed.
[2025-02-09 20:42:13,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:42:13,660][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:42:13,680][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-09 20:42:49,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:42:49,398][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:42:49,418][root][INFO] - Image embeddings computed.
[2025-02-09 20:43:05,841][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:43:05,945][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:43:05,965][root][INFO] - Image embeddings computed.
[2025-02-09 20:43:10,129][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:43:10,221][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:43:10,240][root][INFO] - Image embeddings computed.
[2025-02-09 20:43:14,447][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:43:14,549][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:43:14,569][root][INFO] - Image embeddings computed.
[2025-02-09 20:43:18,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:43:18,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:43:18,861][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 17
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.8971631205673758 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 48/50
[2025-02-09 20:43:57,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:43:57,845][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:43:57,865][root][INFO] - Image embeddings computed.
[2025-02-09 20:44:14,391][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:44:14,394][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:44:14,414][root][INFO] - Image embeddings computed.
[2025-02-09 20:44:18,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:44:18,603][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:44:18,623][root][INFO] - Image embeddings computed.
[2025-02-09 20:44:22,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:44:22,822][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:44:22,842][root][INFO] - Image embeddings computed.
[2025-02-09 20:44:27,015][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:44:27,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:44:27,038][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 17
Lang Goal: put the brown blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.8993055555555555 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 49/50
[2025-02-09 20:45:05,578][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:45:05,585][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:45:05,605][root][INFO] - Image embeddings computed.
[2025-02-09 20:45:22,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:45:22,178][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:45:22,197][root][INFO] - Image embeddings computed.
[2025-02-09 20:45:26,410][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:45:26,413][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:45:26,433][root][INFO] - Image embeddings computed.
[2025-02-09 20:45:30,609][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:45:30,701][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:45:30,721][root][INFO] - Image embeddings computed.
[2025-02-09 20:45:34,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:45:34,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:45:34,929][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 12
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9013605442176871 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 50/50
[2025-02-09 20:46:14,982][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:46:14,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:46:15,006][root][INFO] - Image embeddings computed.
[2025-02-09 20:46:31,461][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:46:31,464][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:46:31,484][root][INFO] - Image embeddings computed.
[2025-02-09 20:46:35,671][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:46:35,674][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:46:35,694][root][INFO] - Image embeddings computed.
[2025-02-09 20:46:39,883][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:46:39,886][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:46:39,906][root][INFO] - Image embeddings computed.
[2025-02-09 20:46:44,035][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 20:46:44,038][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 20:46:44,058][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: put the blue blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9033333333333333 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
text argument:/home/a/acw799/cliport/cliport/environments/assets/
int args: [