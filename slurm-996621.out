pybullet build time: Nov 28 2023 23:45:17
Save path for results: /home/a/acw799/cliport/exps_clipfit/assembling-kits-seq-seen-colors-clipfit-n10-train/checkpoints/
Evaluating: ['steps=00040-val_loss=0.00017019.ckpt', 'steps=00080-val_loss=0.00015124.ckpt', 'steps=00120-val_loss=0.00014645.ckpt', 'steps=00160-val_loss=0.00014166.ckpt', 'steps=00200-val_loss=0.00014531.ckpt']
[2025-02-08 20:27:55,366][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 20:27:55,830][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 20:28:03,079][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-08 20:28:16,607][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 20:28:16,754][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 20:28:23,464][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-08 20:28:25,714][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 20:28:25,853][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 20:28:32,399][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-08 20:28:34,663][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 20:28:34,805][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 20:28:41,261][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: assembling-kits-seq-seen-colors-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/assembling-kits-seq-seen-colors-clipfit-n10-train/checkpoints/steps=00040-val_loss=0.00017019.ckpt
Test: 1/50
[2025-02-08 20:29:19,531][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:19,668][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:20,019][root][INFO] - Image embeddings computed.
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Memory efficient kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:723.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Memory Efficient attention has been runtime disabled. (Triggered internally at ../aten/src/ATen/native/transformers/sdp_utils_cpp.h:495.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Flash attention kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:725.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Expected query, key and value to all be of dtype: {Half, BFloat16}. Got Query dtype: float, Key dtype: float, and Value dtype: float instead. (Triggered internally at ../aten/src/ATen/native/transformers/sdp_utils_cpp.h:98.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: CuDNN attention kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:727.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: The CuDNN backend needs to be enabled by setting the enviornment variable`TORCH_CUDNN_SDPA_ENABLED=1` (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:496.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/home/a/acw799/.local/lib/python3.10/site-packages/torch/nn/modules/module.py:1562: UserWarning: Flash Attention kernel failed due to: No available kernel. Aborting execution.
Falling back to all available kernels for scaled_dot_product_attention (which may have a slower speed).
  return forward_call(*args, **kwargs)
[2025-02-08 20:29:36,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:36,550][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:36,570][root][INFO] - Image embeddings computed.
[2025-02-08 20:29:40,710][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:40,717][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:40,737][root][INFO] - Image embeddings computed.
[2025-02-08 20:29:44,885][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:44,889][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:44,909][root][INFO] - Image embeddings computed.
[2025-02-08 20:29:49,027][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:49,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:49,050][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: put the cyan letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:29:58,531][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:58,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:58,564][root][INFO] - Image embeddings computed.
[2025-02-08 20:30:14,929][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:14,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:14,957][root][INFO] - Image embeddings computed.
[2025-02-08 20:30:19,134][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:19,151][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:19,171][root][INFO] - Image embeddings computed.
[2025-02-08 20:30:23,331][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:23,428][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:23,448][root][INFO] - Image embeddings computed.
[2025-02-08 20:30:27,596][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:27,704][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:27,729][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: put the cyan letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:30:37,516][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:37,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:37,539][root][INFO] - Image embeddings computed.
[2025-02-08 20:30:53,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:53,777][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:53,797][root][INFO] - Image embeddings computed.
[2025-02-08 20:30:57,975][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:57,983][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:58,003][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:02,162][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:02,170][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:02,190][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:06,356][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:06,362][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:06,382][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the cyan letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:31:16,046][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:16,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:16,077][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:32,326][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:32,333][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:32,353][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:36,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:36,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:36,564][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:40,727][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:40,735][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:40,755][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:44,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:44,943][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:44,963][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 13
Lang Goal: put the cyan letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:31:54,481][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:54,490][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:54,510][root][INFO] - Image embeddings computed.
[2025-02-08 20:32:10,806][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:10,814][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:10,834][root][INFO] - Image embeddings computed.
[2025-02-08 20:32:15,020][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:15,022][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:15,043][root][INFO] - Image embeddings computed.
[2025-02-08 20:32:19,216][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:19,224][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:19,244][root][INFO] - Image embeddings computed.
[2025-02-08 20:32:23,430][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:23,437][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:23,457][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: put the cyan letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 2/50
[2025-02-08 20:32:37,253][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:37,269][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:37,290][root][INFO] - Image embeddings computed.
[2025-02-08 20:32:53,893][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:53,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:53,920][root][INFO] - Image embeddings computed.
[2025-02-08 20:32:58,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:58,094][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:58,114][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:02,290][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:02,298][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:02,318][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:06,494][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:06,516][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:06,536][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 18
Lang Goal: put the red letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:33:16,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:16,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:16,788][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:33,308][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:33,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:33,334][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:37,500][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:37,508][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:37,528][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:41,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:41,714][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:41,735][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:45,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:45,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:45,947][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the red letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:33:56,364][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:56,374][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:56,395][root][INFO] - Image embeddings computed.
[2025-02-08 20:34:12,822][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:12,832][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:12,852][root][INFO] - Image embeddings computed.
[2025-02-08 20:34:17,035][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:17,038][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:17,058][root][INFO] - Image embeddings computed.
[2025-02-08 20:34:21,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:21,230][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:21,251][root][INFO] - Image embeddings computed.
[2025-02-08 20:34:25,441][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:25,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:25,467][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 19
Lang Goal: put the red letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:34:35,954][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:35,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:35,978][root][INFO] - Image embeddings computed.
[2025-02-08 20:34:52,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:52,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:52,410][root][INFO] - Image embeddings computed.
[2025-02-08 20:34:56,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:56,587][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:56,607][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:00,783][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:00,791][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:00,811][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:04,997][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:05,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:05,026][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the red letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:35:16,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:16,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:16,116][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:32,519][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:32,527][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:32,547][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:36,721][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:36,729][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:36,750][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:40,931][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:40,938][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:40,959][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:45,142][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:45,149][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:45,169][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the red letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 3/50
[2025-02-08 20:36:00,017][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:00,022][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:00,042][root][INFO] - Image embeddings computed.
[2025-02-08 20:36:16,473][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:16,482][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:16,502][root][INFO] - Image embeddings computed.
[2025-02-08 20:36:20,669][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:20,672][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:20,692][root][INFO] - Image embeddings computed.
[2025-02-08 20:36:24,867][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:24,870][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:24,890][root][INFO] - Image embeddings computed.
[2025-02-08 20:36:29,048][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:29,056][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:29,076][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 14
Lang Goal: put the blue heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:36:40,518][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:40,531][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:40,551][root][INFO] - Image embeddings computed.
[2025-02-08 20:36:56,924][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:56,931][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:56,952][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:01,124][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:01,133][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:01,153][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:05,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:05,332][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:05,353][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:09,510][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:09,513][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:09,533][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: put the blue heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:37:21,391][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:21,494][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:21,515][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:37,985][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:37,993][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:38,013][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:42,174][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:42,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:42,202][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:46,337][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:46,345][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:46,365][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:50,519][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:50,529][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:50,549][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: put the blue heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:38:03,180][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:03,196][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:03,216][root][INFO] - Image embeddings computed.
[2025-02-08 20:38:19,706][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:19,714][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:19,734][root][INFO] - Image embeddings computed.
[2025-02-08 20:38:23,898][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:23,905][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:23,949][root][INFO] - Image embeddings computed.
[2025-02-08 20:38:28,089][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:28,097][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:28,117][root][INFO] - Image embeddings computed.
[2025-02-08 20:38:32,273][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:32,276][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:32,296][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 13
Lang Goal: put the blue heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:38:44,483][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:44,486][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:44,506][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:01,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:01,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:01,030][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:05,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:05,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:05,211][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:09,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:09,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:09,373][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:13,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:13,547][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:13,567][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: put the blue heart in the heart hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 4/50
[2025-02-08 20:39:29,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:29,869][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:29,897][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:46,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:46,549][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:46,569][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:50,741][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:50,748][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:50,769][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:54,995][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:54,997][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:55,017][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:59,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:59,157][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:59,177][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: put the red heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:40:12,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:40:12,685][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:40:12,706][root][INFO] - Image embeddings computed.
[2025-02-08 20:40:29,422][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:40:29,430][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:40:29,450][root][INFO] - Image embeddings computed.
[2025-02-08 20:40:33,645][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:40:33,653][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:40:33,673][root][INFO] - Image embeddings computed.
[2025-02-08 20:40:37,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:40:37,870][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:40:37,890][root][INFO] - Image embeddings computed.
[2025-02-08 20:40:41,999][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:40:42,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:40:42,026][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 20
Lang Goal: put the red heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:40:55,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:40:55,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:40:55,631][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:12,029][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:12,035][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:12,055][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:16,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:16,213][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:16,233][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:20,472][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:20,480][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:20,500][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:24,644][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:24,662][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:24,682][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 17
Lang Goal: put the red heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:41:38,917][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:38,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:38,947][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:55,428][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:55,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:55,557][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:59,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:59,808][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:59,828][root][INFO] - Image embeddings computed.
[2025-02-08 20:42:04,238][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:04,359][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:04,379][root][INFO] - Image embeddings computed.
[2025-02-08 20:42:08,513][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:08,616][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:08,636][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 15
Lang Goal: put the red heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:42:22,620][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:22,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:22,653][root][INFO] - Image embeddings computed.
[2025-02-08 20:42:39,067][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:39,190][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:39,217][root][INFO] - Image embeddings computed.
[2025-02-08 20:42:43,355][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:43,462][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:43,482][root][INFO] - Image embeddings computed.
[2025-02-08 20:42:47,675][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:47,789][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:47,809][root][INFO] - Image embeddings computed.
[2025-02-08 20:42:51,943][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:51,951][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:51,971][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 15
Lang Goal: put the red heart in the heart hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 5/50
[2025-02-08 20:43:12,540][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:12,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:12,574][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:29,197][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:29,204][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:29,243][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:33,420][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:33,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:33,455][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:37,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:37,603][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:37,623][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:41,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:41,775][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:41,795][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: put the yellow letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:43:56,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:56,263][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:56,283][root][INFO] - Image embeddings computed.
[2025-02-08 20:44:12,832][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:44:12,840][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:44:12,860][root][INFO] - Image embeddings computed.
[2025-02-08 20:44:17,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:44:17,059][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:44:17,079][root][INFO] - Image embeddings computed.
[2025-02-08 20:44:21,219][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:44:21,222][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:44:21,242][root][INFO] - Image embeddings computed.
[2025-02-08 20:44:25,350][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:44:25,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:44:25,373][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 18
Lang Goal: put the yellow letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:44:40,431][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:44:40,434][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:44:40,454][root][INFO] - Image embeddings computed.
[2025-02-08 20:44:57,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:44:57,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:44:57,041][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:01,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:01,221][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:01,241][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:05,381][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:05,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:05,409][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:09,520][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:09,523][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:09,543][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 17
Lang Goal: put the yellow letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:45:24,747][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:24,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:24,867][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:41,427][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:41,535][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:41,555][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:45,729][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:45,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:45,846][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:49,988][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:50,087][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:50,121][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:54,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:54,327][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:54,347][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: put the yellow letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:46:09,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:46:10,044][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:46:10,064][root][INFO] - Image embeddings computed.
[2025-02-08 20:46:26,747][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:46:26,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:46:26,866][root][INFO] - Image embeddings computed.
[2025-02-08 20:46:31,042][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:46:31,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:46:31,158][root][INFO] - Image embeddings computed.
[2025-02-08 20:46:35,299][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:46:35,463][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:46:35,489][root][INFO] - Image embeddings computed.
[2025-02-08 20:46:39,599][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:46:39,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:46:39,733][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 15
Lang Goal: put the yellow letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 6/50
[2025-02-08 20:46:59,276][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:46:59,409][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:46:59,434][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:16,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:16,318][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:16,338][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:20,520][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:20,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:20,636][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:24,818][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:24,914][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:24,934][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:29,069][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:29,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:29,189][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 23
Lang Goal: put the yellow letter L shape in the right letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:47:46,296][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:46,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:46,327][root][INFO] - Image embeddings computed.
[2025-02-08 20:48:02,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:48:02,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:48:02,931][root][INFO] - Image embeddings computed.
[2025-02-08 20:48:07,121][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:48:07,130][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:48:07,151][root][INFO] - Image embeddings computed.
[2025-02-08 20:48:11,315][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:48:11,323][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:48:11,343][root][INFO] - Image embeddings computed.
[2025-02-08 20:48:15,458][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:48:15,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:48:15,481][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 20
Lang Goal: put the yellow letter L shape in the right letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:48:32,180][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:48:32,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:48:32,211][root][INFO] - Image embeddings computed.
[2025-02-08 20:48:48,753][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:48:48,759][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:48:48,780][root][INFO] - Image embeddings computed.
[2025-02-08 20:48:52,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:48:52,963][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:48:52,983][root][INFO] - Image embeddings computed.
[2025-02-08 20:48:57,151][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:48:57,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:48:57,179][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:01,326][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:01,334][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:01,354][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 20
Lang Goal: put the yellow letter L shape in the right letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:49:18,181][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:18,186][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:18,207][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:34,740][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:34,748][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:34,768][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:38,929][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:38,936][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:38,956][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:43,126][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:43,134][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:43,154][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:47,283][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:47,292][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:47,312][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the yellow letter L shape in the right letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:50:04,749][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:50:04,763][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:50:04,784][root][INFO] - Image embeddings computed.
[2025-02-08 20:50:21,303][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:50:21,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:50:21,488][root][INFO] - Image embeddings computed.
[2025-02-08 20:50:25,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:50:25,757][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:50:25,778][root][INFO] - Image embeddings computed.
[2025-02-08 20:50:29,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:50:30,058][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:50:30,079][root][INFO] - Image embeddings computed.
[2025-02-08 20:50:34,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:50:34,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:50:34,388][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 21
Lang Goal: put the yellow letter L shape in the right letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 7/50
[2025-02-08 20:50:55,849][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:50:55,958][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:50:55,978][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:12,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:12,710][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:12,730][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:16,879][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:17,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:17,077][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:21,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:21,381][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:21,401][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:25,578][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:25,680][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:25,700][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 14
Lang Goal: put the yellow heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:51:43,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:43,164][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:43,185][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:59,584][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:59,595][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:59,615][root][INFO] - Image embeddings computed.
[2025-02-08 20:52:03,748][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:52:03,756][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:52:03,776][root][INFO] - Image embeddings computed.
[2025-02-08 20:52:07,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:52:07,943][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:52:07,963][root][INFO] - Image embeddings computed.
[2025-02-08 20:52:12,142][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:52:12,151][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:52:12,171][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 14
Lang Goal: put the yellow heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:52:29,597][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:52:29,600][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:52:29,620][root][INFO] - Image embeddings computed.
[2025-02-08 20:52:46,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:52:46,166][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:52:46,186][root][INFO] - Image embeddings computed.
[2025-02-08 20:52:50,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:52:50,332][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:52:50,352][root][INFO] - Image embeddings computed.
[2025-02-08 20:52:54,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:52:54,508][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:52:54,528][root][INFO] - Image embeddings computed.
[2025-02-08 20:52:58,707][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:52:58,715][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:52:58,735][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: put the yellow heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:53:16,293][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:16,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:16,327][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:32,736][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:32,741][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:32,761][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:36,890][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:36,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:36,923][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:41,064][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:41,067][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:41,087][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:45,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:45,275][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:45,295][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 13
Lang Goal: put the yellow heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:54:03,056][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:54:03,068][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:54:03,088][root][INFO] - Image embeddings computed.
[2025-02-08 20:54:19,664][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:54:19,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:54:19,690][root][INFO] - Image embeddings computed.
[2025-02-08 20:54:23,838][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:54:23,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:54:23,861][root][INFO] - Image embeddings computed.
[2025-02-08 20:54:28,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:54:28,005][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:54:28,025][root][INFO] - Image embeddings computed.
[2025-02-08 20:54:32,204][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:54:32,212][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:54:32,232][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 12
Lang Goal: put the yellow heart in the top heart hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 8/50
[2025-02-08 20:54:54,479][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:54:54,482][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:54:54,502][root][INFO] - Image embeddings computed.
[2025-02-08 20:55:10,909][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:10,917][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:10,937][root][INFO] - Image embeddings computed.
[2025-02-08 20:55:15,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:15,100][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:15,120][root][INFO] - Image embeddings computed.
[2025-02-08 20:55:19,279][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:19,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:19,307][root][INFO] - Image embeddings computed.
[2025-02-08 20:55:23,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:23,472][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:23,492][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 15
Lang Goal: put the red hexagon in the left hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:55:42,580][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:42,590][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:42,610][root][INFO] - Image embeddings computed.
[2025-02-08 20:55:59,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:59,100][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:59,120][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:03,251][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:03,259][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:03,279][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:07,453][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:07,459][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:07,479][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:11,660][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:11,668][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:11,703][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 12
Lang Goal: put the red hexagon in the left hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:56:30,636][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:30,639][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:30,659][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:47,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:47,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:47,030][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:51,166][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:51,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:51,189][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:55,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:55,361][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:55,381][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:59,563][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:59,571][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:59,591][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 11
Lang Goal: put the red hexagon in the left hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:57:18,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:18,578][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:18,598][root][INFO] - Image embeddings computed.
[2025-02-08 20:57:34,973][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:34,978][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:34,998][root][INFO] - Image embeddings computed.
[2025-02-08 20:57:39,143][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:39,145][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:39,166][root][INFO] - Image embeddings computed.
[2025-02-08 20:57:43,333][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:43,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:43,361][root][INFO] - Image embeddings computed.
[2025-02-08 20:57:47,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:47,553][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:47,583][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: put the red hexagon in the left hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:58:06,494][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:06,505][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:06,525][root][INFO] - Image embeddings computed.
[2025-02-08 20:58:22,943][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:22,952][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:22,972][root][INFO] - Image embeddings computed.
[2025-02-08 20:58:27,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:27,135][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:27,155][root][INFO] - Image embeddings computed.
[2025-02-08 20:58:31,317][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:31,319][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:31,339][root][INFO] - Image embeddings computed.
[2025-02-08 20:58:35,508][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:35,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:35,531][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 15
Lang Goal: put the red hexagon in the left hexagon hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 9/50
[2025-02-08 20:58:58,722][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:58,725][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:58,746][root][INFO] - Image embeddings computed.
[2025-02-08 20:59:15,222][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:59:15,230][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:59:15,250][root][INFO] - Image embeddings computed.
[2025-02-08 20:59:19,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:59:19,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:59:19,467][root][INFO] - Image embeddings computed.
[2025-02-08 20:59:23,638][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:59:23,645][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:59:23,665][root][INFO] - Image embeddings computed.
[2025-02-08 20:59:27,815][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:59:27,818][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:59:27,838][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: put the brown letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 20:59:47,806][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:59:47,819][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:59:47,839][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:04,351][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:04,375][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:04,395][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:08,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:08,576][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:08,596][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:12,764][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:12,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:12,793][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:16,920][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:16,925][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:16,945][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 21
Lang Goal: put the brown letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:00:38,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:38,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:38,030][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:54,372][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:54,375][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:54,395][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:58,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:58,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:58,574][root][INFO] - Image embeddings computed.
[2025-02-08 21:01:02,731][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:01:02,734][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:01:02,754][root][INFO] - Image embeddings computed.
[2025-02-08 21:01:06,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:01:06,891][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:01:06,912][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 20
Lang Goal: put the brown letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:01:28,408][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:01:28,423][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:01:28,443][root][INFO] - Image embeddings computed.
[2025-02-08 21:01:45,048][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:01:45,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:01:45,078][root][INFO] - Image embeddings computed.
[2025-02-08 21:01:49,299][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:01:49,309][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:01:49,329][root][INFO] - Image embeddings computed.
[2025-02-08 21:01:53,485][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:01:53,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:01:53,513][root][INFO] - Image embeddings computed.
[2025-02-08 21:01:57,673][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:01:57,680][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:01:57,700][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 19
Lang Goal: put the brown letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:02:18,871][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:18,880][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:18,900][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:35,521][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:35,529][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:35,549][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:39,714][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:39,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:39,741][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:43,905][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:43,914][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:43,934][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:48,065][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:48,073][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:48,093][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 18
Lang Goal: put the brown letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 10/50
[2025-02-08 21:03:12,988][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:03:12,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:03:13,016][root][INFO] - Image embeddings computed.
[2025-02-08 21:03:29,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:03:29,521][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:03:29,541][root][INFO] - Image embeddings computed.
[2025-02-08 21:03:33,721][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:03:33,726][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:03:33,746][root][INFO] - Image embeddings computed.
[2025-02-08 21:03:37,913][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:03:37,918][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:03:37,938][root][INFO] - Image embeddings computed.
[2025-02-08 21:03:42,052][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:03:42,058][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:03:42,078][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: put the green letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:04:03,557][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:03,567][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:03,588][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:20,059][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:20,069][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:20,089][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:24,260][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:24,263][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:24,283][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:28,417][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:28,423][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:28,443][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:32,559][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:32,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:32,586][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: put the green letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:04:54,402][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:54,405][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:54,425][root][INFO] - Image embeddings computed.
[2025-02-08 21:05:10,881][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:05:10,889][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:05:10,909][root][INFO] - Image embeddings computed.
[2025-02-08 21:05:15,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:05:15,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:05:15,112][root][INFO] - Image embeddings computed.
[2025-02-08 21:05:19,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:05:19,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:05:19,286][root][INFO] - Image embeddings computed.
[2025-02-08 21:05:23,412][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:05:23,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:05:23,455][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 15
Lang Goal: put the green letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:05:45,276][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:05:45,384][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:05:45,404][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:01,985][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:02,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:02,127][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:06,287][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:06,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:06,501][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:10,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:10,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:10,801][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:14,922][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:15,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:15,038][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 13
Lang Goal: put the green letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:06:39,399][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:39,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:39,422][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:55,810][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:55,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:55,833][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:59,993][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:59,995][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:07:00,016][root][INFO] - Image embeddings computed.
[2025-02-08 21:07:04,152][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:07:04,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:07:04,174][root][INFO] - Image embeddings computed.
[2025-02-08 21:07:08,298][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:07:08,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:07:08,327][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: put the green letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 11/50
[2025-02-08 21:07:35,222][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:07:35,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:07:35,255][root][INFO] - Image embeddings computed.
[2025-02-08 21:07:51,728][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:07:51,735][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:07:51,755][root][INFO] - Image embeddings computed.
[2025-02-08 21:07:55,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:07:55,939][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:07:55,959][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:00,115][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:00,128][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:00,148][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:04,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:04,298][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:04,318][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: put the blue ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:08:27,019][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:27,035][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:27,055][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:43,266][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:43,269][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:43,289][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:47,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:47,480][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:47,500][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:51,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:51,667][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:51,687][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:55,843][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:55,850][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:55,870][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: put the blue ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:09:19,036][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:09:19,049][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:09:19,069][root][INFO] - Image embeddings computed.
[2025-02-08 21:09:35,342][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:09:35,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:09:35,367][root][INFO] - Image embeddings computed.
[2025-02-08 21:09:39,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:09:39,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:09:39,574][root][INFO] - Image embeddings computed.
[2025-02-08 21:09:43,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:09:43,706][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:09:43,727][root][INFO] - Image embeddings computed.
[2025-02-08 21:09:47,877][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:09:47,888][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:09:47,908][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: put the blue ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:10:10,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:11,004][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:11,024][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:27,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:27,407][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:27,427][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:31,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:31,635][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:31,655][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:35,835][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:35,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:35,861][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:40,024][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:40,027][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:40,056][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 17
Lang Goal: put the blue ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:11:03,607][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:11:03,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:11:03,640][root][INFO] - Image embeddings computed.
[2025-02-08 21:11:19,929][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:11:19,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:11:19,957][root][INFO] - Image embeddings computed.
[2025-02-08 21:11:24,121][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:11:24,128][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:11:24,148][root][INFO] - Image embeddings computed.
[2025-02-08 21:11:28,302][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:11:28,310][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:11:28,329][root][INFO] - Image embeddings computed.
[2025-02-08 21:11:32,521][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:11:32,527][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:11:32,547][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: put the blue ring in the ring hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 12/50
[2025-02-08 21:12:01,398][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:01,411][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:01,431][root][INFO] - Image embeddings computed.
[2025-02-08 21:12:17,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:17,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:17,929][root][INFO] - Image embeddings computed.
[2025-02-08 21:12:22,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:22,091][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:22,111][root][INFO] - Image embeddings computed.
[2025-02-08 21:12:26,257][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:26,265][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:26,285][root][INFO] - Image embeddings computed.
[2025-02-08 21:12:30,428][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:30,438][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:30,458][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: put the yellow letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:12:54,525][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:54,535][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:54,556][root][INFO] - Image embeddings computed.
[2025-02-08 21:13:11,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:11,012][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:11,032][root][INFO] - Image embeddings computed.
[2025-02-08 21:13:15,181][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:15,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:15,211][root][INFO] - Image embeddings computed.
[2025-02-08 21:13:19,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:19,351][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:19,371][root][INFO] - Image embeddings computed.
[2025-02-08 21:13:23,523][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:23,525][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:23,545][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the yellow letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:13:47,961][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:47,966][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:47,986][root][INFO] - Image embeddings computed.
[2025-02-08 21:14:04,443][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:04,454][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:14:04,474][root][INFO] - Image embeddings computed.
[2025-02-08 21:14:08,616][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:08,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:14:08,644][root][INFO] - Image embeddings computed.
[2025-02-08 21:14:12,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:12,779][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:14:12,799][root][INFO] - Image embeddings computed.
[2025-02-08 21:14:16,950][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:16,967][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:14:16,987][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: put the yellow letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:14:41,529][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:41,540][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:14:41,560][root][INFO] - Image embeddings computed.
[2025-02-08 21:14:58,065][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:58,067][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:14:58,088][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:02,222][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:02,229][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:02,249][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:06,417][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:06,426][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:06,446][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:10,591][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:10,599][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:10,619][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: put the yellow letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:15:36,761][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:36,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:36,788][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:53,253][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:53,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:53,280][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:57,418][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:57,426][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:57,447][root][INFO] - Image embeddings computed.
[2025-02-08 21:16:01,577][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:16:01,580][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:16:01,600][root][INFO] - Image embeddings computed.
[2025-02-08 21:16:05,777][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:16:05,785][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:16:05,805][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 16
Lang Goal: put the yellow letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 13/50
[2025-02-08 21:16:34,853][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:16:34,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:16:34,879][root][INFO] - Image embeddings computed.
[2025-02-08 21:16:51,557][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:16:51,560][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:16:51,581][root][INFO] - Image embeddings computed.
[2025-02-08 21:16:55,748][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:16:55,751][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:16:55,771][root][INFO] - Image embeddings computed.
[2025-02-08 21:16:59,923][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:16:59,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:16:59,946][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:04,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:04,108][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:04,128][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 21
Lang Goal: put the red letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:17:29,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:29,972][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:30,005][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:46,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:46,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:46,567][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:50,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:50,725][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:50,745][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:54,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:54,910][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:54,930][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:59,090][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:59,093][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:59,113][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 18
Lang Goal: put the red letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:18:24,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:18:24,695][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:18:24,716][root][INFO] - Image embeddings computed.
[2025-02-08 21:18:41,276][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:18:41,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:18:41,301][root][INFO] - Image embeddings computed.
[2025-02-08 21:18:45,439][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:18:45,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:18:45,463][root][INFO] - Image embeddings computed.
[2025-02-08 21:18:49,653][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:18:49,656][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:18:49,676][root][INFO] - Image embeddings computed.
[2025-02-08 21:18:53,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:18:53,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:18:53,862][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 16
Lang Goal: put the red letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:19:19,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:19,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:19,974][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:36,686][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:36,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:36,711][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:40,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:40,843][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:40,863][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:45,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:45,048][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:45,068][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:49,225][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:49,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:49,252][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: put the red letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:20:15,019][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:20:15,032][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:20:15,052][root][INFO] - Image embeddings computed.
[2025-02-08 21:20:31,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:20:31,668][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:20:31,688][root][INFO] - Image embeddings computed.
[2025-02-08 21:20:35,835][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:20:35,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:20:35,862][root][INFO] - Image embeddings computed.
[2025-02-08 21:20:40,034][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:20:40,042][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:20:40,062][root][INFO] - Image embeddings computed.
[2025-02-08 21:20:44,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:20:44,219][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:20:44,239][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 21
Lang Goal: put the red letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 14/50
[2025-02-08 21:21:14,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:14,672][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:14,692][root][INFO] - Image embeddings computed.
[2025-02-08 21:21:31,316][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:31,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:31,344][root][INFO] - Image embeddings computed.
[2025-02-08 21:21:35,501][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:35,513][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:35,533][root][INFO] - Image embeddings computed.
[2025-02-08 21:21:39,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:39,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:39,690][root][INFO] - Image embeddings computed.
[2025-02-08 21:21:43,853][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:43,861][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:43,894][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 11
Lang Goal: put the green letter E shape in the left letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:22:10,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:10,472][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:10,493][root][INFO] - Image embeddings computed.
[2025-02-08 21:22:27,128][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:27,138][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:27,158][root][INFO] - Image embeddings computed.
[2025-02-08 21:22:31,303][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:31,311][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:31,331][root][INFO] - Image embeddings computed.
[2025-02-08 21:22:35,476][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:35,485][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:35,505][root][INFO] - Image embeddings computed.
[2025-02-08 21:22:39,684][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:39,692][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:39,712][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 12
Lang Goal: put the green letter E shape in the left letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:23:06,418][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:23:06,429][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:23:06,450][root][INFO] - Image embeddings computed.
[2025-02-08 21:23:23,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:23:23,067][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:23:23,088][root][INFO] - Image embeddings computed.
[2025-02-08 21:23:27,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:23:27,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:23:27,253][root][INFO] - Image embeddings computed.
[2025-02-08 21:23:31,400][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:23:31,407][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:23:31,427][root][INFO] - Image embeddings computed.
[2025-02-08 21:23:35,602][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:23:35,610][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:23:35,630][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 13
Lang Goal: put the green letter E shape in the left letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:24:02,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:02,875][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:02,896][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:19,357][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:19,363][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:19,383][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:23,523][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:23,530][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:23,550][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:27,710][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:27,713][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:27,733][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:31,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:31,919][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:31,939][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 12
Lang Goal: put the green letter E shape in the left letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:24:59,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:59,391][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:59,412][root][INFO] - Image embeddings computed.
[2025-02-08 21:25:15,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:25:16,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:25:16,092][root][INFO] - Image embeddings computed.
[2025-02-08 21:25:20,226][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:25:20,350][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:25:20,375][root][INFO] - Image embeddings computed.
[2025-02-08 21:25:24,494][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:25:24,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:25:24,644][root][INFO] - Image embeddings computed.
[2025-02-08 21:25:28,817][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:25:28,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:25:28,931][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 13
Lang Goal: put the green letter E shape in the left letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 15/50
[2025-02-08 21:26:01,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:01,183][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:01,203][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:17,695][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:17,703][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:17,740][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:21,917][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:21,924][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:21,944][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:26,095][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:26,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:26,123][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:30,263][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:30,268][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:30,288][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the brown heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:26:58,680][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:58,685][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:58,705][root][INFO] - Image embeddings computed.
[2025-02-08 21:27:15,392][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:27:15,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:27:15,415][root][INFO] - Image embeddings computed.
[2025-02-08 21:27:19,586][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:27:19,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:27:19,613][root][INFO] - Image embeddings computed.
[2025-02-08 21:27:23,761][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:27:23,764][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:27:23,784][root][INFO] - Image embeddings computed.
[2025-02-08 21:27:27,907][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:27:27,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:27:27,929][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 19
Lang Goal: put the brown heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:27:56,727][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:27:56,734][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:27:56,755][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:13,205][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:13,213][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:13,233][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:17,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:17,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:17,422][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:21,577][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:21,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:21,609][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:25,753][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:25,761][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:25,781][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the brown heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:28:54,473][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:54,483][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:54,504][root][INFO] - Image embeddings computed.
[2025-02-08 21:29:10,948][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:29:10,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:29:10,973][root][INFO] - Image embeddings computed.
[2025-02-08 21:29:15,115][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:29:15,118][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:29:15,138][root][INFO] - Image embeddings computed.
[2025-02-08 21:29:19,272][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:29:19,275][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:29:19,303][root][INFO] - Image embeddings computed.
[2025-02-08 21:29:23,448][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:29:23,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:29:23,476][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 18
Lang Goal: put the brown heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:29:52,044][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:29:52,145][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:29:52,166][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:08,784][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:08,880][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:08,900][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:13,059][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:13,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:13,230][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:17,415][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:17,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:17,536][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:21,653][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:21,750][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:21,770][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the brown heart in the top heart hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 16/50
[2025-02-08 21:30:55,472][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:55,482][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:55,502][root][INFO] - Image embeddings computed.
[2025-02-08 21:31:12,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:31:12,066][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:31:12,086][root][INFO] - Image embeddings computed.
[2025-02-08 21:31:16,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:31:16,256][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:31:16,276][root][INFO] - Image embeddings computed.
[2025-02-08 21:31:20,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:31:20,458][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:31:20,478][root][INFO] - Image embeddings computed.
[2025-02-08 21:31:24,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:31:24,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:31:24,626][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: put the blue letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:31:54,017][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:31:54,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:31:54,050][root][INFO] - Image embeddings computed.
[2025-02-08 21:32:10,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:10,349][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:10,369][root][INFO] - Image embeddings computed.
[2025-02-08 21:32:14,517][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:14,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:14,539][root][INFO] - Image embeddings computed.
[2025-02-08 21:32:18,679][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:18,681][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:18,702][root][INFO] - Image embeddings computed.
[2025-02-08 21:32:22,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:22,864][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:22,884][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the blue letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:32:52,706][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:52,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:52,738][root][INFO] - Image embeddings computed.
[2025-02-08 21:33:09,196][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:33:09,217][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:33:09,252][root][INFO] - Image embeddings computed.
[2025-02-08 21:33:13,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:33:13,408][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:33:13,428][root][INFO] - Image embeddings computed.
[2025-02-08 21:33:17,594][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:33:17,601][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:33:17,621][root][INFO] - Image embeddings computed.
[2025-02-08 21:33:21,771][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:33:21,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:33:21,798][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 18
Lang Goal: put the blue letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:33:52,608][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:33:52,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:33:52,731][root][INFO] - Image embeddings computed.
[2025-02-08 21:34:09,111][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:09,234][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:09,259][root][INFO] - Image embeddings computed.
[2025-02-08 21:34:13,389][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:13,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:13,574][root][INFO] - Image embeddings computed.
[2025-02-08 21:34:17,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:17,856][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:17,876][root][INFO] - Image embeddings computed.
[2025-02-08 21:34:22,018][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:22,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:22,135][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 19
Lang Goal: put the blue letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:34:52,611][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:52,638][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:52,670][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:09,054][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:09,063][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:09,083][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:13,245][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:13,253][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:13,273][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:17,430][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:17,437][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:17,457][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:21,574][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:21,581][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:21,601][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 17
Lang Goal: put the blue letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 17/50
[2025-02-08 21:35:55,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:55,967][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:55,987][root][INFO] - Image embeddings computed.
[2025-02-08 21:36:12,610][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:36:12,702][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:36:12,722][root][INFO] - Image embeddings computed.
[2025-02-08 21:36:16,864][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:36:16,961][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:36:16,981][root][INFO] - Image embeddings computed.
[2025-02-08 21:36:21,122][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:36:21,227][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:36:21,247][root][INFO] - Image embeddings computed.
[2025-02-08 21:36:25,417][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:36:25,426][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:36:25,446][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: put the yellow letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:36:55,978][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:36:55,992][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:36:56,017][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:12,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:12,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:12,539][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:16,683][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:16,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:16,711][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:20,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:20,896][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:20,916][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:25,088][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:25,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:25,116][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: put the yellow letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:38:00,448][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:38:00,451][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:38:00,471][root][INFO] - Image embeddings computed.
[2025-02-08 21:38:16,980][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:38:16,983][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:38:17,003][root][INFO] - Image embeddings computed.
[2025-02-08 21:38:21,151][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:38:21,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:38:21,179][root][INFO] - Image embeddings computed.
[2025-02-08 21:38:25,328][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:38:25,331][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:38:25,351][root][INFO] - Image embeddings computed.
[2025-02-08 21:38:29,512][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:38:29,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:38:29,535][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: put the yellow letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:39:00,826][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:00,832][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:00,853][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:17,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:17,337][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:17,357][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:21,504][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:21,512][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:21,533][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:25,702][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:25,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:25,730][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:29,907][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:29,933][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:29,953][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 12
Lang Goal: put the yellow letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:40:01,429][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:40:01,432][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:40:01,452][root][INFO] - Image embeddings computed.
[2025-02-08 21:40:18,207][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:40:18,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:40:18,230][root][INFO] - Image embeddings computed.
[2025-02-08 21:40:22,375][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:40:22,479][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:40:22,499][root][INFO] - Image embeddings computed.
[2025-02-08 21:40:26,644][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:40:26,748][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:40:26,768][root][INFO] - Image embeddings computed.
[2025-02-08 21:40:30,952][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:40:31,070][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:40:31,091][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: put the yellow letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 18/50
[2025-02-08 21:41:06,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:06,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:06,952][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:23,227][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:23,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:23,255][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:27,396][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:27,404][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:27,424][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:31,563][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:31,565][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:31,585][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:35,715][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:35,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:35,741][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: put the cyan hexagon in the bottom hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:42:07,751][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:42:07,762][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:42:07,782][root][INFO] - Image embeddings computed.
[2025-02-08 21:42:24,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:42:24,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:42:24,054][root][INFO] - Image embeddings computed.
[2025-02-08 21:42:28,194][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:42:28,197][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:42:28,217][root][INFO] - Image embeddings computed.
[2025-02-08 21:42:32,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:42:32,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:42:32,409][root][INFO] - Image embeddings computed.
[2025-02-08 21:42:36,548][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:42:36,551][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:42:36,583][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: put the cyan hexagon in the bottom hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:43:09,186][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:09,202][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:09,228][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:25,439][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:25,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:25,465][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:29,611][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:29,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:29,640][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:33,805][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:33,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:33,836][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:37,977][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:37,985][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:38,005][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 14
Lang Goal: put the cyan hexagon in the bottom hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:44:11,032][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:44:11,043][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:44:11,063][root][INFO] - Image embeddings computed.
[2025-02-08 21:44:27,284][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:44:27,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:44:27,307][root][INFO] - Image embeddings computed.
[2025-02-08 21:44:31,449][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:44:31,451][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:44:31,471][root][INFO] - Image embeddings computed.
[2025-02-08 21:44:35,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:44:35,634][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:44:35,654][root][INFO] - Image embeddings computed.
[2025-02-08 21:44:39,797][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:44:39,800][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:44:39,820][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 12
Lang Goal: put the cyan hexagon in the bottom hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:45:12,561][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:12,573][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:12,594][root][INFO] - Image embeddings computed.
[2025-02-08 21:45:28,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:28,817][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:28,837][root][INFO] - Image embeddings computed.
[2025-02-08 21:45:32,977][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:32,979][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:33,000][root][INFO] - Image embeddings computed.
[2025-02-08 21:45:37,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:37,167][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:37,187][root][INFO] - Image embeddings computed.
[2025-02-08 21:45:41,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:41,340][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:41,361][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: put the cyan hexagon in the bottom hexagon hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 19/50
[2025-02-08 21:46:18,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:46:18,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:46:18,501][root][INFO] - Image embeddings computed.
[2025-02-08 21:46:34,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:46:35,051][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:46:35,071][root][INFO] - Image embeddings computed.
[2025-02-08 21:46:39,204][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:46:39,297][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:46:39,317][root][INFO] - Image embeddings computed.
[2025-02-08 21:46:43,482][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:46:43,580][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:46:43,600][root][INFO] - Image embeddings computed.
[2025-02-08 21:46:47,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:46:47,769][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:46:47,789][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: put the blue letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:47:21,161][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:21,169][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:21,189][root][INFO] - Image embeddings computed.
[2025-02-08 21:47:37,741][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:37,748][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:37,768][root][INFO] - Image embeddings computed.
[2025-02-08 21:47:41,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:41,923][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:41,943][root][INFO] - Image embeddings computed.
[2025-02-08 21:47:46,084][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:46,087][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:46,107][root][INFO] - Image embeddings computed.
[2025-02-08 21:47:50,273][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:50,280][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:50,300][root][INFO] - Image embeddings computed.
The number of original masks: 14
The number of filtered masks: 13
Lang Goal: put the blue letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:48:23,827][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:23,839][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:23,859][root][INFO] - Image embeddings computed.
[2025-02-08 21:48:40,208][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:40,217][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:40,237][root][INFO] - Image embeddings computed.
[2025-02-08 21:48:44,379][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:44,388][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:44,408][root][INFO] - Image embeddings computed.
[2025-02-08 21:48:48,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:48,550][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:48,570][root][INFO] - Image embeddings computed.
[2025-02-08 21:48:52,748][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:52,751][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:52,772][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 13
Lang Goal: put the blue letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:49:26,612][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:49:26,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:49:26,643][root][INFO] - Image embeddings computed.
[2025-02-08 21:49:42,943][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:49:42,951][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:49:42,971][root][INFO] - Image embeddings computed.
[2025-02-08 21:49:47,117][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:49:47,125][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:49:47,146][root][INFO] - Image embeddings computed.
[2025-02-08 21:49:51,299][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:49:51,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:49:51,327][root][INFO] - Image embeddings computed.
[2025-02-08 21:49:55,499][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:49:55,506][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:49:55,526][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 14
Lang Goal: put the blue letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:50:30,798][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:30,803][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:30,823][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:47,252][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:47,262][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:47,282][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:51,429][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:51,431][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:51,451][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:55,601][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:55,609][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:55,629][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:59,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:59,811][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:59,830][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 15
Lang Goal: put the blue letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 20/50
[2025-02-08 21:51:38,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:51:38,824][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:51:38,844][root][INFO] - Image embeddings computed.
[2025-02-08 21:51:55,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:51:55,697][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:51:55,717][root][INFO] - Image embeddings computed.
[2025-02-08 21:51:59,896][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:00,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:00,050][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:04,197][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:04,345][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:04,366][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:08,487][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:08,596][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:08,616][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 20
Lang Goal: put the green letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:52:43,995][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:44,000][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:44,020][root][INFO] - Image embeddings computed.
[2025-02-08 21:53:00,572][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:53:00,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:53:00,599][root][INFO] - Image embeddings computed.
[2025-02-08 21:53:04,768][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:53:04,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:53:04,808][root][INFO] - Image embeddings computed.
[2025-02-08 21:53:08,954][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:53:08,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:53:08,977][root][INFO] - Image embeddings computed.
[2025-02-08 21:53:13,094][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:53:13,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:53:13,116][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 17
Lang Goal: put the green letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:53:50,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:53:50,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:53:50,116][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:06,643][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:06,651][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:06,671][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:10,851][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:10,853][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:10,874][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:15,032][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:15,041][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:15,061][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:19,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:19,177][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:19,197][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 22
Lang Goal: put the green letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:54:54,869][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:54,874][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:54,894][root][INFO] - Image embeddings computed.
[2025-02-08 21:55:11,572][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:55:11,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:55:11,599][root][INFO] - Image embeddings computed.
[2025-02-08 21:55:15,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:55:15,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:55:15,788][root][INFO] - Image embeddings computed.
[2025-02-08 21:55:19,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:55:19,938][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:55:19,958][root][INFO] - Image embeddings computed.
[2025-02-08 21:55:24,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:55:24,198][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:55:24,230][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 18
Lang Goal: put the green letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:55:59,956][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:55:59,961][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:55:59,982][root][INFO] - Image embeddings computed.
[2025-02-08 21:56:16,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:16,668][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:16,688][root][INFO] - Image embeddings computed.
[2025-02-08 21:56:20,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:20,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:20,878][root][INFO] - Image embeddings computed.
[2025-02-08 21:56:25,027][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:25,029][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:25,049][root][INFO] - Image embeddings computed.
[2025-02-08 21:56:29,164][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:29,171][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:29,191][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: put the green letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 21/50
[2025-02-08 21:57:08,798][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:57:08,901][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:57:08,922][root][INFO] - Image embeddings computed.
[2025-02-08 21:57:25,852][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:57:25,956][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:57:25,976][root][INFO] - Image embeddings computed.
[2025-02-08 21:57:30,156][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:57:30,300][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:57:30,321][root][INFO] - Image embeddings computed.
[2025-02-08 21:57:34,472][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:57:34,584][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:57:34,605][root][INFO] - Image embeddings computed.
[2025-02-08 21:57:38,728][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:57:38,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:57:38,882][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 17
Lang Goal: put the red letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:58:15,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:58:15,556][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:58:15,578][root][INFO] - Image embeddings computed.
[2025-02-08 21:58:33,430][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:58:33,526][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:58:33,546][root][INFO] - Image embeddings computed.
[2025-02-08 21:58:37,721][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:58:37,832][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:58:37,852][root][INFO] - Image embeddings computed.
[2025-02-08 21:58:41,979][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:58:42,078][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:58:42,098][root][INFO] - Image embeddings computed.
[2025-02-08 21:58:46,200][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:58:46,351][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:58:46,371][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 21
Lang Goal: put the red letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 21:59:23,903][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:23,913][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:23,933][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:40,425][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:40,432][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:40,452][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:44,618][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:44,626][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:44,646][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:48,798][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:48,950][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:48,976][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:53,106][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:53,198][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:53,218][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: put the red letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:00:30,035][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:00:30,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:00:30,067][root][INFO] - Image embeddings computed.
[2025-02-08 22:00:46,335][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:00:46,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:00:46,362][root][INFO] - Image embeddings computed.
[2025-02-08 22:00:50,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:00:50,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:00:50,556][root][INFO] - Image embeddings computed.
[2025-02-08 22:00:54,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:00:54,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:00:54,728][root][INFO] - Image embeddings computed.
[2025-02-08 22:00:58,876][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:00:58,884][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:00:58,904][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 18
Lang Goal: put the red letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:01:36,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:36,277][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:36,298][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:53,821][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:53,830][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:53,850][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:58,025][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:58,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:58,054][root][INFO] - Image embeddings computed.
[2025-02-08 22:02:02,179][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:02:02,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:02:02,207][root][INFO] - Image embeddings computed.
[2025-02-08 22:02:06,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:02:06,320][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:02:06,340][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 19
Lang Goal: put the red letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 22/50
[2025-02-08 22:02:48,699][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:02:48,710][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:02:48,731][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:05,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:05,109][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:05,129][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:09,272][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:09,280][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:09,300][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:13,454][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:13,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:13,481][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:17,621][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:17,629][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:17,649][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the yellow letter M shape in the bottom letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:03:55,943][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:55,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:55,974][root][INFO] - Image embeddings computed.
[2025-02-08 22:04:12,365][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:04:12,463][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:04:12,484][root][INFO] - Image embeddings computed.
[2025-02-08 22:04:16,605][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:04:16,804][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:04:16,830][root][INFO] - Image embeddings computed.
[2025-02-08 22:04:20,973][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:04:21,071][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:04:21,091][root][INFO] - Image embeddings computed.
[2025-02-08 22:04:25,242][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:04:25,385][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:04:25,405][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: put the yellow letter M shape in the bottom letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:05:05,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:05,667][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:05,688][root][INFO] - Image embeddings computed.
[2025-02-08 22:05:22,055][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:22,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:22,200][root][INFO] - Image embeddings computed.
[2025-02-08 22:05:26,296][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:26,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:26,495][root][INFO] - Image embeddings computed.
[2025-02-08 22:05:30,607][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:30,727][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:30,748][root][INFO] - Image embeddings computed.
[2025-02-08 22:05:34,899][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:34,997][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:35,017][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 18
Lang Goal: put the yellow letter M shape in the bottom letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:06:13,329][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:13,332][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:13,353][root][INFO] - Image embeddings computed.
[2025-02-08 22:06:29,733][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:29,740][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:29,761][root][INFO] - Image embeddings computed.
[2025-02-08 22:06:33,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:33,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:33,895][root][INFO] - Image embeddings computed.
[2025-02-08 22:06:38,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:38,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:38,037][root][INFO] - Image embeddings computed.
[2025-02-08 22:06:42,195][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:42,208][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:42,228][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 17
Lang Goal: put the yellow letter M shape in the bottom letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:07:20,654][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:07:20,659][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:07:20,679][root][INFO] - Image embeddings computed.
[2025-02-08 22:07:37,064][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:07:37,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:07:37,092][root][INFO] - Image embeddings computed.
[2025-02-08 22:07:41,187][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:07:41,190][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:07:41,210][root][INFO] - Image embeddings computed.
[2025-02-08 22:07:45,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:07:45,330][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:07:45,351][root][INFO] - Image embeddings computed.
[2025-02-08 22:07:49,505][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:07:49,514][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:07:49,534][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 17
Lang Goal: put the yellow letter M shape in the bottom letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 23/50
[2025-02-08 22:08:31,952][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:31,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:31,977][root][INFO] - Image embeddings computed.
[2025-02-08 22:08:48,698][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:48,706][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:48,726][root][INFO] - Image embeddings computed.
[2025-02-08 22:08:52,887][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:52,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:52,910][root][INFO] - Image embeddings computed.
[2025-02-08 22:08:57,058][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:57,063][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:57,084][root][INFO] - Image embeddings computed.
[2025-02-08 22:09:01,196][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:09:01,221][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:09:01,241][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the brown letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:09:40,167][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:09:40,172][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:09:40,193][root][INFO] - Image embeddings computed.
[2025-02-08 22:09:56,452][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:09:56,458][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:09:56,478][root][INFO] - Image embeddings computed.
[2025-02-08 22:10:00,612][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:00,626][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:00,647][root][INFO] - Image embeddings computed.
[2025-02-08 22:10:04,781][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:04,790][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:04,810][root][INFO] - Image embeddings computed.
[2025-02-08 22:10:08,929][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:08,938][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:08,958][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the brown letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:10:47,959][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:47,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:47,990][root][INFO] - Image embeddings computed.
[2025-02-08 22:11:04,422][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:11:04,430][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:11:04,450][root][INFO] - Image embeddings computed.
[2025-02-08 22:11:08,618][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:11:08,621][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:11:08,641][root][INFO] - Image embeddings computed.
[2025-02-08 22:11:12,786][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:11:12,797][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:11:12,817][root][INFO] - Image embeddings computed.
[2025-02-08 22:11:16,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:11:16,946][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:11:16,966][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 22
Lang Goal: put the brown letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:11:56,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:11:56,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:11:56,202][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:12,602][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:12,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:12,631][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:16,805][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:16,814][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:16,834][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:20,980][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:20,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:21,009][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:25,128][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:25,136][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:25,156][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 21
Lang Goal: put the brown letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:13:04,759][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:13:04,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:13:04,788][root][INFO] - Image embeddings computed.
[2025-02-08 22:13:21,102][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:13:21,108][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:13:21,128][root][INFO] - Image embeddings computed.
[2025-02-08 22:13:25,281][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:13:25,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:13:25,309][root][INFO] - Image embeddings computed.
[2025-02-08 22:13:29,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:13:29,465][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:13:29,485][root][INFO] - Image embeddings computed.
[2025-02-08 22:13:33,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:13:33,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:13:33,632][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 18
Lang Goal: put the brown letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 24/50
[2025-02-08 22:14:17,705][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:17,714][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:17,734][root][INFO] - Image embeddings computed.
[2025-02-08 22:14:34,426][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:34,434][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:34,455][root][INFO] - Image embeddings computed.
[2025-02-08 22:14:38,616][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:38,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:38,644][root][INFO] - Image embeddings computed.
[2025-02-08 22:14:42,866][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:42,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:42,889][root][INFO] - Image embeddings computed.
[2025-02-08 22:14:47,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:47,024][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:47,044][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 19
Lang Goal: put the blue letter M shape in the right letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:15:27,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:27,818][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:27,838][root][INFO] - Image embeddings computed.
[2025-02-08 22:15:44,210][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:44,229][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:44,249][root][INFO] - Image embeddings computed.
[2025-02-08 22:15:48,404][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:48,412][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:48,432][root][INFO] - Image embeddings computed.
[2025-02-08 22:15:52,634][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:52,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:52,668][root][INFO] - Image embeddings computed.
[2025-02-08 22:15:56,792][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:56,797][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:56,817][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 16
Lang Goal: put the blue letter M shape in the right letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:16:37,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:16:37,397][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:16:37,417][root][INFO] - Image embeddings computed.
[2025-02-08 22:16:53,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:16:53,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:16:53,947][root][INFO] - Image embeddings computed.
[2025-02-08 22:16:58,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:16:58,100][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:16:58,120][root][INFO] - Image embeddings computed.
[2025-02-08 22:17:02,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:17:02,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:17:02,334][root][INFO] - Image embeddings computed.
[2025-02-08 22:17:06,467][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:17:06,470][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:17:06,490][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 21
Lang Goal: put the blue letter M shape in the right letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:17:47,920][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:17:47,932][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:17:47,953][root][INFO] - Image embeddings computed.
[2025-02-08 22:18:04,482][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:04,490][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:04,510][root][INFO] - Image embeddings computed.
[2025-02-08 22:18:08,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:08,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:08,684][root][INFO] - Image embeddings computed.
[2025-02-08 22:18:12,891][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:12,896][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:12,916][root][INFO] - Image embeddings computed.
[2025-02-08 22:18:17,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:17,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:17,065][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 21
Lang Goal: put the blue letter M shape in the right letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:18:59,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:59,169][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:59,190][root][INFO] - Image embeddings computed.
[2025-02-08 22:19:15,684][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:19:15,686][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:19:15,707][root][INFO] - Image embeddings computed.
[2025-02-08 22:19:19,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:19:19,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:19:19,880][root][INFO] - Image embeddings computed.
[2025-02-08 22:19:24,055][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:19:24,058][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:19:24,078][root][INFO] - Image embeddings computed.
[2025-02-08 22:19:28,191][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:19:28,194][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:19:28,214][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: put the blue letter M shape in the right letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 25/50
[2025-02-08 22:20:13,586][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:20:13,595][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:20:13,615][root][INFO] - Image embeddings computed.
[2025-02-08 22:20:30,156][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:20:30,165][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:20:30,185][root][INFO] - Image embeddings computed.
[2025-02-08 22:20:34,326][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:20:34,331][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:20:34,351][root][INFO] - Image embeddings computed.
[2025-02-08 22:20:38,501][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:20:38,508][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:20:38,528][root][INFO] - Image embeddings computed.
[2025-02-08 22:20:42,699][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:20:42,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:20:42,728][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 17
Lang Goal: put the red letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:21:24,271][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:24,285][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:24,305][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:40,797][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:40,804][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:40,824][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:44,970][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:44,978][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:44,998][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:49,147][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:49,155][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:49,175][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:53,345][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:53,355][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:53,375][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 20
Lang Goal: put the red letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:22:35,119][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:22:35,124][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:22:35,145][root][INFO] - Image embeddings computed.
[2025-02-08 22:22:51,560][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:22:51,568][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:22:51,589][root][INFO] - Image embeddings computed.
[2025-02-08 22:22:55,736][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:22:55,743][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:22:55,763][root][INFO] - Image embeddings computed.
[2025-02-08 22:22:59,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:22:59,912][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:22:59,932][root][INFO] - Image embeddings computed.
[2025-02-08 22:23:04,107][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:23:04,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:23:04,135][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 21
Lang Goal: put the red letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:23:46,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:23:46,261][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:23:46,281][root][INFO] - Image embeddings computed.
[2025-02-08 22:24:02,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:24:02,650][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:24:02,670][root][INFO] - Image embeddings computed.
[2025-02-08 22:24:06,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:24:06,828][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:24:06,849][root][INFO] - Image embeddings computed.
[2025-02-08 22:24:11,000][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:24:11,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:24:11,026][root][INFO] - Image embeddings computed.
[2025-02-08 22:24:15,202][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:24:15,208][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:24:15,228][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 17
Lang Goal: put the red letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:24:57,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:24:57,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:24:57,910][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:14,435][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:14,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:14,462][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:18,598][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:18,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:18,626][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:22,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:22,777][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:22,797][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:26,971][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:26,979][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:26,999][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 21
Lang Goal: put the red letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 26/50
[2025-02-08 22:26:13,813][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:26:13,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:26:13,931][root][INFO] - Image embeddings computed.
[2025-02-08 22:26:30,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:26:30,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:26:30,495][root][INFO] - Image embeddings computed.
[2025-02-08 22:26:34,638][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:26:34,737][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:26:34,757][root][INFO] - Image embeddings computed.
[2025-02-08 22:26:38,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:26:39,005][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:26:39,025][root][INFO] - Image embeddings computed.
[2025-02-08 22:26:43,146][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:26:43,155][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:26:43,175][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: put the cyan heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:27:26,456][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:26,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:26,488][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:42,912][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:42,922][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:42,942][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:47,082][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:47,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:47,126][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:51,275][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:51,282][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:51,302][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:55,436][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:55,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:55,465][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 18
Lang Goal: put the cyan heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:28:38,975][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:28:38,987][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:28:39,007][root][INFO] - Image embeddings computed.
[2025-02-08 22:28:55,186][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:28:55,350][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:28:55,370][root][INFO] - Image embeddings computed.
[2025-02-08 22:28:59,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:28:59,605][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:28:59,625][root][INFO] - Image embeddings computed.
[2025-02-08 22:29:03,746][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:29:03,848][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:29:03,869][root][INFO] - Image embeddings computed.
[2025-02-08 22:29:07,989][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:29:08,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:29:08,101][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the cyan heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:29:52,252][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:29:52,255][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:29:52,275][root][INFO] - Image embeddings computed.
[2025-02-08 22:30:08,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:30:08,506][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:30:08,526][root][INFO] - Image embeddings computed.
[2025-02-08 22:30:12,667][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:30:12,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:30:12,690][root][INFO] - Image embeddings computed.
[2025-02-08 22:30:16,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:30:16,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:30:16,862][root][INFO] - Image embeddings computed.
[2025-02-08 22:30:20,974][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:30:20,976][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:30:20,996][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 18
Lang Goal: put the cyan heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:31:04,301][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:04,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:04,339][root][INFO] - Image embeddings computed.
[2025-02-08 22:31:20,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:20,559][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:20,579][root][INFO] - Image embeddings computed.
[2025-02-08 22:31:24,727][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:24,730][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:24,750][root][INFO] - Image embeddings computed.
[2025-02-08 22:31:28,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:28,912][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:28,932][root][INFO] - Image embeddings computed.
[2025-02-08 22:31:33,044][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:33,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:33,067][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: put the cyan heart in the heart hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 27/50
[2025-02-08 22:32:20,814][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:32:20,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:32:20,846][root][INFO] - Image embeddings computed.
[2025-02-08 22:32:37,319][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:32:37,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:32:37,342][root][INFO] - Image embeddings computed.
[2025-02-08 22:32:41,497][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:32:41,499][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:32:41,519][root][INFO] - Image embeddings computed.
[2025-02-08 22:32:45,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:32:45,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:32:45,684][root][INFO] - Image embeddings computed.
[2025-02-08 22:32:49,810][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:32:49,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:32:49,833][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 29
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:33:34,393][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:33:34,400][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:33:34,421][root][INFO] - Image embeddings computed.
[2025-02-08 22:33:50,805][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:33:50,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:33:50,833][root][INFO] - Image embeddings computed.
[2025-02-08 22:33:55,004][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:33:55,008][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:33:55,028][root][INFO] - Image embeddings computed.
[2025-02-08 22:33:59,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:33:59,167][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:33:59,187][root][INFO] - Image embeddings computed.
[2025-02-08 22:34:03,317][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:34:03,325][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:34:03,345][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 28
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:34:48,441][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:34:48,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:34:48,464][root][INFO] - Image embeddings computed.
[2025-02-08 22:35:04,954][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:35:04,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:35:04,977][root][INFO] - Image embeddings computed.
[2025-02-08 22:35:09,137][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:35:09,144][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:35:09,164][root][INFO] - Image embeddings computed.
[2025-02-08 22:35:13,302][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:35:13,310][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:35:13,330][root][INFO] - Image embeddings computed.
[2025-02-08 22:35:17,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:35:17,463][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:35:17,483][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 28
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:36:04,412][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:04,423][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:04,444][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:20,816][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:20,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:20,843][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:24,997][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:25,005][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:25,025][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:29,181][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:29,189][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:29,209][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:33,331][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:33,334][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:33,354][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 22
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:37:18,555][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:37:18,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:37:18,586][root][INFO] - Image embeddings computed.
[2025-02-08 22:37:34,786][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:37:34,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:37:34,923][root][INFO] - Image embeddings computed.
[2025-02-08 22:37:39,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:37:39,075][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:37:39,095][root][INFO] - Image embeddings computed.
[2025-02-08 22:37:43,221][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:37:43,229][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:37:43,249][root][INFO] - Image embeddings computed.
[2025-02-08 22:37:47,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:37:47,374][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:37:47,394][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 25
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 28/50
[2025-02-08 22:38:37,039][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:38:37,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:38:37,066][root][INFO] - Image embeddings computed.
[2025-02-08 22:38:53,831][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:38:53,837][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:38:53,857][root][INFO] - Image embeddings computed.
[2025-02-08 22:38:58,011][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:38:58,013][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:38:58,033][root][INFO] - Image embeddings computed.
[2025-02-08 22:39:02,204][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:39:02,217][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:39:02,237][root][INFO] - Image embeddings computed.
[2025-02-08 22:39:06,354][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:39:06,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:39:06,377][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: put the green ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:39:51,676][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:39:51,688][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:39:51,708][root][INFO] - Image embeddings computed.
[2025-02-08 22:40:08,152][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:40:08,157][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:40:08,177][root][INFO] - Image embeddings computed.
[2025-02-08 22:40:12,353][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:40:12,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:40:12,376][root][INFO] - Image embeddings computed.
[2025-02-08 22:40:16,512][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:40:16,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:40:16,535][root][INFO] - Image embeddings computed.
[2025-02-08 22:40:20,613][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:40:20,616][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:40:20,636][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: put the green ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:41:06,591][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:06,600][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:06,621][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:23,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:23,208][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:23,229][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:27,377][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:27,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:27,400][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:31,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:31,550][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:31,570][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:35,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:35,696][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:35,716][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: put the green ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:42:21,905][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:42:21,917][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:42:21,937][root][INFO] - Image embeddings computed.
[2025-02-08 22:42:38,417][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:42:38,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:42:38,465][root][INFO] - Image embeddings computed.
[2025-02-08 22:42:42,651][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:42:42,660][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:42:42,680][root][INFO] - Image embeddings computed.
[2025-02-08 22:42:46,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:42:46,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:42:46,867][root][INFO] - Image embeddings computed.
[2025-02-08 22:42:51,000][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:42:51,002][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:42:51,023][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: put the green ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:43:37,184][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:37,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:37,207][root][INFO] - Image embeddings computed.
[2025-02-08 22:43:53,625][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:53,630][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:53,650][root][INFO] - Image embeddings computed.
[2025-02-08 22:43:57,818][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:57,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:57,846][root][INFO] - Image embeddings computed.
[2025-02-08 22:44:02,018][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:44:02,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:44:02,047][root][INFO] - Image embeddings computed.
[2025-02-08 22:44:06,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:44:06,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:44:06,202][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: put the green ring in the ring hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 29/50
[2025-02-08 22:44:56,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:44:56,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:44:56,829][root][INFO] - Image embeddings computed.
[2025-02-08 22:45:13,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:13,118][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:13,138][root][INFO] - Image embeddings computed.
[2025-02-08 22:45:17,285][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:17,288][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:17,308][root][INFO] - Image embeddings computed.
[2025-02-08 22:45:21,450][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:21,453][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:21,473][root][INFO] - Image embeddings computed.
[2025-02-08 22:45:25,628][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:25,630][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:25,651][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 14
Lang Goal: put the yellow letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:46:12,666][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:46:12,672][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:46:12,692][root][INFO] - Image embeddings computed.
[2025-02-08 22:46:28,927][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:46:28,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:46:28,954][root][INFO] - Image embeddings computed.
[2025-02-08 22:46:33,114][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:46:33,123][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:46:33,143][root][INFO] - Image embeddings computed.
[2025-02-08 22:46:37,302][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:46:37,309][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:46:37,329][root][INFO] - Image embeddings computed.
[2025-02-08 22:46:41,485][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:46:41,492][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:46:41,512][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: put the yellow letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:47:28,998][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:47:29,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:47:29,029][root][INFO] - Image embeddings computed.
[2025-02-08 22:47:45,139][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:47:45,141][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:47:45,162][root][INFO] - Image embeddings computed.
[2025-02-08 22:47:49,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:47:49,297][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:47:49,317][root][INFO] - Image embeddings computed.
[2025-02-08 22:47:53,441][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:47:53,450][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:47:53,470][root][INFO] - Image embeddings computed.
[2025-02-08 22:47:57,623][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:47:57,632][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:47:57,652][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 12
Lang Goal: put the yellow letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:48:45,701][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:45,713][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:45,734][root][INFO] - Image embeddings computed.
[2025-02-08 22:49:01,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:49:01,963][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:49:01,983][root][INFO] - Image embeddings computed.
[2025-02-08 22:49:06,130][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:49:06,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:49:06,157][root][INFO] - Image embeddings computed.
[2025-02-08 22:49:10,304][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:49:10,311][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:49:10,331][root][INFO] - Image embeddings computed.
[2025-02-08 22:49:14,493][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:49:14,495][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:49:14,516][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 17
Lang Goal: put the yellow letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:50:02,036][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:02,039][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:02,059][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:18,329][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:18,331][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:18,351][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:22,501][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:22,509][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:22,529][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:26,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:26,775][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:26,795][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:30,953][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:31,051][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:31,071][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the yellow letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 30/50
[2025-02-08 22:51:23,527][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:51:23,645][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:51:23,665][root][INFO] - Image embeddings computed.
[2025-02-08 22:51:40,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:51:40,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:51:40,488][root][INFO] - Image embeddings computed.
[2025-02-08 22:51:44,648][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:51:44,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:51:44,832][root][INFO] - Image embeddings computed.
[2025-02-08 22:51:48,975][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:51:49,101][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:51:49,121][root][INFO] - Image embeddings computed.
[2025-02-08 22:51:53,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:51:53,385][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:51:53,405][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: put the brown ring in the left ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:52:42,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:42,012][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:42,033][root][INFO] - Image embeddings computed.
[2025-02-08 22:52:58,890][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:58,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:58,919][root][INFO] - Image embeddings computed.
[2025-02-08 22:53:03,041][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:53:03,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:53:03,066][root][INFO] - Image embeddings computed.
[2025-02-08 22:53:07,198][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:53:07,203][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:53:07,223][root][INFO] - Image embeddings computed.
[2025-02-08 22:53:11,391][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:53:11,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:53:11,416][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the brown ring in the left ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:54:01,395][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:54:01,405][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:54:01,426][root][INFO] - Image embeddings computed.
[2025-02-08 22:54:18,116][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:54:18,123][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:54:18,143][root][INFO] - Image embeddings computed.
[2025-02-08 22:54:22,276][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:54:22,279][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:54:22,299][root][INFO] - Image embeddings computed.
[2025-02-08 22:54:26,429][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:54:26,433][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:54:26,453][root][INFO] - Image embeddings computed.
[2025-02-08 22:54:30,611][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:54:30,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:54:30,639][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: put the brown ring in the left ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:55:20,002][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:20,014][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:20,035][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:36,702][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:36,710][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:36,730][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:40,865][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:40,872][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:40,892][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:45,030][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:45,038][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:45,058][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:49,225][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:49,232][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:49,252][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: put the brown ring in the left ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:56:38,797][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:56:38,803][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:56:38,823][root][INFO] - Image embeddings computed.
[2025-02-08 22:56:55,365][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:56:55,485][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:56:55,505][root][INFO] - Image embeddings computed.
[2025-02-08 22:56:59,629][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:56:59,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:56:59,788][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:03,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:04,038][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:04,058][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:08,223][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:08,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:08,391][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: put the brown ring in the left ring hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 31/50
[2025-02-08 22:58:02,238][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:58:02,246][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:58:02,266][root][INFO] - Image embeddings computed.
[2025-02-08 22:58:18,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:58:18,730][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:58:18,750][root][INFO] - Image embeddings computed.
[2025-02-08 22:58:22,903][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:58:22,906][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:58:22,926][root][INFO] - Image embeddings computed.
[2025-02-08 22:58:27,069][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:58:27,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:58:27,092][root][INFO] - Image embeddings computed.
[2025-02-08 22:58:31,261][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:58:31,269][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:58:31,290][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 13
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 22:59:21,256][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:21,351][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:21,371][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:38,046][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:38,150][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:38,184][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:42,313][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:42,451][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:42,476][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:46,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:46,726][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:46,746][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:50,922][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:51,104][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:51,125][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 12
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:00:41,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:00:41,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:00:41,654][root][INFO] - Image embeddings computed.
[2025-02-08 23:00:58,038][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:00:58,041][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:00:58,061][root][INFO] - Image embeddings computed.
[2025-02-08 23:01:02,189][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:01:02,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:01:02,212][root][INFO] - Image embeddings computed.
[2025-02-08 23:01:06,350][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:01:06,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:01:06,374][root][INFO] - Image embeddings computed.
[2025-02-08 23:01:10,543][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:01:10,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:01:10,566][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:02:00,928][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:00,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:00,957][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:17,447][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:17,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:17,477][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:21,636][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:21,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:21,663][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:25,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:25,808][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:25,828][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:30,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:30,008][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:30,028][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 13
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:03:21,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:03:21,555][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:03:21,576][root][INFO] - Image embeddings computed.
[2025-02-08 23:03:37,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:03:37,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:03:37,881][root][INFO] - Image embeddings computed.
[2025-02-08 23:03:41,997][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:03:42,000][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:03:42,020][root][INFO] - Image embeddings computed.
[2025-02-08 23:03:46,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:03:46,172][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:03:46,192][root][INFO] - Image embeddings computed.
[2025-02-08 23:03:50,364][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:03:50,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:03:50,387][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 13
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 32/50
[2025-02-08 23:04:46,867][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:46,999][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:47,020][root][INFO] - Image embeddings computed.
[2025-02-08 23:05:03,756][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:05:03,765][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:05:03,785][root][INFO] - Image embeddings computed.
[2025-02-08 23:05:07,953][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:05:07,961][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:05:07,981][root][INFO] - Image embeddings computed.
[2025-02-08 23:05:12,159][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:05:12,167][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:05:12,187][root][INFO] - Image embeddings computed.
[2025-02-08 23:05:16,296][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:05:16,299][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:05:16,319][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 24
Lang Goal: put the yellow letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:06:08,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:08,603][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:08,623][root][INFO] - Image embeddings computed.
[2025-02-08 23:06:25,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:25,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:25,100][root][INFO] - Image embeddings computed.
[2025-02-08 23:06:29,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:29,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:29,273][root][INFO] - Image embeddings computed.
[2025-02-08 23:06:33,426][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:33,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:33,456][root][INFO] - Image embeddings computed.
[2025-02-08 23:06:37,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:37,588][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:37,608][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 22
Lang Goal: put the yellow letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:07:29,372][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:07:29,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:07:29,408][root][INFO] - Image embeddings computed.
[2025-02-08 23:07:45,813][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:07:45,918][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:07:45,938][root][INFO] - Image embeddings computed.
[2025-02-08 23:07:50,087][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:07:50,207][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:07:50,227][root][INFO] - Image embeddings computed.
[2025-02-08 23:07:54,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:07:54,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:07:54,530][root][INFO] - Image embeddings computed.
[2025-02-08 23:07:58,660][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:07:58,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:07:58,800][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 21
Lang Goal: put the yellow letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:08:52,656][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:08:52,753][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:08:52,773][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:09,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:09,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:09,288][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:13,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:13,530][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:13,550][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:17,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:17,710][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:17,730][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:21,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:21,865][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:21,885][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 21
Lang Goal: put the yellow letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:10:14,070][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:10:14,079][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:10:14,100][root][INFO] - Image embeddings computed.
[2025-02-08 23:10:30,449][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:10:30,451][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:10:30,471][root][INFO] - Image embeddings computed.
[2025-02-08 23:10:34,608][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:10:34,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:10:34,631][root][INFO] - Image embeddings computed.
[2025-02-08 23:10:38,786][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:10:38,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:10:38,808][root][INFO] - Image embeddings computed.
[2025-02-08 23:10:42,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:10:42,939][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:10:42,959][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the yellow letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 33/50
[2025-02-08 23:11:39,543][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:39,553][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:39,573][root][INFO] - Image embeddings computed.
[2025-02-08 23:11:55,805][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:55,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:55,833][root][INFO] - Image embeddings computed.
[2025-02-08 23:11:59,980][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:59,983][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:12:00,003][root][INFO] - Image embeddings computed.
[2025-02-08 23:12:04,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:12:04,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:12:04,194][root][INFO] - Image embeddings computed.
[2025-02-08 23:12:08,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:12:08,333][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:12:08,353][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 11
Lang Goal: put the gray letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:13:01,054][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:13:01,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:13:01,086][root][INFO] - Image embeddings computed.
[2025-02-08 23:13:17,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:13:17,586][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:13:17,606][root][INFO] - Image embeddings computed.
[2025-02-08 23:13:21,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:13:21,753][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:13:21,773][root][INFO] - Image embeddings computed.
[2025-02-08 23:13:25,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:13:25,938][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:13:25,958][root][INFO] - Image embeddings computed.
[2025-02-08 23:13:30,102][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:13:30,113][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:13:30,133][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: put the gray letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:14:22,387][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:22,398][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:22,419][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:38,830][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:38,839][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:38,859][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:43,000][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:43,007][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:43,027][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:47,164][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:47,172][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:47,193][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:51,338][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:51,344][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:51,364][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 12
Lang Goal: put the gray letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:15:44,041][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:15:44,044][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:15:44,065][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:00,431][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:00,440][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:00,460][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:04,605][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:04,613][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:04,633][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:08,778][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:08,786][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:08,806][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:12,950][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:12,958][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:12,979][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 13
Lang Goal: put the gray letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:17:05,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:17:05,929][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:17:05,950][root][INFO] - Image embeddings computed.
[2025-02-08 23:17:22,355][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:17:22,363][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:17:22,383][root][INFO] - Image embeddings computed.
[2025-02-08 23:17:26,523][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:17:26,531][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:17:26,551][root][INFO] - Image embeddings computed.
[2025-02-08 23:17:30,694][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:17:30,697][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:17:30,717][root][INFO] - Image embeddings computed.
[2025-02-08 23:17:34,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:17:34,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:17:34,880][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 14
Lang Goal: put the gray letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 34/50
[2025-02-08 23:18:31,793][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:31,806][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:31,827][root][INFO] - Image embeddings computed.
[2025-02-08 23:18:48,128][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:48,136][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:48,156][root][INFO] - Image embeddings computed.
[2025-02-08 23:18:52,307][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:52,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:52,333][root][INFO] - Image embeddings computed.
[2025-02-08 23:18:56,497][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:56,504][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:56,524][root][INFO] - Image embeddings computed.
[2025-02-08 23:19:00,645][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:19:00,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:19:00,672][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the red letter L shape in the bottom letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:19:54,835][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:19:54,845][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:19:54,866][root][INFO] - Image embeddings computed.
[2025-02-08 23:20:11,253][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:20:11,256][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:20:11,276][root][INFO] - Image embeddings computed.
[2025-02-08 23:20:15,420][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:20:15,423][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:20:15,443][root][INFO] - Image embeddings computed.
[2025-02-08 23:20:19,591][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:20:19,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:20:19,614][root][INFO] - Image embeddings computed.
[2025-02-08 23:20:23,746][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:20:23,749][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:20:23,769][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 15
Lang Goal: put the red letter L shape in the bottom letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:21:17,714][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:17,720][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:17,741][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:34,044][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:34,052][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:34,072][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:38,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:38,218][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:38,238][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:42,397][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:42,400][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:42,420][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:46,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:46,560][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:46,580][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: put the red letter L shape in the bottom letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:22:41,306][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:22:41,309][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:22:41,329][root][INFO] - Image embeddings computed.
[2025-02-08 23:22:57,761][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:22:57,767][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:22:57,787][root][INFO] - Image embeddings computed.
[2025-02-08 23:23:01,924][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:01,931][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:01,951][root][INFO] - Image embeddings computed.
[2025-02-08 23:23:06,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:06,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:06,132][root][INFO] - Image embeddings computed.
[2025-02-08 23:23:10,261][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:10,269][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:10,289][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 15
Lang Goal: put the red letter L shape in the bottom letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:24:05,821][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:24:05,828][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:24:05,848][root][INFO] - Image embeddings computed.
[2025-02-08 23:24:22,076][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:24:22,084][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:24:22,104][root][INFO] - Image embeddings computed.
[2025-02-08 23:24:26,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:24:26,255][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:24:26,275][root][INFO] - Image embeddings computed.
[2025-02-08 23:24:30,441][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:24:30,449][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:24:30,469][root][INFO] - Image embeddings computed.
[2025-02-08 23:24:34,618][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:24:34,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:24:34,641][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 17
Lang Goal: put the red letter L shape in the bottom letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 35/50
[2025-02-08 23:25:34,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:25:34,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:25:34,663][root][INFO] - Image embeddings computed.
[2025-02-08 23:25:51,196][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:25:51,206][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:25:51,226][root][INFO] - Image embeddings computed.
[2025-02-08 23:25:55,366][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:25:55,373][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:25:55,393][root][INFO] - Image embeddings computed.
[2025-02-08 23:25:59,549][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:25:59,556][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:25:59,576][root][INFO] - Image embeddings computed.
[2025-02-08 23:26:03,718][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:26:03,725][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:26:03,745][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 18
Lang Goal: put the brown ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:26:58,968][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:26:59,079][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:26:59,099][root][INFO] - Image embeddings computed.
[2025-02-08 23:27:15,761][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:27:15,918][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:27:15,938][root][INFO] - Image embeddings computed.
[2025-02-08 23:27:20,052][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:27:20,220][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:27:20,240][root][INFO] - Image embeddings computed.
[2025-02-08 23:27:24,366][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:27:24,469][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:27:24,495][root][INFO] - Image embeddings computed.
[2025-02-08 23:27:28,643][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:27:28,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:27:28,845][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 15
Lang Goal: put the brown ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:28:24,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:24,613][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:24,633][root][INFO] - Image embeddings computed.
[2025-02-08 23:28:41,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:41,153][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:41,191][root][INFO] - Image embeddings computed.
[2025-02-08 23:28:45,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:45,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:45,333][root][INFO] - Image embeddings computed.
[2025-02-08 23:28:49,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:49,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:49,488][root][INFO] - Image embeddings computed.
[2025-02-08 23:28:53,648][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:53,651][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:53,671][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 14
Lang Goal: put the brown ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:29:51,642][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:29:51,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:29:51,672][root][INFO] - Image embeddings computed.
[2025-02-08 23:30:08,184][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:08,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:08,212][root][INFO] - Image embeddings computed.
[2025-02-08 23:30:12,329][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:12,332][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:12,352][root][INFO] - Image embeddings computed.
[2025-02-08 23:30:16,478][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:16,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:16,501][root][INFO] - Image embeddings computed.
[2025-02-08 23:30:20,656][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:20,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:20,684][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the brown ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:31:16,185][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:31:16,190][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:31:16,210][root][INFO] - Image embeddings computed.
[2025-02-08 23:31:32,718][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:31:32,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:31:32,741][root][INFO] - Image embeddings computed.
[2025-02-08 23:31:36,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:31:36,876][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:31:36,896][root][INFO] - Image embeddings computed.
[2025-02-08 23:31:41,028][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:31:41,037][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:31:41,057][root][INFO] - Image embeddings computed.
[2025-02-08 23:31:45,211][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:31:45,218][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:31:45,238][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: put the brown ring in the ring hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 36/50
[2025-02-08 23:32:45,510][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:32:45,523][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:32:45,543][root][INFO] - Image embeddings computed.
[2025-02-08 23:33:02,065][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:33:02,074][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:33:02,094][root][INFO] - Image embeddings computed.
[2025-02-08 23:33:06,233][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:33:06,236][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:33:06,256][root][INFO] - Image embeddings computed.
[2025-02-08 23:33:10,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:33:10,409][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:33:10,430][root][INFO] - Image embeddings computed.
[2025-02-08 23:33:14,604][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:33:14,607][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:33:14,627][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 14
Lang Goal: put the red hexagon in the hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:34:12,276][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:34:12,279][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:34:12,300][root][INFO] - Image embeddings computed.
[2025-02-08 23:34:28,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:34:28,720][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:34:28,740][root][INFO] - Image embeddings computed.
[2025-02-08 23:34:32,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:34:32,885][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:34:32,905][root][INFO] - Image embeddings computed.
[2025-02-08 23:34:37,025][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:34:37,032][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:34:37,051][root][INFO] - Image embeddings computed.
[2025-02-08 23:34:41,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:34:41,225][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:34:41,245][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: put the red hexagon in the hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:35:37,841][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:35:37,852][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:35:37,872][root][INFO] - Image embeddings computed.
[2025-02-08 23:35:54,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:35:54,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:35:54,409][root][INFO] - Image embeddings computed.
[2025-02-08 23:35:58,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:35:58,564][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:35:58,585][root][INFO] - Image embeddings computed.
[2025-02-08 23:36:02,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:36:02,733][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:36:02,753][root][INFO] - Image embeddings computed.
[2025-02-08 23:36:06,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:36:06,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:36:06,967][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 16
Lang Goal: put the red hexagon in the hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:37:04,078][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:37:04,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:37:04,110][root][INFO] - Image embeddings computed.
[2025-02-08 23:37:20,516][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:37:20,522][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:37:20,542][root][INFO] - Image embeddings computed.
[2025-02-08 23:37:24,688][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:37:24,696][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:37:24,716][root][INFO] - Image embeddings computed.
[2025-02-08 23:37:28,840][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:37:28,849][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:37:28,869][root][INFO] - Image embeddings computed.
[2025-02-08 23:37:33,038][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:37:33,047][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:37:33,067][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: put the red hexagon in the hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:38:31,353][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:31,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:31,492][root][INFO] - Image embeddings computed.
[2025-02-08 23:38:48,050][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:48,147][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:48,167][root][INFO] - Image embeddings computed.
[2025-02-08 23:38:52,315][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:52,439][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:52,459][root][INFO] - Image embeddings computed.
[2025-02-08 23:38:56,591][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:56,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:56,718][root][INFO] - Image embeddings computed.
[2025-02-08 23:39:00,900][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:39:01,007][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:39:01,027][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 15
Lang Goal: put the red hexagon in the hexagon hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 37/50
[2025-02-08 23:40:02,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:40:02,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:40:02,793][root][INFO] - Image embeddings computed.
[2025-02-08 23:40:19,493][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:40:19,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:40:19,521][root][INFO] - Image embeddings computed.
[2025-02-08 23:40:23,645][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:40:23,651][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:40:23,671][root][INFO] - Image embeddings computed.
[2025-02-08 23:40:27,821][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:40:27,824][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:40:27,844][root][INFO] - Image embeddings computed.
[2025-02-08 23:40:31,993][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:40:31,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:40:32,016][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 16
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:41:30,336][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:41:30,455][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:41:30,475][root][INFO] - Image embeddings computed.
[2025-02-08 23:41:47,063][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:41:47,229][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:41:47,249][root][INFO] - Image embeddings computed.
[2025-02-08 23:41:51,362][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:41:51,494][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:41:51,514][root][INFO] - Image embeddings computed.
[2025-02-08 23:41:55,687][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:41:55,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:41:55,875][root][INFO] - Image embeddings computed.
[2025-02-08 23:42:00,028][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:42:00,138][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:42:00,158][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:43:00,468][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:00,478][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:00,499][root][INFO] - Image embeddings computed.
[2025-02-08 23:43:16,995][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:17,003][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:17,024][root][INFO] - Image embeddings computed.
[2025-02-08 23:43:21,137][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:21,145][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:21,165][root][INFO] - Image embeddings computed.
[2025-02-08 23:43:25,333][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:25,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:25,358][root][INFO] - Image embeddings computed.
[2025-02-08 23:43:29,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:29,514][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:29,534][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 16
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:44:28,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:44:28,478][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:44:28,499][root][INFO] - Image embeddings computed.
[2025-02-08 23:44:45,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:44:45,071][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:44:45,091][root][INFO] - Image embeddings computed.
[2025-02-08 23:44:49,203][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:44:49,212][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:44:49,232][root][INFO] - Image embeddings computed.
[2025-02-08 23:44:53,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:44:53,422][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:44:53,442][root][INFO] - Image embeddings computed.
[2025-02-08 23:44:57,593][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:44:57,601][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:44:57,621][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 14
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:45:57,310][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:45:57,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:45:57,341][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:13,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:13,871][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:13,891][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:18,005][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:18,014][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:18,034][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:22,193][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:22,202][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:22,222][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:26,375][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:26,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:26,403][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 15
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 38/50
[2025-02-08 23:47:29,735][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:47:29,869][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:47:29,890][root][INFO] - Image embeddings computed.
[2025-02-08 23:47:46,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:47:46,557][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:47:46,578][root][INFO] - Image embeddings computed.
[2025-02-08 23:47:50,715][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:47:50,833][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:47:50,853][root][INFO] - Image embeddings computed.
[2025-02-08 23:47:54,980][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:47:55,083][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:47:55,103][root][INFO] - Image embeddings computed.
[2025-02-08 23:47:59,261][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:47:59,362][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:47:59,382][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the brown letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:48:58,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:48:59,004][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:48:59,024][root][INFO] - Image embeddings computed.
[2025-02-08 23:49:15,552][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:49:15,559][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:49:15,579][root][INFO] - Image embeddings computed.
[2025-02-08 23:49:19,734][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:49:19,736][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:49:19,756][root][INFO] - Image embeddings computed.
[2025-02-08 23:49:23,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:49:23,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:49:23,931][root][INFO] - Image embeddings computed.
[2025-02-08 23:49:28,081][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:49:28,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:49:28,116][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the brown letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:50:27,580][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:50:27,583][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:50:27,603][root][INFO] - Image embeddings computed.
[2025-02-08 23:50:44,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:50:44,106][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:50:44,127][root][INFO] - Image embeddings computed.
[2025-02-08 23:50:48,269][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:50:48,272][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:50:48,292][root][INFO] - Image embeddings computed.
[2025-02-08 23:50:52,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:50:52,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:50:52,464][root][INFO] - Image embeddings computed.
[2025-02-08 23:50:56,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:50:56,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:50:56,647][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the brown letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:51:56,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:51:56,516][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:51:56,536][root][INFO] - Image embeddings computed.
[2025-02-08 23:52:13,018][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:52:13,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:52:13,046][root][INFO] - Image embeddings computed.
[2025-02-08 23:52:17,191][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:52:17,194][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:52:17,214][root][INFO] - Image embeddings computed.
[2025-02-08 23:52:21,364][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:52:21,366][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:52:21,386][root][INFO] - Image embeddings computed.
[2025-02-08 23:52:25,542][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:52:25,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:52:25,565][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the brown letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:53:26,078][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:26,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:26,108][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:42,610][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:42,614][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:42,635][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:46,782][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:46,784][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:46,804][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:50,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:50,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:50,984][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:55,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:55,138][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:55,159][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the brown letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 39/50
[2025-02-08 23:55:00,005][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:00,125][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:00,146][root][INFO] - Image embeddings computed.
[2025-02-08 23:55:16,586][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:16,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:16,733][root][INFO] - Image embeddings computed.
[2025-02-08 23:55:20,879][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:21,047][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:21,067][root][INFO] - Image embeddings computed.
[2025-02-08 23:55:25,223][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:25,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:25,408][root][INFO] - Image embeddings computed.
[2025-02-08 23:55:29,565][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:29,668][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:29,688][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the gray letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:56:30,826][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:56:30,834][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:56:30,854][root][INFO] - Image embeddings computed.
[2025-02-08 23:56:47,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:56:47,498][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:56:47,518][root][INFO] - Image embeddings computed.
[2025-02-08 23:56:51,656][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:56:51,659][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:56:51,679][root][INFO] - Image embeddings computed.
[2025-02-08 23:56:55,824][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:56:55,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:56:55,846][root][INFO] - Image embeddings computed.
[2025-02-08 23:57:00,007][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:57:00,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:57:00,029][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 15
Lang Goal: put the gray letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:58:01,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:01,759][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:01,786][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:18,445][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:18,618][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:18,643][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:22,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:22,978][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:23,004][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:27,177][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:27,285][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:27,311][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:31,462][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:31,469][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:31,504][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: put the gray letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-08 23:59:32,427][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:59:32,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:59:32,456][root][INFO] - Image embeddings computed.
[2025-02-08 23:59:48,821][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:59:48,824][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:59:48,844][root][INFO] - Image embeddings computed.
[2025-02-08 23:59:52,969][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:59:52,971][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:59:52,991][root][INFO] - Image embeddings computed.
[2025-02-08 23:59:57,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:59:57,138][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:59:57,159][root][INFO] - Image embeddings computed.
[2025-02-09 00:00:01,294][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:00:01,302][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:00:01,322][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: put the gray letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:01:02,652][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:02,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:02,686][root][INFO] - Image embeddings computed.
[2025-02-09 00:01:19,379][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:19,387][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:19,407][root][INFO] - Image embeddings computed.
[2025-02-09 00:01:23,527][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:23,530][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:23,550][root][INFO] - Image embeddings computed.
[2025-02-09 00:01:27,719][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:27,722][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:27,742][root][INFO] - Image embeddings computed.
[2025-02-09 00:01:31,892][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:31,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:31,919][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 13
Lang Goal: put the gray letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 40/50
[2025-02-09 00:02:37,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:02:37,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:02:37,957][root][INFO] - Image embeddings computed.
[2025-02-09 00:02:54,164][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:02:54,167][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:02:54,187][root][INFO] - Image embeddings computed.
[2025-02-09 00:02:58,354][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:02:58,357][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:02:58,377][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:02,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:02,534][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:02,554][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:06,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:06,710][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:06,730][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: put the red hexagon in the right hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:04:08,434][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:04:08,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:04:08,466][root][INFO] - Image embeddings computed.
[2025-02-09 00:04:24,616][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:04:24,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:04:24,639][root][INFO] - Image embeddings computed.
[2025-02-09 00:04:28,777][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:04:28,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:04:28,800][root][INFO] - Image embeddings computed.
[2025-02-09 00:04:32,931][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:04:32,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:04:32,954][root][INFO] - Image embeddings computed.
[2025-02-09 00:04:37,108][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:04:37,110][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:04:37,131][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 13
Lang Goal: put the red hexagon in the right hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:05:39,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:05:39,122][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:05:39,143][root][INFO] - Image embeddings computed.
[2025-02-09 00:05:55,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:05:55,335][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:05:55,355][root][INFO] - Image embeddings computed.
[2025-02-09 00:05:59,494][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:05:59,503][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:05:59,524][root][INFO] - Image embeddings computed.
[2025-02-09 00:06:03,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:06:03,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:06:03,710][root][INFO] - Image embeddings computed.
[2025-02-09 00:06:07,854][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:06:07,864][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:06:07,884][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 17
Lang Goal: put the red hexagon in the right hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:07:10,441][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:07:10,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:07:10,487][root][INFO] - Image embeddings computed.
[2025-02-09 00:07:26,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:07:26,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:07:26,645][root][INFO] - Image embeddings computed.
[2025-02-09 00:07:30,804][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:07:30,807][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:07:30,827][root][INFO] - Image embeddings computed.
[2025-02-09 00:07:34,963][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:07:34,966][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:07:34,986][root][INFO] - Image embeddings computed.
[2025-02-09 00:07:39,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:07:39,134][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:07:39,155][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 14
Lang Goal: put the red hexagon in the right hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:08:42,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:42,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:42,968][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:59,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:59,295][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:59,315][root][INFO] - Image embeddings computed.
[2025-02-09 00:09:03,477][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:09:03,480][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:09:03,500][root][INFO] - Image embeddings computed.
[2025-02-09 00:09:07,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:09:07,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:09:07,683][root][INFO] - Image embeddings computed.
[2025-02-09 00:09:11,836][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:09:11,839][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:09:11,859][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: put the red hexagon in the right hexagon hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 41/50
[2025-02-09 00:10:19,404][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:19,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:19,567][root][INFO] - Image embeddings computed.
[2025-02-09 00:10:36,138][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:36,251][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:36,272][root][INFO] - Image embeddings computed.
[2025-02-09 00:10:40,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:40,508][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:40,528][root][INFO] - Image embeddings computed.
[2025-02-09 00:10:44,744][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:44,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:44,862][root][INFO] - Image embeddings computed.
[2025-02-09 00:10:48,982][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:49,084][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:49,104][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: put the brown letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:11:52,302][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:11:52,314][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:11:52,334][root][INFO] - Image embeddings computed.
[2025-02-09 00:12:08,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:12:08,576][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:12:08,596][root][INFO] - Image embeddings computed.
[2025-02-09 00:12:12,730][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:12:12,738][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:12:12,759][root][INFO] - Image embeddings computed.
[2025-02-09 00:12:16,931][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:12:16,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:12:16,954][root][INFO] - Image embeddings computed.
[2025-02-09 00:12:21,089][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:12:21,091][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:12:21,111][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 14
Lang Goal: put the brown letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:13:24,648][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:24,657][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:24,677][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:40,974][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:40,984][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:41,004][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:45,148][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:45,157][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:45,178][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:49,397][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:49,405][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:49,425][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:53,567][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:53,575][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:53,595][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: put the brown letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:14:57,449][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:14:57,452][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:14:57,472][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:13,711][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:13,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:13,739][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:17,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:17,864][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:17,884][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:22,055][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:22,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:22,174][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:26,314][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:26,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:26,463][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the brown letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:16:31,198][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:16:31,223][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:16:31,243][root][INFO] - Image embeddings computed.
[2025-02-09 00:16:47,676][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:16:47,685][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:16:47,705][root][INFO] - Image embeddings computed.
[2025-02-09 00:16:51,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:16:51,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:16:51,878][root][INFO] - Image embeddings computed.
[2025-02-09 00:16:56,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:16:56,077][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:16:56,108][root][INFO] - Image embeddings computed.
[2025-02-09 00:17:00,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:17:00,225][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:17:00,245][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: put the brown letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 42/50
[2025-02-09 00:18:08,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:08,645][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:08,665][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:25,045][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:25,219][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:25,239][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:29,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:29,504][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:29,524][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:33,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:33,827][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:33,848][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:38,021][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:38,128][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:38,148][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 21
Lang Goal: put the red letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:19:44,090][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:19:44,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:19:44,113][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:00,493][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:00,502][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:00,522][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:04,656][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:04,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:04,683][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:08,823][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:08,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:08,846][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:13,028][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:13,035][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:13,055][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 22
Lang Goal: put the red letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:21:18,687][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:21:18,692][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:21:18,712][root][INFO] - Image embeddings computed.
[2025-02-09 00:21:34,993][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:21:34,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:21:35,016][root][INFO] - Image embeddings computed.
[2025-02-09 00:21:39,155][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:21:39,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:21:39,182][root][INFO] - Image embeddings computed.
[2025-02-09 00:21:43,336][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:21:43,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:21:43,358][root][INFO] - Image embeddings computed.
[2025-02-09 00:21:47,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:21:47,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:21:47,557][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 21
Lang Goal: put the red letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:22:53,906][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:22:53,920][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:22:53,940][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:10,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:10,502][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:10,523][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:14,655][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:14,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:14,683][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:18,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:18,983][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:19,013][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:23,195][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:23,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:23,374][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 22
Lang Goal: put the red letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:24:29,452][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:24:29,455][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:24:29,475][root][INFO] - Image embeddings computed.
[2025-02-09 00:24:45,830][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:24:45,837][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:24:45,858][root][INFO] - Image embeddings computed.
[2025-02-09 00:24:49,990][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:24:49,997][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:24:50,017][root][INFO] - Image embeddings computed.
[2025-02-09 00:24:54,170][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:24:54,178][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:24:54,198][root][INFO] - Image embeddings computed.
[2025-02-09 00:24:58,384][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:24:58,386][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:24:58,406][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 23
Lang Goal: put the red letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 43/50
[2025-02-09 00:26:09,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:26:09,379][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:26:09,399][root][INFO] - Image embeddings computed.
[2025-02-09 00:26:25,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:26:25,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:26:25,990][root][INFO] - Image embeddings computed.
[2025-02-09 00:26:30,131][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:26:30,134][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:26:30,154][root][INFO] - Image embeddings computed.
[2025-02-09 00:26:34,301][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:26:34,303][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:26:34,323][root][INFO] - Image embeddings computed.
[2025-02-09 00:26:38,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:26:38,495][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:26:38,515][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 18
Lang Goal: put the green ring in the bottom ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:27:44,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:27:44,635][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:27:44,655][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:01,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:01,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:01,038][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:05,182][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:05,189][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:05,209][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:09,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:09,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:09,388][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:13,561][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:13,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:13,590][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 13
Lang Goal: put the green ring in the bottom ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:29:20,063][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:29:20,066][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:29:20,086][root][INFO] - Image embeddings computed.
[2025-02-09 00:29:36,644][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:29:36,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:29:36,672][root][INFO] - Image embeddings computed.
[2025-02-09 00:29:40,812][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:29:40,821][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:29:40,841][root][INFO] - Image embeddings computed.
[2025-02-09 00:29:45,000][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:29:45,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:29:45,029][root][INFO] - Image embeddings computed.
[2025-02-09 00:29:49,195][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:29:49,197][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:29:49,217][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 18
Lang Goal: put the green ring in the bottom ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:30:56,223][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:56,232][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:56,252][root][INFO] - Image embeddings computed.
[2025-02-09 00:31:12,724][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:31:12,733][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:31:12,753][root][INFO] - Image embeddings computed.
[2025-02-09 00:31:16,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:31:16,910][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:31:16,930][root][INFO] - Image embeddings computed.
[2025-02-09 00:31:21,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:31:21,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:31:21,100][root][INFO] - Image embeddings computed.
[2025-02-09 00:31:25,262][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:31:25,265][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:31:25,285][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: put the green ring in the bottom ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:32:31,982][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:32:31,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:32:32,010][root][INFO] - Image embeddings computed.
[2025-02-09 00:32:48,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:32:48,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:32:48,609][root][INFO] - Image embeddings computed.
[2025-02-09 00:32:52,746][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:32:52,751][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:32:52,772][root][INFO] - Image embeddings computed.
[2025-02-09 00:32:56,931][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:32:56,940][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:32:56,960][root][INFO] - Image embeddings computed.
[2025-02-09 00:33:01,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:33:01,140][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:33:01,160][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: put the green ring in the bottom ring hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 44/50
[2025-02-09 00:34:12,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:34:12,350][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:34:12,371][root][INFO] - Image embeddings computed.
[2025-02-09 00:34:28,777][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:34:28,961][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:34:28,981][root][INFO] - Image embeddings computed.
[2025-02-09 00:34:33,139][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:34:33,311][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:34:33,331][root][INFO] - Image embeddings computed.
[2025-02-09 00:34:37,505][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:34:37,602][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:34:37,623][root][INFO] - Image embeddings computed.
[2025-02-09 00:34:41,729][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:34:41,739][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:34:41,759][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 22
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:35:49,782][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:35:49,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:35:49,816][root][INFO] - Image embeddings computed.
[2025-02-09 00:36:06,038][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:36:06,043][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:36:06,064][root][INFO] - Image embeddings computed.
[2025-02-09 00:36:10,227][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:36:10,236][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:36:10,256][root][INFO] - Image embeddings computed.
[2025-02-09 00:36:14,376][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:36:14,384][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:36:14,404][root][INFO] - Image embeddings computed.
[2025-02-09 00:36:18,490][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:36:18,497][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:36:18,517][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:37:27,462][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:37:27,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:37:27,636][root][INFO] - Image embeddings computed.
[2025-02-09 00:37:44,166][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:37:44,275][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:37:44,296][root][INFO] - Image embeddings computed.
[2025-02-09 00:37:48,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:37:48,581][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:37:48,602][root][INFO] - Image embeddings computed.
[2025-02-09 00:37:52,739][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:37:52,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:37:52,867][root][INFO] - Image embeddings computed.
[2025-02-09 00:37:56,988][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:37:57,085][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:37:57,106][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 25
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:39:05,947][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:39:05,950][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:39:05,970][root][INFO] - Image embeddings computed.
[2025-02-09 00:39:22,211][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:39:22,222][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:39:22,242][root][INFO] - Image embeddings computed.
[2025-02-09 00:39:26,415][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:39:26,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:39:26,444][root][INFO] - Image embeddings computed.
[2025-02-09 00:39:30,586][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:39:30,596][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:39:30,617][root][INFO] - Image embeddings computed.
[2025-02-09 00:39:34,743][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:39:34,746][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:39:34,766][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:40:43,740][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:40:43,752][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:40:43,773][root][INFO] - Image embeddings computed.
[2025-02-09 00:40:59,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:41:00,003][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:41:00,023][root][INFO] - Image embeddings computed.
[2025-02-09 00:41:04,192][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:41:04,202][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:41:04,222][root][INFO] - Image embeddings computed.
[2025-02-09 00:41:08,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:41:08,346][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:41:08,366][root][INFO] - Image embeddings computed.
[2025-02-09 00:41:12,490][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:41:12,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:41:12,513][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 17
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 45/50
[2025-02-09 00:42:25,716][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:42:25,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:42:25,895][root][INFO] - Image embeddings computed.
[2025-02-09 00:42:42,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:42:42,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:42:42,509][root][INFO] - Image embeddings computed.
[2025-02-09 00:42:46,655][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:42:46,827][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:42:46,848][root][INFO] - Image embeddings computed.
[2025-02-09 00:42:50,986][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:42:51,082][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:42:51,102][root][INFO] - Image embeddings computed.
[2025-02-09 00:42:55,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:42:55,432][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:42:55,452][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 19
Lang Goal: put the blue letter L shape in the letter L shape hole
Total Reward: 0.200 | Done: False

[2025-02-09 00:44:04,518][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:44:04,521][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:44:04,541][root][INFO] - Image embeddings computed.
[2025-02-09 00:44:20,854][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:44:20,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:44:20,882][root][INFO] - Image embeddings computed.
[2025-02-09 00:44:25,016][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:44:25,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:44:25,045][root][INFO] - Image embeddings computed.
[2025-02-09 00:44:29,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:44:29,185][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:44:29,205][root][INFO] - Image embeddings computed.
[2025-02-09 00:44:33,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:44:33,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:44:33,403][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 17
Lang Goal: put the green letter E shape in the letter E shape hole
Total Reward: 0.200 | Done: False

[2025-02-09 00:45:42,758][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:45:42,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:45:42,789][root][INFO] - Image embeddings computed.
[2025-02-09 00:45:59,036][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:45:59,044][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:45:59,064][root][INFO] - Image embeddings computed.
[2025-02-09 00:46:03,193][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:46:03,196][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:46:03,216][root][INFO] - Image embeddings computed.
[2025-02-09 00:46:07,335][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:46:07,337][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:46:07,358][root][INFO] - Image embeddings computed.
[2025-02-09 00:46:11,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:46:11,533][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:46:11,553][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 21
Lang Goal: put the green letter E shape in the letter E shape hole
Total Reward: 0.200 | Done: False

[2025-02-09 00:47:21,229][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:47:21,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:47:21,260][root][INFO] - Image embeddings computed.
[2025-02-09 00:47:37,643][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:47:37,653][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:47:37,673][root][INFO] - Image embeddings computed.
[2025-02-09 00:47:41,787][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:47:41,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:47:41,815][root][INFO] - Image embeddings computed.
[2025-02-09 00:47:45,969][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:47:45,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:47:45,997][root][INFO] - Image embeddings computed.
[2025-02-09 00:47:50,167][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:47:50,175][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:47:50,195][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the green letter E shape in the letter E shape hole
Total Reward: 0.200 | Done: False

[2025-02-09 00:49:01,285][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:49:01,288][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:49:01,309][root][INFO] - Image embeddings computed.
[2025-02-09 00:49:17,719][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:49:17,727][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:49:17,747][root][INFO] - Image embeddings computed.
[2025-02-09 00:49:21,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:49:21,851][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:49:21,871][root][INFO] - Image embeddings computed.
[2025-02-09 00:49:26,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:49:26,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:49:26,029][root][INFO] - Image embeddings computed.
[2025-02-09 00:49:30,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:49:30,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:49:30,211][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 21
Lang Goal: put the green letter E shape in the letter E shape hole
Total Reward: 0.200 | Done: False

Mean: 0.0044444444444444444 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 46/50
[2025-02-09 00:50:45,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:50:45,772][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:50:45,792][root][INFO] - Image embeddings computed.
[2025-02-09 00:51:02,499][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:02,507][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:02,527][root][INFO] - Image embeddings computed.
[2025-02-09 00:51:06,689][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:06,699][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:06,719][root][INFO] - Image embeddings computed.
[2025-02-09 00:51:10,915][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:10,923][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:10,943][root][INFO] - Image embeddings computed.
[2025-02-09 00:51:15,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:15,043][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:15,063][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 16
Lang Goal: put the green letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:52:26,373][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:52:26,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:52:26,403][root][INFO] - Image embeddings computed.
[2025-02-09 00:52:42,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:52:42,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:52:42,875][root][INFO] - Image embeddings computed.
[2025-02-09 00:52:47,036][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:52:47,044][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:52:47,064][root][INFO] - Image embeddings computed.
[2025-02-09 00:52:51,256][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:52:51,259][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:52:51,279][root][INFO] - Image embeddings computed.
[2025-02-09 00:52:55,399][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:52:55,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:52:55,422][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 14
Lang Goal: put the green letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:54:06,259][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:54:06,268][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:54:06,288][root][INFO] - Image embeddings computed.
[2025-02-09 00:54:22,675][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:54:22,683][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:54:22,703][root][INFO] - Image embeddings computed.
[2025-02-09 00:54:26,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:54:26,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:54:26,883][root][INFO] - Image embeddings computed.
[2025-02-09 00:54:31,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:54:31,084][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:54:31,104][root][INFO] - Image embeddings computed.
[2025-02-09 00:54:35,222][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:54:35,227][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:54:35,247][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the green letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:55:45,981][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:55:46,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:55:46,029][root][INFO] - Image embeddings computed.
[2025-02-09 00:56:02,536][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:02,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:02,564][root][INFO] - Image embeddings computed.
[2025-02-09 00:56:06,716][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:06,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:06,741][root][INFO] - Image embeddings computed.
[2025-02-09 00:56:10,927][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:10,936][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:10,956][root][INFO] - Image embeddings computed.
[2025-02-09 00:56:15,067][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:15,075][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:15,095][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the green letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 00:57:27,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:57:27,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:57:27,673][root][INFO] - Image embeddings computed.
[2025-02-09 00:57:44,270][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:57:44,277][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:57:44,297][root][INFO] - Image embeddings computed.
[2025-02-09 00:57:48,473][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:57:48,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:57:48,501][root][INFO] - Image embeddings computed.
[2025-02-09 00:57:52,673][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:57:52,676][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:57:52,696][root][INFO] - Image embeddings computed.
[2025-02-09 00:57:56,811][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:57:56,832][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:57:56,852][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 17
Lang Goal: put the green letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.004347826086956522 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 47/50
[2025-02-09 00:59:12,764][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:59:12,771][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:59:12,792][root][INFO] - Image embeddings computed.
[2025-02-09 00:59:29,059][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:59:29,067][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:59:29,087][root][INFO] - Image embeddings computed.
[2025-02-09 00:59:33,231][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:59:33,236][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:59:33,256][root][INFO] - Image embeddings computed.
[2025-02-09 00:59:37,392][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:59:37,401][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:59:37,421][root][INFO] - Image embeddings computed.
[2025-02-09 00:59:41,536][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:59:41,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:59:41,564][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 19
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:00:54,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:00:54,033][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:00:54,053][root][INFO] - Image embeddings computed.
[2025-02-09 01:01:10,261][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:01:10,270][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:01:10,290][root][INFO] - Image embeddings computed.
[2025-02-09 01:01:14,420][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:01:14,428][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:01:14,448][root][INFO] - Image embeddings computed.
[2025-02-09 01:01:18,594][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:01:18,609][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:01:18,629][root][INFO] - Image embeddings computed.
[2025-02-09 01:01:22,744][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:01:22,753][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:01:22,773][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:02:35,062][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:02:35,178][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:02:35,198][root][INFO] - Image embeddings computed.
[2025-02-09 01:02:51,499][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:02:51,605][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:02:51,625][root][INFO] - Image embeddings computed.
[2025-02-09 01:02:55,776][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:02:55,910][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:02:55,930][root][INFO] - Image embeddings computed.
[2025-02-09 01:03:00,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:03:00,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:03:00,188][root][INFO] - Image embeddings computed.
[2025-02-09 01:03:04,304][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:03:04,407][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:03:04,427][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:04:17,456][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:04:17,465][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:04:17,486][root][INFO] - Image embeddings computed.
[2025-02-09 01:04:33,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:04:33,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:04:33,643][root][INFO] - Image embeddings computed.
[2025-02-09 01:04:37,774][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:04:37,782][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:04:37,802][root][INFO] - Image embeddings computed.
[2025-02-09 01:04:41,917][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:04:41,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:04:41,947][root][INFO] - Image embeddings computed.
[2025-02-09 01:04:46,067][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:04:46,075][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:04:46,095][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 12
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:05:58,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:05:58,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:05:58,975][root][INFO] - Image embeddings computed.
[2025-02-09 01:06:15,107][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:06:15,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:06:15,136][root][INFO] - Image embeddings computed.
[2025-02-09 01:06:19,273][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:06:19,276][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:06:19,296][root][INFO] - Image embeddings computed.
[2025-02-09 01:06:23,411][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:06:23,420][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:06:23,440][root][INFO] - Image embeddings computed.
[2025-02-09 01:06:27,602][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:06:27,605][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:06:27,625][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 11
Lang Goal: put the blue letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.00425531914893617 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 48/50
[2025-02-09 01:07:44,483][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:07:44,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:07:44,614][root][INFO] - Image embeddings computed.
[2025-02-09 01:08:01,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:08:01,177][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:08:01,197][root][INFO] - Image embeddings computed.
[2025-02-09 01:08:05,332][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:08:05,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:08:05,358][root][INFO] - Image embeddings computed.
[2025-02-09 01:08:09,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:08:09,514][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:08:09,534][root][INFO] - Image embeddings computed.
[2025-02-09 01:08:13,687][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:08:13,697][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:08:13,717][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: put the blue letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:09:26,756][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:09:26,867][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:09:26,887][root][INFO] - Image embeddings computed.
[2025-02-09 01:09:43,081][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:09:43,188][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:09:43,208][root][INFO] - Image embeddings computed.
[2025-02-09 01:09:47,331][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:09:47,425][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:09:47,445][root][INFO] - Image embeddings computed.
[2025-02-09 01:09:51,577][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:09:51,671][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:09:51,691][root][INFO] - Image embeddings computed.
[2025-02-09 01:09:55,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:09:55,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:09:55,990][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the blue letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:11:09,249][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:11:09,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:11:09,280][root][INFO] - Image embeddings computed.
[2025-02-09 01:11:25,484][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:11:25,492][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:11:25,512][root][INFO] - Image embeddings computed.
[2025-02-09 01:11:29,652][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:11:29,661][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:11:29,681][root][INFO] - Image embeddings computed.
[2025-02-09 01:11:33,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:11:33,827][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:11:33,848][root][INFO] - Image embeddings computed.
[2025-02-09 01:11:38,025][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:11:38,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:11:38,054][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the blue letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:12:52,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:12:52,414][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:12:52,434][root][INFO] - Image embeddings computed.
[2025-02-09 01:13:08,563][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:13:08,570][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:13:08,590][root][INFO] - Image embeddings computed.
[2025-02-09 01:13:12,721][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:13:12,729][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:13:12,749][root][INFO] - Image embeddings computed.
[2025-02-09 01:13:16,892][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:13:16,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:13:16,920][root][INFO] - Image embeddings computed.
[2025-02-09 01:13:21,098][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:13:21,108][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:13:21,128][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: put the blue letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:14:34,608][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:14:34,614][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:14:34,634][root][INFO] - Image embeddings computed.
[2025-02-09 01:14:50,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:14:50,748][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:14:50,768][root][INFO] - Image embeddings computed.
[2025-02-09 01:14:54,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:14:54,887][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:14:54,907][root][INFO] - Image embeddings computed.
[2025-02-09 01:14:59,034][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:14:59,037][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:14:59,057][root][INFO] - Image embeddings computed.
[2025-02-09 01:15:03,234][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:15:03,244][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:15:03,264][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the blue letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.004166666666666667 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 49/50
[2025-02-09 01:16:22,599][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:16:22,609][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:16:22,629][root][INFO] - Image embeddings computed.
[2025-02-09 01:16:38,929][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:16:38,943][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:16:38,963][root][INFO] - Image embeddings computed.
[2025-02-09 01:16:43,086][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:16:43,094][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:16:43,114][root][INFO] - Image embeddings computed.
[2025-02-09 01:16:47,259][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:16:47,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:16:47,288][root][INFO] - Image embeddings computed.
[2025-02-09 01:16:51,426][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:16:51,434][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:16:51,454][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 18
Lang Goal: put the gray letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:18:06,779][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:18:06,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:18:06,930][root][INFO] - Image embeddings computed.
[2025-02-09 01:18:23,261][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:18:23,404][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:18:23,425][root][INFO] - Image embeddings computed.
[2025-02-09 01:18:27,550][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:18:27,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:18:27,719][root][INFO] - Image embeddings computed.
[2025-02-09 01:18:31,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:18:31,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:18:31,884][root][INFO] - Image embeddings computed.
[2025-02-09 01:18:36,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:18:36,011][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:18:36,031][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the gray letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:19:50,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:19:50,263][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:19:50,284][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:06,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:06,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:06,986][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:11,097][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:11,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:11,212][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:15,366][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:15,460][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:15,480][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:19,623][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:19,720][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:19,740][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 17
Lang Goal: put the gray letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:21:34,500][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:21:34,516][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:21:34,537][root][INFO] - Image embeddings computed.
[2025-02-09 01:21:50,869][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:21:50,878][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:21:50,898][root][INFO] - Image embeddings computed.
[2025-02-09 01:21:55,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:21:55,022][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:21:55,042][root][INFO] - Image embeddings computed.
[2025-02-09 01:21:59,207][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:21:59,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:21:59,236][root][INFO] - Image embeddings computed.
[2025-02-09 01:22:03,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:22:03,388][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:22:03,408][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 17
Lang Goal: put the gray letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:23:18,035][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:23:18,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:23:18,067][root][INFO] - Image embeddings computed.
[2025-02-09 01:23:34,376][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:23:34,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:23:34,402][root][INFO] - Image embeddings computed.
[2025-02-09 01:23:38,540][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:23:38,542][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:23:38,579][root][INFO] - Image embeddings computed.
[2025-02-09 01:23:42,718][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:23:42,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:23:42,741][root][INFO] - Image embeddings computed.
[2025-02-09 01:23:46,879][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:23:46,882][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:23:46,902][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 20
Lang Goal: put the gray letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.004081632653061225 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
Test: 50/50
[2025-02-09 01:25:05,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:05,960][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:05,981][root][INFO] - Image embeddings computed.
[2025-02-09 01:25:22,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:22,608][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:22,628][root][INFO] - Image embeddings computed.
[2025-02-09 01:25:26,775][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:26,905][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:26,925][root][INFO] - Image embeddings computed.
[2025-02-09 01:25:31,095][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:31,193][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:31,213][root][INFO] - Image embeddings computed.
[2025-02-09 01:25:35,322][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:35,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:35,504][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 13
Lang Goal: put the gray heart in the right heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:26:51,081][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:26:51,084][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:26:51,105][root][INFO] - Image embeddings computed.
[2025-02-09 01:27:07,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:27:07,341][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:27:07,361][root][INFO] - Image embeddings computed.
[2025-02-09 01:27:11,493][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:27:11,501][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:27:11,521][root][INFO] - Image embeddings computed.
[2025-02-09 01:27:15,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:27:15,649][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:27:15,669][root][INFO] - Image embeddings computed.
[2025-02-09 01:27:19,749][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:27:19,752][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:27:19,772][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: put the gray heart in the right heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:28:35,922][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:35,932][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:35,953][root][INFO] - Image embeddings computed.
[2025-02-09 01:28:52,350][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:52,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:52,376][root][INFO] - Image embeddings computed.
[2025-02-09 01:28:56,509][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:56,512][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:56,532][root][INFO] - Image embeddings computed.
[2025-02-09 01:29:00,656][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:29:00,659][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:29:00,679][root][INFO] - Image embeddings computed.
[2025-02-09 01:29:04,781][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:29:04,784][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:29:04,804][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 15
Lang Goal: put the gray heart in the right heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:30:21,956][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:30:21,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:30:21,985][root][INFO] - Image embeddings computed.
[2025-02-09 01:30:38,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:30:38,791][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:30:38,812][root][INFO] - Image embeddings computed.
[2025-02-09 01:30:42,944][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:30:42,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:30:42,986][root][INFO] - Image embeddings computed.
[2025-02-09 01:30:47,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:30:47,206][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:30:47,226][root][INFO] - Image embeddings computed.
[2025-02-09 01:30:51,301][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:30:51,393][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:30:51,414][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: put the gray heart in the right heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:32:08,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:32:08,013][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:32:08,033][root][INFO] - Image embeddings computed.
[2025-02-09 01:32:24,317][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:32:24,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:32:24,344][root][INFO] - Image embeddings computed.
[2025-02-09 01:32:28,470][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:32:28,473][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:32:28,493][root][INFO] - Image embeddings computed.
[2025-02-09 01:32:32,634][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:32:32,637][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:32:32,657][root][INFO] - Image embeddings computed.
[2025-02-09 01:32:36,742][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:32:36,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:32:36,764][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 15
Lang Goal: put the gray heart in the right heart hole
Total Reward: 0.000 | Done: False

Mean: 0.004 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00040-val_loss=0.00017019.ckpt
[2025-02-09 01:34:00,236][root][INFO] - Loaded checkpoint sucessfully
[2025-02-09 01:34:00,369][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-09 01:34:06,894][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-09 01:34:46,985][root][INFO] - Loaded checkpoint sucessfully
[2025-02-09 01:34:47,108][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-09 01:34:53,535][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-09 01:34:55,885][root][INFO] - Loaded checkpoint sucessfully
[2025-02-09 01:34:56,025][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-09 01:35:02,682][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-09 01:35:04,950][root][INFO] - Loaded checkpoint sucessfully
[2025-02-09 01:35:05,093][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-09 01:35:11,513][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: assembling-kits-seq-seen-colors-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/assembling-kits-seq-seen-colors-clipfit-n10-train/checkpoints/steps=00080-val_loss=0.00015124.ckpt
Test: 1/50
[2025-02-09 01:35:59,374][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:35:59,533][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:35:59,562][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:16,494][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:16,604][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:16,624][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:20,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:20,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:20,985][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:25,223][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:25,378][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:25,398][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:29,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:29,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:29,798][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 16
Lang Goal: put the yellow letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:37:48,038][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:37:48,166][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:37:48,186][root][INFO] - Image embeddings computed.
[2025-02-09 01:38:04,797][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:38:04,966][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:38:04,986][root][INFO] - Image embeddings computed.
[2025-02-09 01:38:09,216][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:38:09,308][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:38:09,328][root][INFO] - Image embeddings computed.
[2025-02-09 01:38:13,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:38:13,709][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:38:13,729][root][INFO] - Image embeddings computed.
[2025-02-09 01:38:17,949][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:38:18,100][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:38:18,120][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: put the yellow letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:39:36,200][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:36,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:36,231][root][INFO] - Image embeddings computed.
[2025-02-09 01:39:52,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:52,892][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:52,912][root][INFO] - Image embeddings computed.
[2025-02-09 01:39:57,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:57,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:57,176][root][INFO] - Image embeddings computed.
[2025-02-09 01:40:01,398][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:40:01,401][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:40:01,421][root][INFO] - Image embeddings computed.
[2025-02-09 01:40:05,643][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:40:05,645][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:40:05,665][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: put the yellow letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:41:23,871][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:23,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:24,003][root][INFO] - Image embeddings computed.
[2025-02-09 01:41:40,748][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:40,852][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:40,872][root][INFO] - Image embeddings computed.
[2025-02-09 01:41:45,102][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:45,202][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:45,224][root][INFO] - Image embeddings computed.
[2025-02-09 01:41:49,444][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:49,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:49,572][root][INFO] - Image embeddings computed.
[2025-02-09 01:41:53,800][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:53,904][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:53,924][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the yellow letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:43:12,088][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:43:12,099][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:43:12,119][root][INFO] - Image embeddings computed.
[2025-02-09 01:43:28,793][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:43:28,796][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:43:28,816][root][INFO] - Image embeddings computed.
[2025-02-09 01:43:33,050][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:43:33,053][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:43:33,073][root][INFO] - Image embeddings computed.
[2025-02-09 01:43:37,292][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:43:37,295][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:43:37,315][root][INFO] - Image embeddings computed.
[2025-02-09 01:43:41,544][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:43:41,547][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:43:41,567][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: put the yellow letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 2/50
[2025-02-09 01:45:04,356][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:45:04,359][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:45:04,379][root][INFO] - Image embeddings computed.
[2025-02-09 01:45:21,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:45:21,230][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:45:21,250][root][INFO] - Image embeddings computed.
[2025-02-09 01:45:25,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:45:25,476][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:45:25,497][root][INFO] - Image embeddings computed.
[2025-02-09 01:45:29,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:45:29,728][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:45:29,748][root][INFO] - Image embeddings computed.
[2025-02-09 01:45:33,986][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:45:33,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:45:34,009][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 20
Lang Goal: put the green letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:46:52,788][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:46:52,799][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:46:52,825][root][INFO] - Image embeddings computed.
[2025-02-09 01:47:09,749][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:47:09,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:47:09,931][root][INFO] - Image embeddings computed.
[2025-02-09 01:47:14,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:47:14,241][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:47:14,261][root][INFO] - Image embeddings computed.
[2025-02-09 01:47:18,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:47:18,603][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:47:18,634][root][INFO] - Image embeddings computed.
[2025-02-09 01:47:22,877][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:47:23,059][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:47:23,090][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: put the green letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:48:42,191][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:48:42,202][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:48:42,223][root][INFO] - Image embeddings computed.
[2025-02-09 01:48:59,138][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:48:59,143][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:48:59,163][root][INFO] - Image embeddings computed.
[2025-02-09 01:49:03,388][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:03,391][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:03,412][root][INFO] - Image embeddings computed.
[2025-02-09 01:49:07,630][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:07,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:07,668][root][INFO] - Image embeddings computed.
[2025-02-09 01:49:11,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:11,913][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:11,933][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 15
Lang Goal: put the green letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:50:31,467][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:50:31,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:50:31,502][root][INFO] - Image embeddings computed.
[2025-02-09 01:50:48,249][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:50:48,255][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:50:48,275][root][INFO] - Image embeddings computed.
[2025-02-09 01:50:52,516][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:50:52,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:50:52,539][root][INFO] - Image embeddings computed.
[2025-02-09 01:50:56,768][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:50:56,771][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:50:56,791][root][INFO] - Image embeddings computed.
[2025-02-09 01:51:01,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:51:01,043][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:51:01,063][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: put the green letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:52:20,365][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:52:20,379][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:52:20,400][root][INFO] - Image embeddings computed.
[2025-02-09 01:52:37,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:52:37,207][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:52:37,227][root][INFO] - Image embeddings computed.
[2025-02-09 01:52:41,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:52:41,454][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:52:41,474][root][INFO] - Image embeddings computed.
[2025-02-09 01:52:45,698][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:52:45,701][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:52:45,721][root][INFO] - Image embeddings computed.
[2025-02-09 01:52:49,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:52:49,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:52:49,990][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: put the green letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 3/50
[2025-02-09 01:54:13,651][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:54:13,662][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:54:13,682][root][INFO] - Image embeddings computed.
[2025-02-09 01:54:33,517][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:54:33,875][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:54:33,896][root][INFO] - Image embeddings computed.
[2025-02-09 01:54:38,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:54:38,278][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:54:38,298][root][INFO] - Image embeddings computed.
[2025-02-09 01:54:42,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:54:42,651][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:54:42,671][root][INFO] - Image embeddings computed.
[2025-02-09 01:54:46,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:54:47,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:54:47,077][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 14
Lang Goal: put the cyan heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:56:08,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:56:08,919][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:56:08,939][root][INFO] - Image embeddings computed.
[2025-02-09 01:56:25,538][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:56:25,557][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:56:25,577][root][INFO] - Image embeddings computed.
[2025-02-09 01:56:29,804][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:56:29,807][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:56:29,827][root][INFO] - Image embeddings computed.
[2025-02-09 01:56:34,029][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:56:34,031][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:56:34,051][root][INFO] - Image embeddings computed.
[2025-02-09 01:56:38,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:56:38,250][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:56:38,270][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the cyan heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:57:57,980][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:57:58,001][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:57:58,021][root][INFO] - Image embeddings computed.
[2025-02-09 01:58:14,559][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:58:14,568][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:58:14,588][root][INFO] - Image embeddings computed.
[2025-02-09 01:58:18,797][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:58:18,799][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:58:18,819][root][INFO] - Image embeddings computed.
[2025-02-09 01:58:23,026][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:58:23,028][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:58:23,048][root][INFO] - Image embeddings computed.
[2025-02-09 01:58:27,272][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:58:27,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:58:27,294][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 15
Lang Goal: put the cyan heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 01:59:47,516][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:59:47,529][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:59:47,548][root][INFO] - Image embeddings computed.
[2025-02-09 02:00:04,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:00:04,097][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:00:04,117][root][INFO] - Image embeddings computed.
[2025-02-09 02:00:08,333][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:00:08,336][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:00:08,356][root][INFO] - Image embeddings computed.
[2025-02-09 02:00:12,569][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:00:12,572][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:00:12,592][root][INFO] - Image embeddings computed.
[2025-02-09 02:00:16,806][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:00:16,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:00:16,829][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 15
Lang Goal: put the cyan heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:01:36,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:01:36,872][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:01:36,892][root][INFO] - Image embeddings computed.
[2025-02-09 02:01:53,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:01:53,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:01:53,465][root][INFO] - Image embeddings computed.
[2025-02-09 02:01:57,672][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:01:57,675][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:01:57,695][root][INFO] - Image embeddings computed.
[2025-02-09 02:02:01,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:02:01,940][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:02:01,960][root][INFO] - Image embeddings computed.
[2025-02-09 02:02:06,184][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:02:06,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:02:06,207][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: put the cyan heart in the heart hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 4/50
[2025-02-09 02:03:31,178][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:03:31,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:03:31,212][root][INFO] - Image embeddings computed.
[2025-02-09 02:03:48,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:03:48,127][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:03:48,146][root][INFO] - Image embeddings computed.
[2025-02-09 02:03:52,377][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:03:52,385][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:03:52,405][root][INFO] - Image embeddings computed.
[2025-02-09 02:03:56,695][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:03:56,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:03:56,730][root][INFO] - Image embeddings computed.
[2025-02-09 02:04:00,924][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:04:00,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:04:00,946][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: put the green heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:05:22,194][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:05:22,290][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:05:22,310][root][INFO] - Image embeddings computed.
[2025-02-09 02:05:38,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:05:38,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:05:38,957][root][INFO] - Image embeddings computed.
[2025-02-09 02:05:43,177][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:05:43,183][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:05:43,203][root][INFO] - Image embeddings computed.
[2025-02-09 02:05:47,446][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:05:47,455][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:05:47,475][root][INFO] - Image embeddings computed.
[2025-02-09 02:05:51,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:05:51,681][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:05:51,701][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 17
Lang Goal: put the green heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:07:14,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:07:14,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:07:14,174][root][INFO] - Image embeddings computed.
[2025-02-09 02:07:31,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:07:31,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:07:31,376][root][INFO] - Image embeddings computed.
[2025-02-09 02:07:35,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:07:35,667][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:07:35,687][root][INFO] - Image embeddings computed.
[2025-02-09 02:07:39,921][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:07:39,931][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:07:39,951][root][INFO] - Image embeddings computed.
[2025-02-09 02:07:44,128][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:07:44,131][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:07:44,151][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 15
Lang Goal: put the green heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:09:05,536][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:09:05,539][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:09:05,559][root][INFO] - Image embeddings computed.
[2025-02-09 02:09:22,505][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:09:22,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:09:22,531][root][INFO] - Image embeddings computed.
[2025-02-09 02:09:26,810][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:09:26,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:09:26,833][root][INFO] - Image embeddings computed.
[2025-02-09 02:09:31,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:09:31,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:09:31,099][root][INFO] - Image embeddings computed.
[2025-02-09 02:09:35,320][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:09:35,328][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:09:35,348][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: put the green heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:10:57,265][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:10:57,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:10:57,301][root][INFO] - Image embeddings computed.
[2025-02-09 02:11:13,999][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:11:14,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:11:14,029][root][INFO] - Image embeddings computed.
[2025-02-09 02:11:18,259][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:11:18,261][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:11:18,281][root][INFO] - Image embeddings computed.
[2025-02-09 02:11:22,527][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:11:22,530][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:11:22,550][root][INFO] - Image embeddings computed.
[2025-02-09 02:11:26,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:11:26,758][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:11:26,778][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 15
Lang Goal: put the green heart in the heart hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 5/50
[2025-02-09 02:12:52,658][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:12:52,673][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:12:52,693][root][INFO] - Image embeddings computed.
[2025-02-09 02:13:09,519][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:13:09,527][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:13:09,547][root][INFO] - Image embeddings computed.
[2025-02-09 02:13:13,779][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:13:13,782][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:13:13,802][root][INFO] - Image embeddings computed.
[2025-02-09 02:13:18,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:13:18,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:13:18,026][root][INFO] - Image embeddings computed.
[2025-02-09 02:13:22,239][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:13:22,247][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:13:22,267][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 14
Lang Goal: put the gray letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:14:44,375][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:14:44,391][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:14:44,411][root][INFO] - Image embeddings computed.
[2025-02-09 02:15:01,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:15:01,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:15:01,176][root][INFO] - Image embeddings computed.
[2025-02-09 02:15:05,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:15:05,412][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:15:05,432][root][INFO] - Image embeddings computed.
[2025-02-09 02:15:09,671][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:15:09,673][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:15:09,693][root][INFO] - Image embeddings computed.
[2025-02-09 02:15:13,899][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:15:13,901][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:15:13,921][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 18
Lang Goal: put the gray letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:16:36,655][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:16:36,675][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:16:36,695][root][INFO] - Image embeddings computed.
[2025-02-09 02:16:53,335][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:16:53,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:16:53,358][root][INFO] - Image embeddings computed.
[2025-02-09 02:16:57,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:16:57,583][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:16:57,603][root][INFO] - Image embeddings computed.
[2025-02-09 02:17:01,850][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:17:01,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:17:01,910][root][INFO] - Image embeddings computed.
[2025-02-09 02:17:06,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:17:06,111][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:17:06,131][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: put the gray letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:18:29,223][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:18:29,251][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:18:29,271][root][INFO] - Image embeddings computed.
[2025-02-09 02:18:45,870][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:18:45,873][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:18:45,893][root][INFO] - Image embeddings computed.
[2025-02-09 02:18:50,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:18:50,102][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:18:50,122][root][INFO] - Image embeddings computed.
[2025-02-09 02:18:54,356][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:18:54,364][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:18:54,384][root][INFO] - Image embeddings computed.
[2025-02-09 02:18:58,573][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:18:58,575][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:18:58,595][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: put the gray letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:20:22,064][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:20:22,085][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:20:22,105][root][INFO] - Image embeddings computed.
[2025-02-09 02:20:38,832][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:20:38,835][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:20:38,855][root][INFO] - Image embeddings computed.
[2025-02-09 02:20:43,090][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:20:43,093][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:20:43,113][root][INFO] - Image embeddings computed.
[2025-02-09 02:20:47,331][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:20:47,334][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:20:47,354][root][INFO] - Image embeddings computed.
[2025-02-09 02:20:51,577][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:20:51,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:20:51,599][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: put the gray letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 6/50
[2025-02-09 02:22:19,120][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:22:19,143][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:22:19,163][root][INFO] - Image embeddings computed.
[2025-02-09 02:22:36,119][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:22:36,122][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:22:36,142][root][INFO] - Image embeddings computed.
[2025-02-09 02:22:40,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:22:40,392][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:22:40,412][root][INFO] - Image embeddings computed.
[2025-02-09 02:22:44,664][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:22:44,667][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:22:44,687][root][INFO] - Image embeddings computed.
[2025-02-09 02:22:48,896][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:22:48,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:22:48,919][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 22
Lang Goal: put the gray letter L shape in the right letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:24:14,415][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:24:14,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:24:14,455][root][INFO] - Image embeddings computed.
[2025-02-09 02:24:31,318][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:24:31,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:24:31,341][root][INFO] - Image embeddings computed.
[2025-02-09 02:24:35,598][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:24:35,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:24:35,710][root][INFO] - Image embeddings computed.
[2025-02-09 02:24:39,948][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:24:40,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:24:40,065][root][INFO] - Image embeddings computed.
[2025-02-09 02:24:44,278][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:24:44,390][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:24:44,410][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 21
Lang Goal: put the gray letter L shape in the right letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:26:09,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:26:09,219][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:26:09,239][root][INFO] - Image embeddings computed.
[2025-02-09 02:26:26,034][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:26:26,037][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:26:26,057][root][INFO] - Image embeddings computed.
[2025-02-09 02:26:30,285][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:26:30,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:26:30,307][root][INFO] - Image embeddings computed.
[2025-02-09 02:26:34,542][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:26:34,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:26:34,564][root][INFO] - Image embeddings computed.
[2025-02-09 02:26:38,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:26:38,771][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:26:38,791][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: put the gray letter L shape in the right letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:28:02,767][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:28:02,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:28:02,792][root][INFO] - Image embeddings computed.
[2025-02-09 02:28:19,617][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:28:19,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:28:19,640][root][INFO] - Image embeddings computed.
[2025-02-09 02:28:23,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:28:23,866][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:28:23,886][root][INFO] - Image embeddings computed.
[2025-02-09 02:28:28,130][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:28:28,133][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:28:28,153][root][INFO] - Image embeddings computed.
[2025-02-09 02:28:32,362][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:28:32,365][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:28:32,384][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 16
Lang Goal: put the gray letter L shape in the right letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:29:56,972][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:29:57,141][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:29:57,162][root][INFO] - Image embeddings computed.
[2025-02-09 02:30:14,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:30:14,240][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:30:14,260][root][INFO] - Image embeddings computed.
[2025-02-09 02:30:18,479][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:30:18,575][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:30:18,595][root][INFO] - Image embeddings computed.
[2025-02-09 02:30:22,837][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:30:22,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:30:22,973][root][INFO] - Image embeddings computed.
[2025-02-09 02:30:27,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:30:27,285][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:30:27,305][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the gray letter L shape in the right letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 7/50
[2025-02-09 02:31:56,011][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:31:56,027][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:31:56,047][root][INFO] - Image embeddings computed.
[2025-02-09 02:32:12,910][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:32:12,912][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:32:12,932][root][INFO] - Image embeddings computed.
[2025-02-09 02:32:17,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:32:17,160][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:32:17,180][root][INFO] - Image embeddings computed.
[2025-02-09 02:32:21,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:32:21,404][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:32:21,424][root][INFO] - Image embeddings computed.
[2025-02-09 02:32:25,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:32:25,672][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:32:25,692][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the gray heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:33:50,808][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:33:50,827][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:33:50,847][root][INFO] - Image embeddings computed.
[2025-02-09 02:34:07,378][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:34:07,381][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:34:07,401][root][INFO] - Image embeddings computed.
[2025-02-09 02:34:11,604][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:34:11,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:34:11,626][root][INFO] - Image embeddings computed.
[2025-02-09 02:34:15,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:34:15,837][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:34:15,857][root][INFO] - Image embeddings computed.
[2025-02-09 02:34:20,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:34:20,106][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:34:20,126][root][INFO] - Image embeddings computed.
The number of original masks: 15
The number of filtered masks: 12
Lang Goal: put the gray heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:35:44,944][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:35:44,969][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:35:44,989][root][INFO] - Image embeddings computed.
[2025-02-09 02:36:01,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:36:01,506][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:36:01,526][root][INFO] - Image embeddings computed.
[2025-02-09 02:36:05,741][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:36:05,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:36:05,764][root][INFO] - Image embeddings computed.
[2025-02-09 02:36:09,983][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:36:09,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:36:10,012][root][INFO] - Image embeddings computed.
[2025-02-09 02:36:14,259][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:36:14,262][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:36:14,282][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 12
Lang Goal: put the gray heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:37:39,871][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:37:39,880][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:37:39,900][root][INFO] - Image embeddings computed.
[2025-02-09 02:37:56,388][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:37:56,391][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:37:56,411][root][INFO] - Image embeddings computed.
[2025-02-09 02:38:00,628][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:38:00,631][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:38:00,651][root][INFO] - Image embeddings computed.
[2025-02-09 02:38:04,869][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:38:04,871][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:38:04,891][root][INFO] - Image embeddings computed.
[2025-02-09 02:38:09,137][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:38:09,140][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:38:09,159][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: put the gray heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:39:34,644][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:39:34,655][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:39:34,675][root][INFO] - Image embeddings computed.
[2025-02-09 02:39:51,172][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:39:51,175][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:39:51,195][root][INFO] - Image embeddings computed.
[2025-02-09 02:39:55,413][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:39:55,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:39:55,435][root][INFO] - Image embeddings computed.
[2025-02-09 02:39:59,658][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:39:59,660][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:39:59,681][root][INFO] - Image embeddings computed.
[2025-02-09 02:40:03,923][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:40:03,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:40:03,946][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the gray heart in the top heart hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 8/50
[2025-02-09 02:41:35,993][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:41:35,998][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:41:36,018][root][INFO] - Image embeddings computed.
[2025-02-09 02:41:52,694][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:41:52,697][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:41:52,717][root][INFO] - Image embeddings computed.
[2025-02-09 02:41:56,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:41:56,938][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:41:56,958][root][INFO] - Image embeddings computed.
[2025-02-09 02:42:01,184][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:42:01,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:42:01,206][root][INFO] - Image embeddings computed.
[2025-02-09 02:42:05,444][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:42:05,446][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:42:05,466][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: put the green hexagon in the left hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:43:32,201][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:43:32,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:43:32,230][root][INFO] - Image embeddings computed.
[2025-02-09 02:43:48,810][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:43:48,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:43:48,833][root][INFO] - Image embeddings computed.
[2025-02-09 02:43:53,028][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:43:53,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:43:53,050][root][INFO] - Image embeddings computed.
[2025-02-09 02:43:57,269][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:43:57,271][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:43:57,291][root][INFO] - Image embeddings computed.
[2025-02-09 02:44:01,538][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:44:01,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:44:01,561][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the green hexagon in the left hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:45:28,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:45:28,668][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:45:28,688][root][INFO] - Image embeddings computed.
[2025-02-09 02:45:45,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:45:45,326][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:45:45,346][root][INFO] - Image embeddings computed.
[2025-02-09 02:45:49,542][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:45:49,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:45:49,565][root][INFO] - Image embeddings computed.
[2025-02-09 02:45:53,774][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:45:53,793][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:45:53,813][root][INFO] - Image embeddings computed.
[2025-02-09 02:45:58,058][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:45:58,061][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:45:58,081][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 12
Lang Goal: put the green hexagon in the left hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:47:24,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:47:24,952][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:47:24,972][root][INFO] - Image embeddings computed.
[2025-02-09 02:47:41,550][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:47:41,555][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:47:41,576][root][INFO] - Image embeddings computed.
[2025-02-09 02:47:45,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:47:45,904][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:47:45,924][root][INFO] - Image embeddings computed.
[2025-02-09 02:47:50,129][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:47:50,231][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:47:50,251][root][INFO] - Image embeddings computed.
[2025-02-09 02:47:54,497][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:47:54,600][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:47:54,620][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 14
Lang Goal: put the green hexagon in the left hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:49:22,146][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:49:22,158][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:49:22,178][root][INFO] - Image embeddings computed.
[2025-02-09 02:49:38,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:49:38,772][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:49:38,792][root][INFO] - Image embeddings computed.
[2025-02-09 02:49:43,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:49:43,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:49:43,030][root][INFO] - Image embeddings computed.
[2025-02-09 02:49:47,246][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:49:47,249][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:49:47,269][root][INFO] - Image embeddings computed.
[2025-02-09 02:49:51,523][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:49:51,525][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:49:51,545][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: put the green hexagon in the left hexagon hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 9/50
[2025-02-09 02:51:22,888][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:51:22,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:51:22,919][root][INFO] - Image embeddings computed.
[2025-02-09 02:51:39,651][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:51:39,653][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:51:39,673][root][INFO] - Image embeddings computed.
[2025-02-09 02:51:43,924][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:51:43,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:51:43,947][root][INFO] - Image embeddings computed.
[2025-02-09 02:51:48,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:51:48,185][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:51:48,205][root][INFO] - Image embeddings computed.
[2025-02-09 02:51:52,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:51:52,421][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:51:52,441][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the red letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:53:22,718][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:53:22,730][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:53:22,750][root][INFO] - Image embeddings computed.
[2025-02-09 02:53:39,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:53:39,387][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:53:39,407][root][INFO] - Image embeddings computed.
[2025-02-09 02:53:43,639][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:53:43,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:53:43,661][root][INFO] - Image embeddings computed.
[2025-02-09 02:53:47,918][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:53:47,920][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:53:47,940][root][INFO] - Image embeddings computed.
[2025-02-09 02:53:52,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:53:52,160][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:53:52,181][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 19
Lang Goal: put the red letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:55:22,683][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:55:22,688][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:55:22,708][root][INFO] - Image embeddings computed.
[2025-02-09 02:55:39,299][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:55:39,301][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:55:39,322][root][INFO] - Image embeddings computed.
[2025-02-09 02:55:43,552][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:55:43,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:55:43,591][root][INFO] - Image embeddings computed.
[2025-02-09 02:55:47,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:55:47,836][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:55:47,856][root][INFO] - Image embeddings computed.
[2025-02-09 02:55:52,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:55:52,070][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:55:52,090][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: put the red letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:57:21,363][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:57:21,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:57:21,391][root][INFO] - Image embeddings computed.
[2025-02-09 02:57:38,017][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:57:38,023][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:57:38,043][root][INFO] - Image embeddings computed.
[2025-02-09 02:57:42,278][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:57:42,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:57:42,301][root][INFO] - Image embeddings computed.
[2025-02-09 02:57:46,591][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:57:46,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:57:46,613][root][INFO] - Image embeddings computed.
[2025-02-09 02:57:50,833][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:57:50,835][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:57:50,855][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: put the red letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 02:59:19,513][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:59:19,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:59:19,565][root][INFO] - Image embeddings computed.
[2025-02-09 02:59:36,075][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:59:36,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:59:36,100][root][INFO] - Image embeddings computed.
[2025-02-09 02:59:40,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:59:40,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:59:40,344][root][INFO] - Image embeddings computed.
[2025-02-09 02:59:44,555][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:59:44,558][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:59:44,578][root][INFO] - Image embeddings computed.
[2025-02-09 02:59:48,811][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 02:59:48,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 02:59:48,833][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 14
Lang Goal: put the red letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 10/50
[2025-02-09 03:01:21,709][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:01:21,824][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:01:21,844][root][INFO] - Image embeddings computed.
[2025-02-09 03:01:38,675][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:01:38,775][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:01:38,795][root][INFO] - Image embeddings computed.
[2025-02-09 03:01:43,042][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:01:43,147][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:01:43,167][root][INFO] - Image embeddings computed.
[2025-02-09 03:01:47,408][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:01:47,504][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:01:47,530][root][INFO] - Image embeddings computed.
[2025-02-09 03:01:51,713][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:01:51,805][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:01:51,825][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 15
Lang Goal: put the blue letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:03:24,524][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:03:24,550][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:03:24,570][root][INFO] - Image embeddings computed.
[2025-02-09 03:03:41,124][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:03:41,131][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:03:41,151][root][INFO] - Image embeddings computed.
[2025-02-09 03:03:45,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:03:45,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:03:45,409][root][INFO] - Image embeddings computed.
[2025-02-09 03:03:49,610][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:03:49,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:03:49,632][root][INFO] - Image embeddings computed.
[2025-02-09 03:03:53,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:03:53,821][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:03:53,841][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: put the blue letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:05:23,308][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:05:23,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:05:23,467][root][INFO] - Image embeddings computed.
[2025-02-09 03:05:40,037][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:05:40,190][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:05:40,226][root][INFO] - Image embeddings computed.
[2025-02-09 03:05:44,458][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:05:44,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:05:44,672][root][INFO] - Image embeddings computed.
[2025-02-09 03:05:48,877][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:05:48,972][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:05:48,993][root][INFO] - Image embeddings computed.
[2025-02-09 03:05:53,185][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:05:53,276][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:05:53,296][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: put the blue letter E shape in the middle letter E shape hole
Warning: movej exceeded 5 second timeout. Skipping.
Total Reward: 0.000 | Done: True

Mean: 0.0 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 11/50
[2025-02-09 03:07:31,709][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:07:31,722][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:07:31,742][root][INFO] - Image embeddings computed.
[2025-02-09 03:07:48,489][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:07:48,495][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:07:48,514][root][INFO] - Image embeddings computed.
[2025-02-09 03:07:52,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:07:52,769][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:07:52,789][root][INFO] - Image embeddings computed.
[2025-02-09 03:07:57,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:07:57,011][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:07:57,031][root][INFO] - Image embeddings computed.
[2025-02-09 03:08:01,244][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:08:01,246][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:08:01,266][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: put the cyan ring in the ring hole
Total Reward: 0.200 | Done: False

[2025-02-09 03:09:31,045][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:09:31,055][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:09:31,075][root][INFO] - Image embeddings computed.
[2025-02-09 03:09:47,712][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:09:47,720][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:09:47,740][root][INFO] - Image embeddings computed.
[2025-02-09 03:09:51,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:09:51,994][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:09:52,014][root][INFO] - Image embeddings computed.
[2025-02-09 03:09:56,229][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:09:56,232][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:09:56,252][root][INFO] - Image embeddings computed.
[2025-02-09 03:10:00,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:10:00,478][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:10:00,498][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the brown letter E shape in the letter E shape hole
Total Reward: 0.200 | Done: False

[2025-02-09 03:11:31,265][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:11:31,278][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:11:31,299][root][INFO] - Image embeddings computed.
[2025-02-09 03:11:47,804][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:11:47,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:11:47,833][root][INFO] - Image embeddings computed.
[2025-02-09 03:11:52,080][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:11:52,083][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:11:52,103][root][INFO] - Image embeddings computed.
[2025-02-09 03:11:56,322][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:11:56,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:11:56,344][root][INFO] - Image embeddings computed.
[2025-02-09 03:12:00,566][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:12:00,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:12:00,589][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 14
Lang Goal: put the brown letter E shape in the letter E shape hole
Warning: movej exceeded 5 second timeout. Skipping.
Total Reward: 0.200 | Done: True

Mean: 0.018181818181818184 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 12/50
[2025-02-09 03:13:39,550][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:13:39,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:13:39,581][root][INFO] - Image embeddings computed.
[2025-02-09 03:13:56,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:13:56,291][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:13:56,311][root][INFO] - Image embeddings computed.
[2025-02-09 03:14:00,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:14:00,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:14:00,561][root][INFO] - Image embeddings computed.
[2025-02-09 03:14:04,772][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:14:04,775][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:14:04,795][root][INFO] - Image embeddings computed.
[2025-02-09 03:14:09,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:14:09,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:14:09,030][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: put the gray letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:15:39,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:15:39,694][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:15:39,714][root][INFO] - Image embeddings computed.
[2025-02-09 03:15:56,314][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:15:56,322][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:15:56,342][root][INFO] - Image embeddings computed.
[2025-02-09 03:16:00,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:16:00,576][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:16:00,596][root][INFO] - Image embeddings computed.
[2025-02-09 03:16:04,808][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:16:04,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:16:04,836][root][INFO] - Image embeddings computed.
[2025-02-09 03:16:09,057][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:16:09,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:16:09,084][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: put the gray letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:17:40,774][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:17:40,881][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:17:40,901][root][INFO] - Image embeddings computed.
[2025-02-09 03:17:57,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:17:57,786][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:17:57,812][root][INFO] - Image embeddings computed.
[2025-02-09 03:18:02,034][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:18:02,129][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:18:02,155][root][INFO] - Image embeddings computed.
[2025-02-09 03:18:06,348][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:18:06,491][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:18:06,516][root][INFO] - Image embeddings computed.
[2025-02-09 03:18:10,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:18:10,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:18:10,894][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: put the gray letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:19:44,441][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:19:44,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:19:44,463][root][INFO] - Image embeddings computed.
[2025-02-09 03:20:00,995][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:20:01,000][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:20:01,020][root][INFO] - Image embeddings computed.
[2025-02-09 03:20:05,241][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:20:05,249][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:20:05,269][root][INFO] - Image embeddings computed.
[2025-02-09 03:20:09,478][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:20:09,486][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:20:09,506][root][INFO] - Image embeddings computed.
[2025-02-09 03:20:13,733][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:20:13,741][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:20:13,761][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: put the gray letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:21:45,147][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:21:45,173][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:21:45,193][root][INFO] - Image embeddings computed.
[2025-02-09 03:22:01,969][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:22:01,976][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:22:01,996][root][INFO] - Image embeddings computed.
[2025-02-09 03:22:06,214][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:22:06,217][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:22:06,237][root][INFO] - Image embeddings computed.
[2025-02-09 03:22:10,436][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:22:10,439][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:22:10,459][root][INFO] - Image embeddings computed.
[2025-02-09 03:22:14,694][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:22:14,697][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:22:14,716][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 18
Lang Goal: put the gray letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.016666666666666666 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 13/50
[2025-02-09 03:23:50,300][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:23:50,320][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:23:50,340][root][INFO] - Image embeddings computed.
[2025-02-09 03:24:07,301][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:24:07,311][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:24:07,331][root][INFO] - Image embeddings computed.
[2025-02-09 03:24:11,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:24:11,558][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:24:11,578][root][INFO] - Image embeddings computed.
[2025-02-09 03:24:15,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:24:15,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:24:15,832][root][INFO] - Image embeddings computed.
[2025-02-09 03:24:20,056][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:24:20,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:24:20,085][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 20
Lang Goal: put the green letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:25:55,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:25:55,093][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:25:55,113][root][INFO] - Image embeddings computed.
[2025-02-09 03:26:11,925][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:26:11,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:26:11,954][root][INFO] - Image embeddings computed.
[2025-02-09 03:26:16,164][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:26:16,167][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:26:16,187][root][INFO] - Image embeddings computed.
[2025-02-09 03:26:20,412][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:26:20,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:26:20,435][root][INFO] - Image embeddings computed.
[2025-02-09 03:26:24,660][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:26:24,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:26:24,683][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the green letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:27:58,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:27:58,574][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:27:58,594][root][INFO] - Image embeddings computed.
[2025-02-09 03:28:15,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:28:15,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:28:15,581][root][INFO] - Image embeddings computed.
[2025-02-09 03:28:19,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:28:19,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:28:19,812][root][INFO] - Image embeddings computed.
[2025-02-09 03:28:24,025][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:28:24,035][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:28:24,055][root][INFO] - Image embeddings computed.
[2025-02-09 03:28:28,284][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:28:28,286][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:28:28,307][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 14
Lang Goal: put the green letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:30:00,573][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:30:00,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:30:00,609][root][INFO] - Image embeddings computed.
[2025-02-09 03:30:17,674][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:30:17,677][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:30:17,697][root][INFO] - Image embeddings computed.
[2025-02-09 03:30:21,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:30:21,999][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:30:22,019][root][INFO] - Image embeddings computed.
[2025-02-09 03:30:26,252][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:30:26,416][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:30:26,436][root][INFO] - Image embeddings computed.
[2025-02-09 03:30:30,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:30:30,759][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:30:30,779][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: put the green letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:32:03,731][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:32:03,755][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:32:03,775][root][INFO] - Image embeddings computed.
[2025-02-09 03:32:20,956][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:32:20,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:32:20,979][root][INFO] - Image embeddings computed.
[2025-02-09 03:32:25,184][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:32:25,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:32:25,207][root][INFO] - Image embeddings computed.
[2025-02-09 03:32:29,428][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:32:29,431][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:32:29,451][root][INFO] - Image embeddings computed.
[2025-02-09 03:32:33,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:32:33,687][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:32:33,707][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the green letter E shape in the middle letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.015384615384615385 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 14/50
[2025-02-09 03:34:10,649][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:34:10,814][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:34:10,834][root][INFO] - Image embeddings computed.
[2025-02-09 03:34:27,787][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:34:27,914][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:34:27,934][root][INFO] - Image embeddings computed.
[2025-02-09 03:34:32,164][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:34:32,256][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:34:32,276][root][INFO] - Image embeddings computed.
[2025-02-09 03:34:36,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:34:36,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:34:36,663][root][INFO] - Image embeddings computed.
[2025-02-09 03:34:40,894][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:34:40,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:34:41,009][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 13
Lang Goal: put the blue letter E shape in the left letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:36:14,472][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:36:14,506][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:36:14,526][root][INFO] - Image embeddings computed.
[2025-02-09 03:36:31,427][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:36:31,430][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:36:31,450][root][INFO] - Image embeddings computed.
[2025-02-09 03:36:35,648][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:36:35,651][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:36:35,671][root][INFO] - Image embeddings computed.
[2025-02-09 03:36:39,881][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:36:39,884][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:36:39,904][root][INFO] - Image embeddings computed.
[2025-02-09 03:36:44,150][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:36:44,153][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:36:44,173][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 13
Lang Goal: put the blue letter E shape in the left letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:38:17,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:38:17,853][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:38:17,873][root][INFO] - Image embeddings computed.
[2025-02-09 03:38:34,650][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:38:34,653][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:38:34,673][root][INFO] - Image embeddings computed.
[2025-02-09 03:38:38,874][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:38:38,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:38:38,896][root][INFO] - Image embeddings computed.
[2025-02-09 03:38:43,106][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:38:43,108][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:38:43,128][root][INFO] - Image embeddings computed.
[2025-02-09 03:38:47,371][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:38:47,373][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:38:47,393][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 12
Lang Goal: put the blue letter E shape in the left letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:40:20,954][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:40:20,993][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:40:21,013][root][INFO] - Image embeddings computed.
[2025-02-09 03:40:37,792][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:40:37,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:40:37,815][root][INFO] - Image embeddings computed.
[2025-02-09 03:40:42,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:40:42,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:40:42,046][root][INFO] - Image embeddings computed.
[2025-02-09 03:40:46,239][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:40:46,242][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:40:46,262][root][INFO] - Image embeddings computed.
[2025-02-09 03:40:50,501][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:40:50,504][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:40:50,524][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the blue letter E shape in the left letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:42:24,701][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:42:24,724][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:42:24,744][root][INFO] - Image embeddings computed.
[2025-02-09 03:42:41,620][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:42:41,623][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:42:41,643][root][INFO] - Image embeddings computed.
[2025-02-09 03:42:45,854][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:42:45,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:42:45,877][root][INFO] - Image embeddings computed.
[2025-02-09 03:42:50,075][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:42:50,078][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:42:50,098][root][INFO] - Image embeddings computed.
[2025-02-09 03:42:54,328][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:42:54,331][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:42:54,350][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 10
Lang Goal: put the blue letter E shape in the left letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.014285714285714287 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 15/50
[2025-02-09 03:44:32,597][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:44:32,605][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:44:32,625][root][INFO] - Image embeddings computed.
[2025-02-09 03:44:49,365][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:44:49,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:44:49,387][root][INFO] - Image embeddings computed.
[2025-02-09 03:44:53,638][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:44:53,640][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:44:53,660][root][INFO] - Image embeddings computed.
[2025-02-09 03:44:57,884][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:44:57,887][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:44:57,906][root][INFO] - Image embeddings computed.
[2025-02-09 03:45:02,119][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:45:02,122][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:45:02,142][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: put the red heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:46:36,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:46:36,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:46:36,663][root][INFO] - Image embeddings computed.
[2025-02-09 03:46:53,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:46:53,147][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:46:53,167][root][INFO] - Image embeddings computed.
[2025-02-09 03:46:57,392][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:46:57,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:46:57,415][root][INFO] - Image embeddings computed.
[2025-02-09 03:47:01,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:47:01,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:47:01,653][root][INFO] - Image embeddings computed.
[2025-02-09 03:47:05,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:47:05,865][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:47:05,884][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 12
Lang Goal: put the red heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:48:40,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:48:40,942][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:48:40,962][root][INFO] - Image embeddings computed.
[2025-02-09 03:48:57,790][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:48:57,793][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:48:57,813][root][INFO] - Image embeddings computed.
[2025-02-09 03:49:02,036][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:49:02,039][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:49:02,059][root][INFO] - Image embeddings computed.
[2025-02-09 03:49:06,314][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:49:06,317][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:49:06,337][root][INFO] - Image embeddings computed.
[2025-02-09 03:49:10,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:49:10,539][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:49:10,559][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 19
Lang Goal: put the red heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:50:45,758][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:50:45,767][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:50:45,787][root][INFO] - Image embeddings computed.
[2025-02-09 03:51:02,557][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:51:02,560][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:51:02,580][root][INFO] - Image embeddings computed.
[2025-02-09 03:51:06,805][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:51:06,808][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:51:06,828][root][INFO] - Image embeddings computed.
[2025-02-09 03:51:11,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:51:11,087][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:51:11,107][root][INFO] - Image embeddings computed.
[2025-02-09 03:51:15,310][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:51:15,312][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:51:15,332][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: put the red heart in the top heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:52:50,619][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:52:50,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:52:50,645][root][INFO] - Image embeddings computed.
[2025-02-09 03:53:07,337][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:53:07,339][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:53:07,359][root][INFO] - Image embeddings computed.
[2025-02-09 03:53:11,569][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:53:11,571][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:53:11,591][root][INFO] - Image embeddings computed.
[2025-02-09 03:53:15,817][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:53:15,820][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:53:15,840][root][INFO] - Image embeddings computed.
[2025-02-09 03:53:20,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:53:20,053][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:53:20,073][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: put the red heart in the top heart hole
Total Reward: 0.000 | Done: False

Mean: 0.013333333333333334 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 16/50
[2025-02-09 03:55:00,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:55:00,062][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:55:00,082][root][INFO] - Image embeddings computed.
[2025-02-09 03:55:16,892][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:55:16,894][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:55:16,914][root][INFO] - Image embeddings computed.
[2025-02-09 03:55:21,156][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:55:21,158][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:55:21,178][root][INFO] - Image embeddings computed.
[2025-02-09 03:55:25,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:55:25,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:55:25,461][root][INFO] - Image embeddings computed.
[2025-02-09 03:55:29,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:55:29,659][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:55:29,679][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: put the cyan letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:57:05,584][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:57:05,594][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:57:05,614][root][INFO] - Image embeddings computed.
[2025-02-09 03:57:22,313][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:57:22,316][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:57:22,336][root][INFO] - Image embeddings computed.
[2025-02-09 03:57:26,553][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:57:26,556][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:57:26,576][root][INFO] - Image embeddings computed.
[2025-02-09 03:57:30,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:57:30,822][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:57:30,842][root][INFO] - Image embeddings computed.
[2025-02-09 03:57:35,049][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:57:35,052][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:57:35,072][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 20
Lang Goal: put the cyan letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 03:59:11,045][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:59:11,056][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:59:11,076][root][INFO] - Image embeddings computed.
[2025-02-09 03:59:27,642][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:59:27,644][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:59:27,664][root][INFO] - Image embeddings computed.
[2025-02-09 03:59:31,898][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:59:31,901][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:59:31,921][root][INFO] - Image embeddings computed.
[2025-02-09 03:59:36,140][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:59:36,143][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:59:36,163][root][INFO] - Image embeddings computed.
[2025-02-09 03:59:40,374][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 03:59:40,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 03:59:40,396][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: put the cyan letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:01:17,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:01:17,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:01:17,029][root][INFO] - Image embeddings computed.
[2025-02-09 04:01:33,608][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:01:33,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:01:33,631][root][INFO] - Image embeddings computed.
[2025-02-09 04:01:37,853][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:01:37,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:01:37,892][root][INFO] - Image embeddings computed.
[2025-02-09 04:01:42,115][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:01:42,118][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:01:42,138][root][INFO] - Image embeddings computed.
[2025-02-09 04:01:46,351][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:01:46,354][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:01:46,374][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 19
Lang Goal: put the cyan letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:03:23,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:03:23,513][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:03:23,533][root][INFO] - Image embeddings computed.
[2025-02-09 04:03:40,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:03:40,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:03:40,132][root][INFO] - Image embeddings computed.
[2025-02-09 04:03:44,343][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:03:44,346][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:03:44,366][root][INFO] - Image embeddings computed.
[2025-02-09 04:03:48,584][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:03:48,587][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:03:48,607][root][INFO] - Image embeddings computed.
[2025-02-09 04:03:52,823][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:03:52,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:03:52,845][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 18
Lang Goal: put the cyan letter M shape in the letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.0125 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 17/50
[2025-02-09 04:05:33,698][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:05:33,703][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:05:33,723][root][INFO] - Image embeddings computed.
[2025-02-09 04:05:50,525][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:05:50,528][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:05:50,548][root][INFO] - Image embeddings computed.
[2025-02-09 04:05:54,760][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:05:54,763][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:05:54,783][root][INFO] - Image embeddings computed.
[2025-02-09 04:05:59,012][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:05:59,015][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:05:59,034][root][INFO] - Image embeddings computed.
[2025-02-09 04:06:03,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:06:03,282][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:06:03,302][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 18
Lang Goal: put the gray letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:07:41,346][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:07:41,354][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:07:41,375][root][INFO] - Image embeddings computed.
[2025-02-09 04:07:58,156][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:07:58,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:07:58,179][root][INFO] - Image embeddings computed.
[2025-02-09 04:08:02,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:08:02,409][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:08:02,429][root][INFO] - Image embeddings computed.
[2025-02-09 04:08:06,649][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:08:06,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:08:06,672][root][INFO] - Image embeddings computed.
[2025-02-09 04:08:10,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:08:10,922][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:08:10,942][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 15
Lang Goal: put the gray letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:09:48,242][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:09:48,253][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:09:48,273][root][INFO] - Image embeddings computed.
[2025-02-09 04:10:04,872][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:10:04,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:10:04,897][root][INFO] - Image embeddings computed.
[2025-02-09 04:10:09,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:10:09,130][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:10:09,150][root][INFO] - Image embeddings computed.
[2025-02-09 04:10:13,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:10:13,403][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:10:13,423][root][INFO] - Image embeddings computed.
[2025-02-09 04:10:17,649][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:10:17,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:10:17,671][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 22
Lang Goal: put the gray letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:11:56,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:11:56,294][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:11:56,314][root][INFO] - Image embeddings computed.
[2025-02-09 04:12:12,915][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:12:12,920][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:12:12,940][root][INFO] - Image embeddings computed.
[2025-02-09 04:12:17,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:12:17,183][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:12:17,203][root][INFO] - Image embeddings computed.
[2025-02-09 04:12:21,409][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:12:21,412][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:12:21,432][root][INFO] - Image embeddings computed.
[2025-02-09 04:12:25,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:12:25,681][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:12:25,701][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: put the gray letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:14:04,005][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:14:04,013][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:14:04,033][root][INFO] - Image embeddings computed.
[2025-02-09 04:14:20,582][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:14:20,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:14:20,609][root][INFO] - Image embeddings computed.
[2025-02-09 04:14:24,837][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:14:24,840][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:14:24,860][root][INFO] - Image embeddings computed.
[2025-02-09 04:14:29,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:14:29,076][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:14:29,096][root][INFO] - Image embeddings computed.
[2025-02-09 04:14:33,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:14:33,349][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:14:33,369][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: put the gray letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.011764705882352941 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 18/50
[2025-02-09 04:16:16,075][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:16:16,084][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:16:16,114][root][INFO] - Image embeddings computed.
[2025-02-09 04:16:32,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:16:32,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:16:32,684][root][INFO] - Image embeddings computed.
[2025-02-09 04:16:36,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:16:36,905][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:16:36,925][root][INFO] - Image embeddings computed.
[2025-02-09 04:16:41,139][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:16:41,141][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:16:41,161][root][INFO] - Image embeddings computed.
[2025-02-09 04:16:45,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:16:45,369][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:16:45,389][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 17
Lang Goal: put the yellow hexagon in the bottom hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:18:24,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:18:24,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:18:24,362][root][INFO] - Image embeddings computed.
[2025-02-09 04:18:40,812][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:18:40,817][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:18:40,837][root][INFO] - Image embeddings computed.
[2025-02-09 04:18:45,070][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:18:45,073][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:18:45,093][root][INFO] - Image embeddings computed.
[2025-02-09 04:18:49,318][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:18:49,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:18:49,341][root][INFO] - Image embeddings computed.
[2025-02-09 04:18:53,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:18:53,543][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:18:53,563][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 14
Lang Goal: put the yellow hexagon in the bottom hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:20:32,802][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:20:32,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:20:32,836][root][INFO] - Image embeddings computed.
[2025-02-09 04:20:49,378][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:20:49,385][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:20:49,404][root][INFO] - Image embeddings computed.
[2025-02-09 04:20:53,606][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:20:53,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:20:53,631][root][INFO] - Image embeddings computed.
[2025-02-09 04:20:57,833][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:20:57,838][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:20:57,858][root][INFO] - Image embeddings computed.
[2025-02-09 04:21:02,066][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:21:02,069][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:21:02,089][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 19
Lang Goal: put the yellow hexagon in the bottom hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:22:41,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:22:41,694][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:22:41,714][root][INFO] - Image embeddings computed.
[2025-02-09 04:22:58,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:22:58,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:22:58,236][root][INFO] - Image embeddings computed.
[2025-02-09 04:23:02,454][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:23:02,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:23:02,476][root][INFO] - Image embeddings computed.
[2025-02-09 04:23:06,701][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:23:06,709][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:23:06,729][root][INFO] - Image embeddings computed.
[2025-02-09 04:23:10,931][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:23:10,939][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:23:10,958][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: put the yellow hexagon in the bottom hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:24:50,906][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:24:50,916][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:24:50,936][root][INFO] - Image embeddings computed.
[2025-02-09 04:25:07,536][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:25:07,543][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:25:07,563][root][INFO] - Image embeddings computed.
[2025-02-09 04:25:11,777][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:25:11,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:25:11,800][root][INFO] - Image embeddings computed.
[2025-02-09 04:25:16,026][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:25:16,029][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:25:16,049][root][INFO] - Image embeddings computed.
[2025-02-09 04:25:20,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:25:20,262][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:25:20,281][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: put the yellow hexagon in the bottom hexagon hole
Total Reward: 0.000 | Done: False

Mean: 0.011111111111111112 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 19/50
[2025-02-09 04:27:04,427][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:27:04,469][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:27:04,489][root][INFO] - Image embeddings computed.
[2025-02-09 04:27:21,179][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:27:21,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:27:21,207][root][INFO] - Image embeddings computed.
[2025-02-09 04:27:25,417][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:27:25,430][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:27:25,450][root][INFO] - Image embeddings computed.
[2025-02-09 04:27:29,675][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:27:29,683][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:27:29,703][root][INFO] - Image embeddings computed.
[2025-02-09 04:27:33,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:27:33,948][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:27:33,967][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 12
Lang Goal: put the cyan letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:29:14,119][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:29:14,140][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:29:14,160][root][INFO] - Image embeddings computed.
[2025-02-09 04:29:30,740][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:29:30,743][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:29:30,763][root][INFO] - Image embeddings computed.
[2025-02-09 04:29:34,981][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:29:34,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:29:35,009][root][INFO] - Image embeddings computed.
[2025-02-09 04:29:39,214][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:29:39,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:29:39,236][root][INFO] - Image embeddings computed.
[2025-02-09 04:29:43,470][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:29:43,473][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:29:43,493][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the cyan letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:31:26,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:31:26,478][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:31:26,498][root][INFO] - Image embeddings computed.
[2025-02-09 04:31:42,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:31:42,941][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:31:42,961][root][INFO] - Image embeddings computed.
[2025-02-09 04:31:47,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:31:47,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:31:47,199][root][INFO] - Image embeddings computed.
[2025-02-09 04:31:51,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:31:51,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:31:51,438][root][INFO] - Image embeddings computed.
[2025-02-09 04:31:55,673][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:31:55,676][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:31:55,696][root][INFO] - Image embeddings computed.
The number of original masks: 15
The number of filtered masks: 9
Lang Goal: put the cyan letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:33:35,881][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:33:35,923][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:33:35,943][root][INFO] - Image embeddings computed.
[2025-02-09 04:33:52,376][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:33:52,379][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:33:52,399][root][INFO] - Image embeddings computed.
[2025-02-09 04:33:56,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:33:56,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:33:56,631][root][INFO] - Image embeddings computed.
[2025-02-09 04:34:00,844][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:34:00,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:34:00,867][root][INFO] - Image embeddings computed.
[2025-02-09 04:34:05,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:34:05,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:34:05,134][root][INFO] - Image embeddings computed.
The number of original masks: 15
The number of filtered masks: 12
Lang Goal: put the cyan letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:35:45,669][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:35:45,680][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:35:45,700][root][INFO] - Image embeddings computed.
[2025-02-09 04:36:02,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:36:02,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:36:02,362][root][INFO] - Image embeddings computed.
[2025-02-09 04:36:06,565][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:36:06,568][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:36:06,588][root][INFO] - Image embeddings computed.
[2025-02-09 04:36:10,797][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:36:10,800][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:36:10,820][root][INFO] - Image embeddings computed.
[2025-02-09 04:36:15,069][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:36:15,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:36:15,092][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 11
Lang Goal: put the cyan letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.010526315789473684 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 20/50
[2025-02-09 04:37:59,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:37:59,531][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:37:59,551][root][INFO] - Image embeddings computed.
[2025-02-09 04:38:16,502][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:38:16,505][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:38:16,525][root][INFO] - Image embeddings computed.
[2025-02-09 04:38:20,772][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:38:20,774][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:38:20,809][root][INFO] - Image embeddings computed.
[2025-02-09 04:38:25,029][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:38:25,032][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:38:25,052][root][INFO] - Image embeddings computed.
[2025-02-09 04:38:29,242][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:38:29,245][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:38:29,265][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 19
Lang Goal: put the blue letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:40:10,880][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:40:10,886][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:40:10,906][root][INFO] - Image embeddings computed.
[2025-02-09 04:40:27,620][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:40:27,623][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:40:27,643][root][INFO] - Image embeddings computed.
[2025-02-09 04:40:31,875][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:40:31,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:40:31,897][root][INFO] - Image embeddings computed.
[2025-02-09 04:40:36,108][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:40:36,110][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:40:36,130][root][INFO] - Image embeddings computed.
[2025-02-09 04:40:40,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:40:40,336][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:40:40,356][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: put the blue letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:42:21,877][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:42:21,886][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:42:21,906][root][INFO] - Image embeddings computed.
[2025-02-09 04:42:38,574][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:42:38,577][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:42:38,597][root][INFO] - Image embeddings computed.
[2025-02-09 04:42:42,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:42:42,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:42:42,851][root][INFO] - Image embeddings computed.
[2025-02-09 04:42:47,066][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:42:47,069][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:42:47,089][root][INFO] - Image embeddings computed.
[2025-02-09 04:42:51,291][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:42:51,293][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:42:51,313][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: put the blue letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:44:32,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:44:32,784][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:44:32,804][root][INFO] - Image embeddings computed.
[2025-02-09 04:44:49,320][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:44:49,328][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:44:49,349][root][INFO] - Image embeddings computed.
[2025-02-09 04:44:53,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:44:53,585][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:44:53,605][root][INFO] - Image embeddings computed.
[2025-02-09 04:44:57,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:44:57,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:44:57,843][root][INFO] - Image embeddings computed.
[2025-02-09 04:45:02,057][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:45:02,060][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:45:02,080][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 15
Lang Goal: put the blue letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:46:43,557][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:46:43,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:46:43,589][root][INFO] - Image embeddings computed.
[2025-02-09 04:47:00,138][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:47:00,140][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:47:00,160][root][INFO] - Image embeddings computed.
[2025-02-09 04:47:04,397][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:47:04,400][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:47:04,420][root][INFO] - Image embeddings computed.
[2025-02-09 04:47:08,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:47:08,681][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:47:08,700][root][INFO] - Image embeddings computed.
[2025-02-09 04:47:12,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:47:12,917][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:47:12,937][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: put the blue letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.01 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 21/50
[2025-02-09 04:48:58,883][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:48:58,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:48:58,910][root][INFO] - Image embeddings computed.
[2025-02-09 04:49:15,956][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:49:15,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:49:15,979][root][INFO] - Image embeddings computed.
[2025-02-09 04:49:20,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:49:20,251][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:49:20,271][root][INFO] - Image embeddings computed.
[2025-02-09 04:49:24,514][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:49:24,516][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:49:24,536][root][INFO] - Image embeddings computed.
[2025-02-09 04:49:28,729][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:49:28,732][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:49:28,751][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: put the green letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:51:12,215][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:51:12,236][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:51:12,256][root][INFO] - Image embeddings computed.
[2025-02-09 04:51:28,894][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:51:28,896][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:51:28,916][root][INFO] - Image embeddings computed.
[2025-02-09 04:51:33,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:51:33,166][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:51:33,186][root][INFO] - Image embeddings computed.
[2025-02-09 04:51:37,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:51:37,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:51:37,519][root][INFO] - Image embeddings computed.
[2025-02-09 04:51:41,735][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:51:41,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:51:41,851][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the green letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:53:25,559][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:53:25,571][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:53:25,591][root][INFO] - Image embeddings computed.
[2025-02-09 04:53:42,450][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:53:42,453][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:53:42,473][root][INFO] - Image embeddings computed.
[2025-02-09 04:53:46,705][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:53:46,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:53:46,728][root][INFO] - Image embeddings computed.
[2025-02-09 04:53:50,949][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:53:50,951][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:53:50,971][root][INFO] - Image embeddings computed.
[2025-02-09 04:53:55,175][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:53:55,177][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:53:55,197][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 19
Lang Goal: put the green letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:55:37,964][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:55:37,975][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:55:37,995][root][INFO] - Image embeddings computed.
[2025-02-09 04:55:54,974][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:55:54,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:55:54,997][root][INFO] - Image embeddings computed.
[2025-02-09 04:55:59,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:55:59,249][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:55:59,269][root][INFO] - Image embeddings computed.
[2025-02-09 04:56:03,498][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:56:03,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:56:03,521][root][INFO] - Image embeddings computed.
[2025-02-09 04:56:07,737][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:56:07,740][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:56:07,760][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: put the green letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 04:57:50,921][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:57:50,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:57:50,946][root][INFO] - Image embeddings computed.
[2025-02-09 04:58:07,724][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:58:07,727][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:58:07,747][root][INFO] - Image embeddings computed.
[2025-02-09 04:58:11,989][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:58:11,991][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:58:12,011][root][INFO] - Image embeddings computed.
[2025-02-09 04:58:16,222][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:58:16,225][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:58:16,245][root][INFO] - Image embeddings computed.
[2025-02-09 04:58:20,443][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 04:58:20,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 04:58:20,465][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 17
Lang Goal: put the green letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.009523809523809525 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 22/50
[2025-02-09 05:00:07,498][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:00:07,503][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:00:07,523][root][INFO] - Image embeddings computed.
[2025-02-09 05:00:24,268][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:00:24,271][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:00:24,291][root][INFO] - Image embeddings computed.
[2025-02-09 05:00:28,509][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:00:28,512][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:00:28,532][root][INFO] - Image embeddings computed.
[2025-02-09 05:00:32,746][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:00:32,749][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:00:32,769][root][INFO] - Image embeddings computed.
[2025-02-09 05:00:36,987][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:00:36,990][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:00:37,010][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 13
Lang Goal: put the gray letter M shape in the bottom letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:02:20,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:02:20,782][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:02:20,802][root][INFO] - Image embeddings computed.
[2025-02-09 05:02:37,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:02:37,448][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:02:37,468][root][INFO] - Image embeddings computed.
[2025-02-09 05:02:41,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:02:41,681][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:02:41,701][root][INFO] - Image embeddings computed.
[2025-02-09 05:02:45,921][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:02:45,924][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:02:45,944][root][INFO] - Image embeddings computed.
[2025-02-09 05:02:50,165][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:02:50,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:02:50,188][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: put the gray letter M shape in the bottom letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:04:34,468][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:04:34,497][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:04:34,517][root][INFO] - Image embeddings computed.
[2025-02-09 05:04:51,196][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:04:51,202][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:04:51,222][root][INFO] - Image embeddings computed.
[2025-02-09 05:04:55,412][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:04:55,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:04:55,435][root][INFO] - Image embeddings computed.
[2025-02-09 05:04:59,651][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:04:59,654][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:04:59,673][root][INFO] - Image embeddings computed.
[2025-02-09 05:05:03,899][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:05:03,901][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:05:03,921][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 15
Lang Goal: put the gray letter M shape in the bottom letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:06:48,370][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:06:48,384][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:06:48,404][root][INFO] - Image embeddings computed.
[2025-02-09 05:07:04,918][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:07:04,924][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:07:04,943][root][INFO] - Image embeddings computed.
[2025-02-09 05:07:09,147][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:07:09,149][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:07:09,169][root][INFO] - Image embeddings computed.
[2025-02-09 05:07:13,377][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:07:13,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:07:13,400][root][INFO] - Image embeddings computed.
[2025-02-09 05:07:17,618][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:07:17,621][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:07:17,641][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 13
Lang Goal: put the gray letter M shape in the bottom letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:09:02,086][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:09:02,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:09:02,118][root][INFO] - Image embeddings computed.
[2025-02-09 05:09:18,632][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:09:18,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:09:18,661][root][INFO] - Image embeddings computed.
[2025-02-09 05:09:22,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:09:22,866][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:09:22,886][root][INFO] - Image embeddings computed.
[2025-02-09 05:09:27,097][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:09:27,099][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:09:27,119][root][INFO] - Image embeddings computed.
[2025-02-09 05:09:31,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:09:31,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:09:31,367][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 12
Lang Goal: put the gray letter M shape in the bottom letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.009090909090909092 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 23/50
[2025-02-09 05:11:20,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:11:20,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:11:20,141][root][INFO] - Image embeddings computed.
[2025-02-09 05:11:37,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:11:37,124][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:11:37,167][root][INFO] - Image embeddings computed.
[2025-02-09 05:11:41,398][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:11:41,401][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:11:41,420][root][INFO] - Image embeddings computed.
[2025-02-09 05:11:45,650][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:11:45,653][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:11:45,673][root][INFO] - Image embeddings computed.
[2025-02-09 05:11:49,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:11:49,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:11:49,878][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:13:35,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:13:35,105][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:13:35,126][root][INFO] - Image embeddings computed.
[2025-02-09 05:13:51,887][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:13:51,893][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:13:51,913][root][INFO] - Image embeddings computed.
[2025-02-09 05:13:56,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:13:56,134][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:13:56,154][root][INFO] - Image embeddings computed.
[2025-02-09 05:14:00,383][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:14:00,386][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:14:00,406][root][INFO] - Image embeddings computed.
[2025-02-09 05:14:04,593][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:14:04,596][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:14:04,616][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:15:49,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:15:49,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:15:49,832][root][INFO] - Image embeddings computed.
[2025-02-09 05:16:06,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:16:06,425][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:16:06,445][root][INFO] - Image embeddings computed.
[2025-02-09 05:16:10,654][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:16:10,662][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:16:10,682][root][INFO] - Image embeddings computed.
[2025-02-09 05:16:14,900][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:16:14,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:16:14,923][root][INFO] - Image embeddings computed.
[2025-02-09 05:16:19,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:16:19,102][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:16:19,122][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 13
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:18:04,587][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:18:04,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:18:04,617][root][INFO] - Image embeddings computed.
[2025-02-09 05:18:21,351][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:18:21,357][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:18:21,377][root][INFO] - Image embeddings computed.
[2025-02-09 05:18:25,604][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:18:25,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:18:25,627][root][INFO] - Image embeddings computed.
[2025-02-09 05:18:29,853][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:18:29,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:18:29,875][root][INFO] - Image embeddings computed.
[2025-02-09 05:18:34,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:18:34,076][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:18:34,106][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 15
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:20:19,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:20:19,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:20:19,985][root][INFO] - Image embeddings computed.
[2025-02-09 05:20:36,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:20:36,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:20:36,883][root][INFO] - Image embeddings computed.
[2025-02-09 05:20:41,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:20:41,106][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:20:41,126][root][INFO] - Image embeddings computed.
[2025-02-09 05:20:45,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:20:45,350][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:20:45,370][root][INFO] - Image embeddings computed.
[2025-02-09 05:20:49,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:20:49,558][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:20:49,578][root][INFO] - Image embeddings computed.
The number of original masks: 15
The number of filtered masks: 15
Lang Goal: put the red letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.008695652173913044 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 24/50
[2025-02-09 05:22:39,093][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:22:39,106][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:22:39,126][root][INFO] - Image embeddings computed.
[2025-02-09 05:22:56,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:22:56,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:22:56,327][root][INFO] - Image embeddings computed.
[2025-02-09 05:23:00,562][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:23:00,662][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:23:00,682][root][INFO] - Image embeddings computed.
[2025-02-09 05:23:04,977][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:23:05,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:23:05,123][root][INFO] - Image embeddings computed.
[2025-02-09 05:23:09,328][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:23:09,420][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:23:09,440][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 20
Lang Goal: put the cyan letter M shape in the right letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:24:56,351][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:24:56,358][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:24:56,378][root][INFO] - Image embeddings computed.
[2025-02-09 05:25:12,917][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:25:12,925][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:25:12,944][root][INFO] - Image embeddings computed.
[2025-02-09 05:25:17,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:25:17,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:25:17,182][root][INFO] - Image embeddings computed.
[2025-02-09 05:25:21,433][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:25:21,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:25:21,456][root][INFO] - Image embeddings computed.
[2025-02-09 05:25:25,669][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:25:25,672][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:25:25,692][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: put the cyan letter M shape in the right letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:27:12,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:27:12,621][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:27:12,641][root][INFO] - Image embeddings computed.
[2025-02-09 05:27:29,242][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:27:29,250][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:27:29,270][root][INFO] - Image embeddings computed.
[2025-02-09 05:27:33,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:27:33,482][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:27:33,502][root][INFO] - Image embeddings computed.
[2025-02-09 05:27:37,783][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:27:37,786][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:27:37,805][root][INFO] - Image embeddings computed.
[2025-02-09 05:27:41,998][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:27:42,001][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:27:42,021][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 13
Lang Goal: put the cyan letter M shape in the right letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:29:29,030][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:29:29,033][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:29:29,053][root][INFO] - Image embeddings computed.
[2025-02-09 05:29:45,788][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:29:45,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:29:45,815][root][INFO] - Image embeddings computed.
[2025-02-09 05:29:50,037][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:29:50,040][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:29:50,059][root][INFO] - Image embeddings computed.
[2025-02-09 05:29:54,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:29:54,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:29:54,358][root][INFO] - Image embeddings computed.
[2025-02-09 05:29:58,559][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:29:58,568][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:29:58,588][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the cyan letter M shape in the right letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:31:47,368][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:31:47,407][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:31:47,428][root][INFO] - Image embeddings computed.
[2025-02-09 05:32:04,056][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:32:04,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:32:04,085][root][INFO] - Image embeddings computed.
[2025-02-09 05:32:08,290][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:32:08,293][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:32:08,312][root][INFO] - Image embeddings computed.
[2025-02-09 05:32:12,572][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:32:12,575][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:32:12,595][root][INFO] - Image embeddings computed.
[2025-02-09 05:32:16,798][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:32:16,808][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:32:16,828][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 16
Lang Goal: put the cyan letter M shape in the right letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.008333333333333333 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 25/50
[2025-02-09 05:34:08,582][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:34:08,710][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:34:08,730][root][INFO] - Image embeddings computed.
[2025-02-09 05:34:25,533][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:34:25,642][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:34:25,662][root][INFO] - Image embeddings computed.
[2025-02-09 05:34:29,874][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:34:29,966][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:34:29,985][root][INFO] - Image embeddings computed.
[2025-02-09 05:34:34,205][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:34:34,208][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:34:34,228][root][INFO] - Image embeddings computed.
[2025-02-09 05:34:38,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:34:38,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:34:38,501][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: put the green letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:36:26,470][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:36:26,592][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:36:26,612][root][INFO] - Image embeddings computed.
[2025-02-09 05:36:43,393][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:36:43,480][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:36:43,500][root][INFO] - Image embeddings computed.
[2025-02-09 05:36:47,709][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:36:47,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:36:47,833][root][INFO] - Image embeddings computed.
[2025-02-09 05:36:52,049][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:36:52,147][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:36:52,167][root][INFO] - Image embeddings computed.
[2025-02-09 05:36:56,410][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:36:56,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:36:56,438][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 18
Lang Goal: put the green letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:38:44,802][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:38:44,850][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:38:44,870][root][INFO] - Image embeddings computed.
[2025-02-09 05:39:01,497][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:39:01,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:39:01,520][root][INFO] - Image embeddings computed.
[2025-02-09 05:39:05,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:39:05,748][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:39:05,768][root][INFO] - Image embeddings computed.
[2025-02-09 05:39:09,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:39:09,994][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:39:10,014][root][INFO] - Image embeddings computed.
[2025-02-09 05:39:14,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:39:14,253][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:39:14,273][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 16
Lang Goal: put the green letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:41:02,796][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:41:02,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:41:02,829][root][INFO] - Image embeddings computed.
[2025-02-09 05:41:19,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:41:19,463][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:41:19,483][root][INFO] - Image embeddings computed.
[2025-02-09 05:41:23,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:41:23,706][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:41:23,726][root][INFO] - Image embeddings computed.
[2025-02-09 05:41:27,948][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:41:27,951][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:41:27,971][root][INFO] - Image embeddings computed.
[2025-02-09 05:41:32,216][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:41:32,218][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:41:32,238][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: put the green letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:43:21,045][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:43:21,056][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:43:21,076][root][INFO] - Image embeddings computed.
[2025-02-09 05:43:37,806][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:43:37,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:43:37,829][root][INFO] - Image embeddings computed.
[2025-02-09 05:43:42,043][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:43:42,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:43:42,065][root][INFO] - Image embeddings computed.
[2025-02-09 05:43:46,283][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:43:46,286][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:43:46,306][root][INFO] - Image embeddings computed.
[2025-02-09 05:43:50,552][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:43:50,555][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:43:50,575][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 17
Lang Goal: put the green letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.008 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 26/50
[2025-02-09 05:45:43,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:45:43,448][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:45:43,468][root][INFO] - Image embeddings computed.
[2025-02-09 05:46:00,166][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:46:00,169][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:46:00,189][root][INFO] - Image embeddings computed.
[2025-02-09 05:46:04,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:46:04,408][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:46:04,428][root][INFO] - Image embeddings computed.
[2025-02-09 05:46:08,642][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:46:08,645][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:46:08,665][root][INFO] - Image embeddings computed.
[2025-02-09 05:46:12,852][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:46:12,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:46:12,874][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: put the yellow heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:48:02,655][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:48:02,661][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:48:02,681][root][INFO] - Image embeddings computed.
[2025-02-09 05:48:19,236][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:48:19,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:48:19,259][root][INFO] - Image embeddings computed.
[2025-02-09 05:48:23,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:48:23,458][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:48:23,478][root][INFO] - Image embeddings computed.
[2025-02-09 05:48:27,692][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:48:27,695][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:48:27,715][root][INFO] - Image embeddings computed.
[2025-02-09 05:48:31,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:48:31,922][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:48:31,942][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: put the yellow heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:50:22,089][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:50:22,114][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:50:22,134][root][INFO] - Image embeddings computed.
[2025-02-09 05:50:38,867][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:50:38,870][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:50:38,910][root][INFO] - Image embeddings computed.
[2025-02-09 05:50:43,120][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:50:43,123][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:50:43,143][root][INFO] - Image embeddings computed.
[2025-02-09 05:50:47,365][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:50:47,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:50:47,388][root][INFO] - Image embeddings computed.
[2025-02-09 05:50:51,590][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:50:51,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:50:51,613][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 18
Lang Goal: put the yellow heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:52:41,831][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:52:41,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:52:41,862][root][INFO] - Image embeddings computed.
[2025-02-09 05:52:58,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:52:58,349][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:52:58,369][root][INFO] - Image embeddings computed.
[2025-02-09 05:53:02,577][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:53:02,580][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:53:02,600][root][INFO] - Image embeddings computed.
[2025-02-09 05:53:06,812][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:53:06,814][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:53:06,834][root][INFO] - Image embeddings computed.
[2025-02-09 05:53:11,020][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:53:11,022][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:53:11,042][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: put the yellow heart in the heart hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:55:01,666][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:55:01,672][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:55:01,692][root][INFO] - Image embeddings computed.
[2025-02-09 05:55:18,211][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:55:18,214][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:55:18,234][root][INFO] - Image embeddings computed.
[2025-02-09 05:55:22,447][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:55:22,450][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:55:22,470][root][INFO] - Image embeddings computed.
[2025-02-09 05:55:26,685][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:55:26,687][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:55:26,707][root][INFO] - Image embeddings computed.
[2025-02-09 05:55:30,896][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:55:30,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:55:30,919][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 17
Lang Goal: put the yellow heart in the heart hole
Total Reward: 0.000 | Done: False

Mean: 0.007692307692307693 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 27/50
[2025-02-09 05:57:25,835][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:57:25,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:57:25,861][root][INFO] - Image embeddings computed.
[2025-02-09 05:57:42,739][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:57:42,742][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:57:42,762][root][INFO] - Image embeddings computed.
[2025-02-09 05:57:46,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:57:46,995][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:57:47,015][root][INFO] - Image embeddings computed.
[2025-02-09 05:57:51,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:57:51,232][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:57:51,252][root][INFO] - Image embeddings computed.
[2025-02-09 05:57:55,449][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:57:55,452][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:57:55,509][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: put the cyan letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 05:59:46,597][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 05:59:46,706][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 05:59:46,726][root][INFO] - Image embeddings computed.
[2025-02-09 06:00:03,493][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:00:03,496][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:00:03,516][root][INFO] - Image embeddings computed.
[2025-02-09 06:00:07,736][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:00:07,738][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:00:07,758][root][INFO] - Image embeddings computed.
[2025-02-09 06:00:11,969][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:00:11,971][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:00:11,991][root][INFO] - Image embeddings computed.
[2025-02-09 06:00:16,191][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:00:16,194][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:00:16,214][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 29
Lang Goal: put the cyan letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:02:07,546][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:02:07,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:02:07,572][root][INFO] - Image embeddings computed.
[2025-02-09 06:02:24,309][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:02:24,323][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:02:24,343][root][INFO] - Image embeddings computed.
[2025-02-09 06:02:28,552][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:02:28,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:02:28,574][root][INFO] - Image embeddings computed.
[2025-02-09 06:02:32,798][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:02:32,801][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:02:32,821][root][INFO] - Image embeddings computed.
[2025-02-09 06:02:37,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:02:37,005][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:02:37,025][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 24
Lang Goal: put the cyan letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:04:28,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:04:28,629][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:04:28,649][root][INFO] - Image embeddings computed.
[2025-02-09 06:04:45,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:04:45,388][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:04:45,408][root][INFO] - Image embeddings computed.
[2025-02-09 06:04:49,617][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:04:49,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:04:49,640][root][INFO] - Image embeddings computed.
[2025-02-09 06:04:53,869][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:04:53,872][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:04:53,892][root][INFO] - Image embeddings computed.
[2025-02-09 06:04:58,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:04:58,079][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:04:58,099][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 24
Lang Goal: put the cyan letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:06:50,156][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:06:50,166][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:06:50,187][root][INFO] - Image embeddings computed.
[2025-02-09 06:07:06,925][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:07:06,928][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:07:06,948][root][INFO] - Image embeddings computed.
[2025-02-09 06:07:11,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:07:11,157][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:07:11,176][root][INFO] - Image embeddings computed.
[2025-02-09 06:07:15,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:07:15,409][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:07:15,429][root][INFO] - Image embeddings computed.
[2025-02-09 06:07:19,611][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:07:19,614][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:07:19,634][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 24
Lang Goal: put the cyan letter M shape in the left letter M shape hole
Total Reward: 0.000 | Done: False

Mean: 0.007407407407407408 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 28/50
[2025-02-09 06:09:15,361][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:09:15,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:09:15,387][root][INFO] - Image embeddings computed.
[2025-02-09 06:09:32,410][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:09:32,413][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:09:32,433][root][INFO] - Image embeddings computed.
[2025-02-09 06:09:36,667][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:09:36,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:09:36,690][root][INFO] - Image embeddings computed.
[2025-02-09 06:09:40,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:09:40,913][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:09:40,933][root][INFO] - Image embeddings computed.
[2025-02-09 06:09:45,125][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:09:45,138][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:09:45,158][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 13
Lang Goal: put the blue ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:11:37,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:11:37,328][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:11:37,348][root][INFO] - Image embeddings computed.
[2025-02-09 06:11:54,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:11:54,102][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:11:54,122][root][INFO] - Image embeddings computed.
[2025-02-09 06:11:58,345][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:11:58,348][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:11:58,368][root][INFO] - Image embeddings computed.
[2025-02-09 06:12:02,576][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:12:02,578][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:12:02,598][root][INFO] - Image embeddings computed.
[2025-02-09 06:12:06,767][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:12:06,770][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:12:06,790][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: put the blue ring in the ring hole
Total Reward: 0.200 | Done: False

[2025-02-09 06:13:59,971][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:13:59,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:14:00,015][root][INFO] - Image embeddings computed.
[2025-02-09 06:14:16,872][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:14:16,874][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:14:16,894][root][INFO] - Image embeddings computed.
[2025-02-09 06:14:21,115][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:14:21,117][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:14:21,137][root][INFO] - Image embeddings computed.
[2025-02-09 06:14:25,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:14:25,341][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:14:25,361][root][INFO] - Image embeddings computed.
[2025-02-09 06:14:29,555][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:14:29,557][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:14:29,577][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: put the brown letter E shape in the middle letter E shape hole
Total Reward: 0.200 | Done: False

[2025-02-09 06:16:22,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:16:22,346][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:16:22,366][root][INFO] - Image embeddings computed.
[2025-02-09 06:16:39,059][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:16:39,061][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:16:39,081][root][INFO] - Image embeddings computed.
[2025-02-09 06:16:43,308][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:16:43,310][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:16:43,330][root][INFO] - Image embeddings computed.
[2025-02-09 06:16:47,533][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:16:47,535][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:16:47,555][root][INFO] - Image embeddings computed.
[2025-02-09 06:16:51,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:16:51,747][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:16:51,767][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 12
Lang Goal: put the brown letter E shape in the middle letter E shape hole
Total Reward: 0.200 | Done: False

[2025-02-09 06:18:44,257][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:18:44,262][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:18:44,282][root][INFO] - Image embeddings computed.
[2025-02-09 06:19:01,055][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:19:01,058][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:19:01,078][root][INFO] - Image embeddings computed.
[2025-02-09 06:19:05,309][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:19:05,312][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:19:05,332][root][INFO] - Image embeddings computed.
[2025-02-09 06:19:09,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:19:09,542][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:19:09,562][root][INFO] - Image embeddings computed.
[2025-02-09 06:19:13,764][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:19:13,766][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:19:13,786][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 14
Lang Goal: put the brown letter E shape in the middle letter E shape hole
Total Reward: 0.200 | Done: False

Mean: 0.014285714285714287 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 29/50
[2025-02-09 06:21:11,326][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:21:11,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:21:11,358][root][INFO] - Image embeddings computed.
[2025-02-09 06:21:27,973][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:21:27,976][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:21:27,996][root][INFO] - Image embeddings computed.
[2025-02-09 06:21:32,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:21:32,220][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:21:32,240][root][INFO] - Image embeddings computed.
[2025-02-09 06:21:36,445][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:21:36,448][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:21:36,484][root][INFO] - Image embeddings computed.
[2025-02-09 06:21:40,709][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:21:40,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:21:40,731][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: put the gray letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:23:34,178][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:23:34,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:23:34,211][root][INFO] - Image embeddings computed.
[2025-02-09 06:23:50,727][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:23:50,730][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:23:50,750][root][INFO] - Image embeddings computed.
[2025-02-09 06:23:54,964][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:23:54,967][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:23:54,987][root][INFO] - Image embeddings computed.
[2025-02-09 06:23:59,192][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:23:59,195][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:23:59,215][root][INFO] - Image embeddings computed.
[2025-02-09 06:24:03,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:24:03,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:24:03,461][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: put the gray letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:25:56,829][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:25:56,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:25:56,861][root][INFO] - Image embeddings computed.
[2025-02-09 06:26:13,375][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:26:13,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:26:13,403][root][INFO] - Image embeddings computed.
[2025-02-09 06:26:17,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:26:17,617][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:26:17,637][root][INFO] - Image embeddings computed.
[2025-02-09 06:26:21,843][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:26:21,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:26:21,866][root][INFO] - Image embeddings computed.
[2025-02-09 06:26:26,088][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:26:26,091][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:26:26,110][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: put the gray letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:28:19,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:28:19,913][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:28:19,933][root][INFO] - Image embeddings computed.
[2025-02-09 06:28:36,453][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:28:36,459][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:28:36,479][root][INFO] - Image embeddings computed.
[2025-02-09 06:28:40,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:28:40,694][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:28:40,714][root][INFO] - Image embeddings computed.
[2025-02-09 06:28:44,918][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:28:44,921][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:28:44,941][root][INFO] - Image embeddings computed.
[2025-02-09 06:28:49,165][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:28:49,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:28:49,187][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: put the gray letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:30:42,987][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:30:42,998][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:30:43,019][root][INFO] - Image embeddings computed.
[2025-02-09 06:30:59,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:30:59,534][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:30:59,554][root][INFO] - Image embeddings computed.
[2025-02-09 06:31:03,768][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:31:03,776][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:31:03,796][root][INFO] - Image embeddings computed.
[2025-02-09 06:31:08,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:31:08,004][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:31:08,024][root][INFO] - Image embeddings computed.
[2025-02-09 06:31:12,253][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:31:12,256][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:31:12,276][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: put the gray letter E shape in the letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.013793103448275864 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 30/50
[2025-02-09 06:33:10,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:33:10,339][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:33:10,359][root][INFO] - Image embeddings computed.
[2025-02-09 06:33:27,287][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:33:27,296][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:33:27,315][root][INFO] - Image embeddings computed.
[2025-02-09 06:33:31,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:33:31,562][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:33:31,582][root][INFO] - Image embeddings computed.
[2025-02-09 06:33:35,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:33:35,810][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:33:35,830][root][INFO] - Image embeddings computed.
[2025-02-09 06:33:40,076][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:33:40,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:33:40,126][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: put the red ring in the left ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:35:34,731][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:35:34,759][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:35:34,779][root][INFO] - Image embeddings computed.
[2025-02-09 06:35:51,598][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:35:51,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:35:51,626][root][INFO] - Image embeddings computed.
[2025-02-09 06:35:55,837][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:35:55,839][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:35:55,859][root][INFO] - Image embeddings computed.
[2025-02-09 06:36:00,091][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:36:00,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:36:00,118][root][INFO] - Image embeddings computed.
[2025-02-09 06:36:04,361][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:36:04,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:36:04,391][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the red ring in the left ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:37:59,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:37:59,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:37:59,539][root][INFO] - Image embeddings computed.
[2025-02-09 06:38:16,328][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:38:16,335][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:38:16,355][root][INFO] - Image embeddings computed.
[2025-02-09 06:38:20,566][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:38:20,574][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:38:20,612][root][INFO] - Image embeddings computed.
[2025-02-09 06:38:24,847][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:38:24,853][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:38:24,873][root][INFO] - Image embeddings computed.
[2025-02-09 06:38:29,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:38:29,124][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:38:29,144][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: put the red ring in the left ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:40:25,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:40:25,225][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:40:25,246][root][INFO] - Image embeddings computed.
[2025-02-09 06:40:41,954][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:40:41,962][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:40:41,982][root][INFO] - Image embeddings computed.
[2025-02-09 06:40:46,202][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:40:46,205][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:40:46,225][root][INFO] - Image embeddings computed.
[2025-02-09 06:40:50,456][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:40:50,459][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:40:50,479][root][INFO] - Image embeddings computed.
[2025-02-09 06:40:54,727][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:40:54,730][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:40:54,750][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: put the red ring in the left ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:42:50,707][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:42:50,742][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:42:50,762][root][INFO] - Image embeddings computed.
[2025-02-09 06:43:07,546][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:43:07,562][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:43:07,582][root][INFO] - Image embeddings computed.
[2025-02-09 06:43:11,808][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:43:11,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:43:11,846][root][INFO] - Image embeddings computed.
[2025-02-09 06:43:16,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:43:16,077][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:43:16,097][root][INFO] - Image embeddings computed.
[2025-02-09 06:43:20,343][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:43:20,345][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:43:20,365][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: put the red ring in the left ring hole
Total Reward: 0.200 | Done: False

Mean: 0.020000000000000004 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 31/50
[2025-02-09 06:45:20,066][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:45:20,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:45:20,110][root][INFO] - Image embeddings computed.
[2025-02-09 06:45:36,888][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:45:36,891][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:45:36,911][root][INFO] - Image embeddings computed.
[2025-02-09 06:45:41,139][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:45:41,147][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:45:41,167][root][INFO] - Image embeddings computed.
[2025-02-09 06:45:45,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:45:45,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:45:45,403][root][INFO] - Image embeddings computed.
[2025-02-09 06:45:49,649][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:45:49,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:45:49,672][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 13
Lang Goal: put the green letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:47:45,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:47:45,907][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:47:45,927][root][INFO] - Image embeddings computed.
[2025-02-09 06:48:02,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:48:02,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:48:02,653][root][INFO] - Image embeddings computed.
[2025-02-09 06:48:06,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:48:06,870][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:48:06,890][root][INFO] - Image embeddings computed.
[2025-02-09 06:48:11,096][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:48:11,099][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:48:11,119][root][INFO] - Image embeddings computed.
[2025-02-09 06:48:15,362][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:48:15,364][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:48:15,384][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: put the green letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:50:11,711][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:50:11,732][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:50:11,752][root][INFO] - Image embeddings computed.
[2025-02-09 06:50:28,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:50:28,580][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:50:28,600][root][INFO] - Image embeddings computed.
[2025-02-09 06:50:32,795][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:50:32,798][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:50:32,818][root][INFO] - Image embeddings computed.
[2025-02-09 06:50:37,020][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:50:37,023][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:50:37,043][root][INFO] - Image embeddings computed.
[2025-02-09 06:50:41,285][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:50:41,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:50:41,326][root][INFO] - Image embeddings computed.
The number of original masks: 14
The number of filtered masks: 10
Lang Goal: put the green letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:52:37,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:52:37,506][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:52:37,526][root][INFO] - Image embeddings computed.
[2025-02-09 06:52:54,234][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:52:54,236][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:52:54,256][root][INFO] - Image embeddings computed.
[2025-02-09 06:52:58,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:52:58,454][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:52:58,474][root][INFO] - Image embeddings computed.
[2025-02-09 06:53:02,677][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:53:02,679][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:53:02,699][root][INFO] - Image embeddings computed.
[2025-02-09 06:53:06,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:53:06,943][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:53:06,963][root][INFO] - Image embeddings computed.
The number of original masks: 13
The number of filtered masks: 10
Lang Goal: put the green letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 06:55:02,793][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:55:02,814][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:55:02,834][root][INFO] - Image embeddings computed.
[2025-02-09 06:55:19,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:55:19,434][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:55:19,454][root][INFO] - Image embeddings computed.
[2025-02-09 06:55:23,658][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:55:23,779][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:55:23,799][root][INFO] - Image embeddings computed.
[2025-02-09 06:55:28,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:55:28,114][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:55:28,134][root][INFO] - Image embeddings computed.
[2025-02-09 06:55:32,372][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:55:32,470][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:55:32,490][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 12
Lang Goal: put the green letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.019354838709677424 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 32/50
[2025-02-09 06:57:33,617][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:57:33,638][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:57:33,658][root][INFO] - Image embeddings computed.
[2025-02-09 06:57:50,702][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:57:50,705][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:57:50,725][root][INFO] - Image embeddings computed.
[2025-02-09 06:57:54,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:57:54,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:57:54,990][root][INFO] - Image embeddings computed.
[2025-02-09 06:57:59,246][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:57:59,248][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:57:59,268][root][INFO] - Image embeddings computed.
[2025-02-09 06:58:03,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 06:58:03,453][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 06:58:03,473][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 26
Lang Goal: put the gray letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:00:01,263][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:00:01,345][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:00:01,365][root][INFO] - Image embeddings computed.
[2025-02-09 07:00:18,179][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:00:18,181][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:00:18,201][root][INFO] - Image embeddings computed.
[2025-02-09 07:00:22,430][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:00:22,521][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:00:22,541][root][INFO] - Image embeddings computed.
[2025-02-09 07:00:26,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:00:26,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:00:26,878][root][INFO] - Image embeddings computed.
[2025-02-09 07:00:31,071][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:00:31,163][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:00:31,183][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: put the gray letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:02:29,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:02:29,094][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:02:29,114][root][INFO] - Image embeddings computed.
[2025-02-09 07:02:45,865][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:02:45,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:02:45,888][root][INFO] - Image embeddings computed.
[2025-02-09 07:02:50,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:02:50,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:02:50,127][root][INFO] - Image embeddings computed.
[2025-02-09 07:02:54,357][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:02:54,360][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:02:54,380][root][INFO] - Image embeddings computed.
[2025-02-09 07:02:58,577][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:02:58,580][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:02:58,600][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 18
Lang Goal: put the gray letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:04:56,448][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:04:56,477][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:04:56,497][root][INFO] - Image embeddings computed.
[2025-02-09 07:05:13,299][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:05:13,302][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:05:13,322][root][INFO] - Image embeddings computed.
[2025-02-09 07:05:17,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:05:17,543][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:05:17,563][root][INFO] - Image embeddings computed.
[2025-02-09 07:05:21,788][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:05:21,791][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:05:21,811][root][INFO] - Image embeddings computed.
[2025-02-09 07:05:26,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:05:26,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:05:26,029][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the gray letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:07:23,905][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:07:23,935][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:07:23,955][root][INFO] - Image embeddings computed.
[2025-02-09 07:07:40,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:07:40,640][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:07:40,660][root][INFO] - Image embeddings computed.
[2025-02-09 07:07:44,875][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:07:44,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:07:44,897][root][INFO] - Image embeddings computed.
[2025-02-09 07:07:49,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:07:49,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:07:49,140][root][INFO] - Image embeddings computed.
[2025-02-09 07:07:53,336][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:07:53,339][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:07:53,359][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the gray letter E shape in the right letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.018750000000000003 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 33/50
[2025-02-09 07:09:55,749][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:09:55,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:09:55,779][root][INFO] - Image embeddings computed.
[2025-02-09 07:10:12,318][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:10:12,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:10:12,341][root][INFO] - Image embeddings computed.
[2025-02-09 07:10:16,562][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:10:16,564][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:10:16,584][root][INFO] - Image embeddings computed.
[2025-02-09 07:10:20,824][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:10:20,827][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:10:20,847][root][INFO] - Image embeddings computed.
[2025-02-09 07:10:25,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:10:25,064][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:10:25,084][root][INFO] - Image embeddings computed.
The number of original masks: 14
The number of filtered masks: 10
Lang Goal: put the brown letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:12:23,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:12:23,041][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:12:23,061][root][INFO] - Image embeddings computed.
[2025-02-09 07:12:39,529][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:12:39,532][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:12:39,552][root][INFO] - Image embeddings computed.
[2025-02-09 07:12:43,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:12:43,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:12:43,788][root][INFO] - Image embeddings computed.
[2025-02-09 07:12:48,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:12:48,004][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:12:48,024][root][INFO] - Image embeddings computed.
[2025-02-09 07:12:52,243][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:12:52,245][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:12:52,265][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 15
Lang Goal: put the brown letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:14:50,664][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:14:50,674][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:14:50,694][root][INFO] - Image embeddings computed.
[2025-02-09 07:15:07,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:15:07,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:15:07,194][root][INFO] - Image embeddings computed.
[2025-02-09 07:15:11,411][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:15:11,414][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:15:11,434][root][INFO] - Image embeddings computed.
[2025-02-09 07:15:15,658][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:15:15,661][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:15:15,708][root][INFO] - Image embeddings computed.
[2025-02-09 07:15:19,920][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:15:19,922][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:15:19,942][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 14
Lang Goal: put the brown letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:17:18,761][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:17:18,766][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:17:18,786][root][INFO] - Image embeddings computed.
[2025-02-09 07:17:35,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:17:35,250][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:17:35,270][root][INFO] - Image embeddings computed.
[2025-02-09 07:17:39,481][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:17:39,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:17:39,504][root][INFO] - Image embeddings computed.
[2025-02-09 07:17:43,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:17:43,720][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:17:43,740][root][INFO] - Image embeddings computed.
[2025-02-09 07:17:47,952][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:17:47,955][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:17:47,974][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 14
Lang Goal: put the brown letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:19:47,044][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:19:47,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:19:47,202][root][INFO] - Image embeddings computed.
[2025-02-09 07:20:03,679][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:20:03,772][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:20:03,793][root][INFO] - Image embeddings computed.
[2025-02-09 07:20:08,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:20:08,099][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:20:08,119][root][INFO] - Image embeddings computed.
[2025-02-09 07:20:12,343][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:20:12,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:20:12,454][root][INFO] - Image embeddings computed.
[2025-02-09 07:20:16,669][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:20:16,761][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:20:16,780][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 14
Lang Goal: put the brown letter L shape in the left letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.018181818181818184 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 34/50
[2025-02-09 07:22:20,635][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:22:20,640][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:22:20,660][root][INFO] - Image embeddings computed.
[2025-02-09 07:22:37,312][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:22:37,315][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:22:37,335][root][INFO] - Image embeddings computed.
[2025-02-09 07:22:41,564][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:22:41,567][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:22:41,587][root][INFO] - Image embeddings computed.
[2025-02-09 07:22:45,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:22:45,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:22:45,850][root][INFO] - Image embeddings computed.
[2025-02-09 07:22:50,050][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:22:50,052][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:22:50,072][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: put the green letter L shape in the bottom letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:24:50,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:24:50,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:24:50,212][root][INFO] - Image embeddings computed.
[2025-02-09 07:25:06,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:25:06,990][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:25:07,010][root][INFO] - Image embeddings computed.
[2025-02-09 07:25:11,215][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:25:11,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:25:11,327][root][INFO] - Image embeddings computed.
[2025-02-09 07:25:15,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:25:15,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:25:15,644][root][INFO] - Image embeddings computed.
[2025-02-09 07:25:19,849][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:25:19,852][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:25:19,872][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: put the green letter L shape in the bottom letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:27:20,195][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:27:20,206][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:27:20,226][root][INFO] - Image embeddings computed.
[2025-02-09 07:27:36,979][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:27:36,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:27:37,002][root][INFO] - Image embeddings computed.
[2025-02-09 07:27:41,213][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:27:41,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:27:41,236][root][INFO] - Image embeddings computed.
[2025-02-09 07:27:45,463][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:27:45,465][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:27:45,485][root][INFO] - Image embeddings computed.
[2025-02-09 07:27:49,696][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:27:49,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:27:49,718][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 13
Lang Goal: put the green letter L shape in the bottom letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:29:50,265][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:29:50,271][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:29:50,291][root][INFO] - Image embeddings computed.
[2025-02-09 07:30:06,978][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:30:06,981][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:30:07,001][root][INFO] - Image embeddings computed.
[2025-02-09 07:30:11,205][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:30:11,207][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:30:11,227][root][INFO] - Image embeddings computed.
[2025-02-09 07:30:15,473][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:30:15,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:30:15,495][root][INFO] - Image embeddings computed.
[2025-02-09 07:30:19,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:30:19,695][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:30:19,715][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 19
Lang Goal: put the green letter L shape in the bottom letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:32:20,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:32:20,755][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:32:20,775][root][INFO] - Image embeddings computed.
[2025-02-09 07:32:37,366][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:32:37,369][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:32:37,389][root][INFO] - Image embeddings computed.
[2025-02-09 07:32:41,587][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:32:41,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:32:41,609][root][INFO] - Image embeddings computed.
[2025-02-09 07:32:45,866][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:32:45,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:32:45,888][root][INFO] - Image embeddings computed.
[2025-02-09 07:32:50,082][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:32:50,085][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:32:50,105][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 18
Lang Goal: put the green letter L shape in the bottom letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.017647058823529415 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 35/50
[2025-02-09 07:34:55,021][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:34:55,033][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:34:55,053][root][INFO] - Image embeddings computed.
[2025-02-09 07:35:11,971][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:35:11,974][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:35:11,994][root][INFO] - Image embeddings computed.
[2025-02-09 07:35:16,221][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:35:16,223][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:35:16,243][root][INFO] - Image embeddings computed.
[2025-02-09 07:35:20,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:35:20,478][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:35:20,497][root][INFO] - Image embeddings computed.
[2025-02-09 07:35:24,713][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:35:24,716][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:35:24,736][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 18
Lang Goal: put the red ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:37:26,205][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:37:26,219][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:37:26,245][root][INFO] - Image embeddings computed.
[2025-02-09 07:37:42,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:37:42,939][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:37:42,959][root][INFO] - Image embeddings computed.
[2025-02-09 07:37:47,185][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:37:47,188][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:37:47,208][root][INFO] - Image embeddings computed.
[2025-02-09 07:37:51,424][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:37:51,426][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:37:51,446][root][INFO] - Image embeddings computed.
[2025-02-09 07:37:55,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:37:55,660][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:37:55,680][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: put the red ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:39:57,487][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:39:57,501][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:39:57,521][root][INFO] - Image embeddings computed.
[2025-02-09 07:40:14,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:40:14,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:40:14,026][root][INFO] - Image embeddings computed.
[2025-02-09 07:40:18,226][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:40:18,229][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:40:18,267][root][INFO] - Image embeddings computed.
[2025-02-09 07:40:22,473][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:40:22,565][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:40:22,585][root][INFO] - Image embeddings computed.
[2025-02-09 07:40:26,805][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:40:26,808][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:40:26,828][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 13
Lang Goal: put the red ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:42:28,605][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:42:28,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:42:28,635][root][INFO] - Image embeddings computed.
[2025-02-09 07:42:45,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:42:45,132][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:42:45,152][root][INFO] - Image embeddings computed.
[2025-02-09 07:42:49,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:42:49,360][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:42:49,380][root][INFO] - Image embeddings computed.
[2025-02-09 07:42:53,594][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:42:53,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:42:53,617][root][INFO] - Image embeddings computed.
[2025-02-09 07:42:57,835][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:42:57,837][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:42:57,857][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: put the red ring in the ring hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:45:00,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:45:00,183][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:45:00,203][root][INFO] - Image embeddings computed.
[2025-02-09 07:45:16,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:45:16,687][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:45:16,707][root][INFO] - Image embeddings computed.
[2025-02-09 07:45:20,907][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:45:20,910][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:45:20,930][root][INFO] - Image embeddings computed.
[2025-02-09 07:45:25,140][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:45:25,142][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:45:25,162][root][INFO] - Image embeddings computed.
[2025-02-09 07:45:29,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:45:29,388][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:45:29,408][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 13
Lang Goal: put the red ring in the ring hole
Total Reward: 0.000 | Done: False

Mean: 0.017142857142857144 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 36/50
[2025-02-09 07:47:36,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:47:36,268][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:47:36,288][root][INFO] - Image embeddings computed.
[2025-02-09 07:47:53,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:47:53,147][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:47:53,167][root][INFO] - Image embeddings computed.
[2025-02-09 07:47:57,384][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:47:57,387][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:47:57,407][root][INFO] - Image embeddings computed.
[2025-02-09 07:48:01,630][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:48:01,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:48:01,653][root][INFO] - Image embeddings computed.
[2025-02-09 07:48:05,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:48:05,906][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:48:05,926][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: put the green hexagon in the hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:50:08,335][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:50:08,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:50:08,367][root][INFO] - Image embeddings computed.
[2025-02-09 07:50:25,080][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:50:25,089][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:50:25,108][root][INFO] - Image embeddings computed.
[2025-02-09 07:50:29,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:50:29,334][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:50:29,354][root][INFO] - Image embeddings computed.
[2025-02-09 07:50:33,575][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:50:33,577][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:50:33,597][root][INFO] - Image embeddings computed.
[2025-02-09 07:50:37,840][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:50:37,843][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:50:37,863][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: put the green hexagon in the hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:52:40,604][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:52:40,617][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:52:40,637][root][INFO] - Image embeddings computed.
[2025-02-09 07:52:57,425][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:52:57,433][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:52:57,452][root][INFO] - Image embeddings computed.
[2025-02-09 07:53:01,675][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:53:01,738][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:53:01,758][root][INFO] - Image embeddings computed.
[2025-02-09 07:53:05,970][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:53:05,972][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:53:05,992][root][INFO] - Image embeddings computed.
[2025-02-09 07:53:10,241][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:53:10,243][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:53:10,263][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: put the green hexagon in the hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:55:13,322][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:55:13,332][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:55:13,352][root][INFO] - Image embeddings computed.
[2025-02-09 07:55:30,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:55:30,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:55:30,100][root][INFO] - Image embeddings computed.
[2025-02-09 07:55:34,293][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:55:34,298][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:55:34,318][root][INFO] - Image embeddings computed.
[2025-02-09 07:55:38,508][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:55:38,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:55:38,531][root][INFO] - Image embeddings computed.
[2025-02-09 07:55:42,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:55:42,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:55:42,780][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the green hexagon in the hexagon hole
Total Reward: 0.000 | Done: False

[2025-02-09 07:57:45,874][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:57:45,885][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:57:45,905][root][INFO] - Image embeddings computed.
[2025-02-09 07:58:02,713][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:58:02,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:58:02,752][root][INFO] - Image embeddings computed.
[2025-02-09 07:58:06,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:58:06,973][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:58:06,993][root][INFO] - Image embeddings computed.
[2025-02-09 07:58:11,190][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:58:11,198][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:58:11,218][root][INFO] - Image embeddings computed.
[2025-02-09 07:58:15,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 07:58:15,556][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 07:58:15,576][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: put the green hexagon in the hexagon hole
Total Reward: 0.000 | Done: False

Mean: 0.01666666666666667 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 37/50
[2025-02-09 08:00:27,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:00:27,653][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:00:27,673][root][INFO] - Image embeddings computed.
[2025-02-09 08:00:44,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:00:44,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:00:44,808][root][INFO] - Image embeddings computed.
[2025-02-09 08:00:49,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:00:49,105][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:00:49,125][root][INFO] - Image embeddings computed.
[2025-02-09 08:00:53,353][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:00:53,451][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:00:53,471][root][INFO] - Image embeddings computed.
[2025-02-09 08:00:57,698][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:00:57,702][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:00:57,722][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: put the green letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 08:03:01,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:03:01,613][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:03:01,633][root][INFO] - Image embeddings computed.
[2025-02-09 08:03:18,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:03:18,889][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:03:18,909][root][INFO] - Image embeddings computed.
[2025-02-09 08:03:23,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:03:23,101][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:03:23,121][root][INFO] - Image embeddings computed.
[2025-02-09 08:03:27,356][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:03:27,358][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:03:27,378][root][INFO] - Image embeddings computed.
[2025-02-09 08:03:31,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:03:31,603][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:03:31,623][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the green letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 08:05:35,903][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:05:35,917][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:05:35,937][root][INFO] - Image embeddings computed.
[2025-02-09 08:05:52,788][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:05:52,797][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:05:52,817][root][INFO] - Image embeddings computed.
[2025-02-09 08:05:57,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:05:57,029][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:05:57,049][root][INFO] - Image embeddings computed.
[2025-02-09 08:06:01,257][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:06:01,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:06:01,286][root][INFO] - Image embeddings computed.
[2025-02-09 08:06:05,510][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:06:05,618][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:06:05,638][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 14
Lang Goal: put the green letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 08:08:10,262][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:08:10,278][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:08:10,299][root][INFO] - Image embeddings computed.
[2025-02-09 08:08:27,222][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:08:27,231][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:08:27,250][root][INFO] - Image embeddings computed.
[2025-02-09 08:08:31,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:08:31,460][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:08:31,480][root][INFO] - Image embeddings computed.
[2025-02-09 08:08:35,706][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:08:35,715][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:08:35,734][root][INFO] - Image embeddings computed.
[2025-02-09 08:08:39,956][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:08:39,963][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:08:39,983][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 16
Lang Goal: put the green letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 08:10:44,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:10:44,707][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:10:44,727][root][INFO] - Image embeddings computed.
[2025-02-09 08:11:01,675][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:11:01,684][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:11:01,704][root][INFO] - Image embeddings computed.
[2025-02-09 08:11:05,906][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:11:05,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:11:05,979][root][INFO] - Image embeddings computed.
[2025-02-09 08:11:10,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:11:10,230][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:11:10,250][root][INFO] - Image embeddings computed.
[2025-02-09 08:11:14,482][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:11:14,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:11:14,504][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: put the green letter E shape in the top letter E shape hole
Total Reward: 0.000 | Done: False

Mean: 0.016216216216216217 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 38/50
[2025-02-09 08:13:24,005][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:13:24,028][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:13:24,048][root][INFO] - Image embeddings computed.
[2025-02-09 08:13:40,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:13:40,929][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:13:40,949][root][INFO] - Image embeddings computed.
[2025-02-09 08:13:45,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:13:45,161][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:13:45,181][root][INFO] - Image embeddings computed.
[2025-02-09 08:13:49,384][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:13:49,387][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:13:49,407][root][INFO] - Image embeddings computed.
[2025-02-09 08:13:53,638][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:13:53,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:13:53,661][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: put the red letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 08:15:59,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:15:59,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:15:59,416][root][INFO] - Image embeddings computed.
[2025-02-09 08:16:16,119][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:16:16,122][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:16:16,142][root][INFO] - Image embeddings computed.
[2025-02-09 08:16:20,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:16:20,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:16:20,387][root][INFO] - Image embeddings computed.
[2025-02-09 08:16:24,601][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:16:24,604][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:16:24,624][root][INFO] - Image embeddings computed.
[2025-02-09 08:16:28,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:16:28,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:16:28,878][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the red letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 08:18:34,655][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:18:34,680][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:18:34,700][root][INFO] - Image embeddings computed.
[2025-02-09 08:18:51,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:18:51,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:18:51,455][root][INFO] - Image embeddings computed.
[2025-02-09 08:18:55,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:18:55,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:18:55,685][root][INFO] - Image embeddings computed.
[2025-02-09 08:18:59,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:18:59,904][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:18:59,924][root][INFO] - Image embeddings computed.
[2025-02-09 08:19:04,160][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:19:04,163][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:19:04,183][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 13
Lang Goal: put the red letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 08:21:09,976][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:21:09,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:21:10,002][root][INFO] - Image embeddings computed.
[2025-02-09 08:21:26,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:21:26,574][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:21:26,594][root][INFO] - Image embeddings computed.
[2025-02-09 08:21:30,787][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:21:30,789][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:21:30,809][root][INFO] - Image embeddings computed.
[2025-02-09 08:21:35,015][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:21:35,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:21:35,037][root][INFO] - Image embeddings computed.
[2025-02-09 08:21:39,281][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:21:39,283][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:21:39,303][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 13
Lang Goal: put the red letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

[2025-02-09 08:23:45,478][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:23:45,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:23:45,520][root][INFO] - Image embeddings computed.
[2025-02-09 08:24:02,147][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:24:02,150][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:24:02,170][root][INFO] - Image embeddings computed.
[2025-02-09 08:24:06,371][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:24:06,374][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:24:06,410][root][INFO] - Image embeddings computed.
[2025-02-09 08:24:10,612][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:24:10,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:24:10,635][root][INFO] - Image embeddings computed.
[2025-02-09 08:24:14,872][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:24:14,875][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:24:14,895][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: put the red letter L shape in the letter L shape hole
Total Reward: 0.000 | Done: False

Mean: 0.01578947368421053 | Task: assembling-kits-seq-seen-colors | Ckpt: steps=00080-val_loss=0.00015124.ckpt
Test: 39/50
[2025-02-09 08:26:24,836][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:26:24,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:26:24,874][root][INFO] - Image embeddings computed.
[2025-02-09 08:26:41,686][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:26:41,688][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:26:41,708][root][INFO] - Image embeddings computed.
[2025-02-09 08:26:45,933][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:26:45,936][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:26:45,956][root][INFO] - Image embeddings computed.
[2025-02-09 08:26:50,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:26:50,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:26:50,211][root][INFO] - Image embeddings computed.
[2025-02-09 08:26:54,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 08:26:54,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 08:26:54,462][root][INFO] - Image embeddings computed.
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
slurmstepd: error: *** STEP 996621.0 ON gpu021 CANCELLED AT 2025-02-09T08:27:55 DUE TO TIME LIMIT ***
slurmstepd: error: *** JOB 996621 ON gpu021 CANCELLED AT 2025-02-09T08:27:55 DUE TO TIME LIMIT ***
