pybullet build time: Nov 28 2023 23:45:17
Save path for results: /home/a/acw799/cliport/exps_clipfit/packing-seen-google-objects-seq-clipfit-n10-train/checkpoints/
Evaluating: ['steps=00040-val_loss=0.00019566.ckpt', 'steps=00080-val_loss=0.00018048.ckpt', 'steps=00120-val_loss=0.00018318.ckpt', 'steps=00160-val_loss=0.00017519.ckpt', 'steps=00200-val_loss=0.00019471.ckpt']
[2025-02-08 13:52:26,088][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:52:26,590][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:52:33,876][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-08 13:52:51,524][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:52:51,706][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:52:58,588][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-08 13:53:04,979][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:53:05,154][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:53:11,688][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-08 13:53:15,900][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:53:16,067][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:53:22,760][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: packing-seen-google-objects-seq-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/packing-seen-google-objects-seq-clipfit-n10-train/checkpoints/steps=00040-val_loss=0.00019566.ckpt
Test: 1/50
[2025-02-08 13:54:15,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:15,604][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:15,989][root][INFO] - Image embeddings computed.
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Memory efficient kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:723.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Memory Efficient attention has been runtime disabled. (Triggered internally at ../aten/src/ATen/native/transformers/sdp_utils_cpp.h:495.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Flash attention kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:725.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Expected query, key and value to all be of dtype: {Half, BFloat16}. Got Query dtype: float, Key dtype: float, and Value dtype: float instead. (Triggered internally at ../aten/src/ATen/native/transformers/sdp_utils_cpp.h:98.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: CuDNN attention kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:727.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: The CuDNN backend needs to be enabled by setting the enviornment variable`TORCH_CUDNN_SDPA_ENABLED=1` (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:496.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/home/a/acw799/.local/lib/python3.10/site-packages/torch/nn/modules/module.py:1562: UserWarning: Flash Attention kernel failed due to: No available kernel. Aborting execution.
Falling back to all available kernels for scaled_dot_product_attention (which may have a slower speed).
  return forward_call(*args, **kwargs)
[2025-02-08 13:54:32,674][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:32,745][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:32,765][root][INFO] - Image embeddings computed.
[2025-02-08 13:54:36,884][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:36,980][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:37,000][root][INFO] - Image embeddings computed.
[2025-02-08 13:54:41,140][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:41,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:41,253][root][INFO] - Image embeddings computed.
[2025-02-08 13:54:45,406][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:45,523][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:45,544][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 26
Lang Goal: pack the scissors in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 13:55:02,841][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:55:02,942][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:55:02,963][root][INFO] - Image embeddings computed.
[2025-02-08 13:55:19,490][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:55:19,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:55:19,615][root][INFO] - Image embeddings computed.
[2025-02-08 13:55:23,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:55:23,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:55:23,884][root][INFO] - Image embeddings computed.
[2025-02-08 13:55:28,055][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:55:28,198][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:55:28,219][root][INFO] - Image embeddings computed.
[2025-02-08 13:55:32,408][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:55:32,533][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:55:32,553][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 24
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.400 | Done: False

[2025-02-08 13:55:49,909][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:55:49,972][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:55:49,993][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:06,591][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:06,596][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:06,616][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:10,787][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:10,796][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:10,817][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:15,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:15,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:15,039][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:19,246][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:19,255][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:19,276][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 23
Lang Goal: pack the lion figure in the brown box
Total Reward: 0.600 | Done: False

[2025-02-08 13:56:33,215][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:33,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:33,397][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:49,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:50,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:50,092][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:54,269][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:54,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:54,389][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:58,590][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:58,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:58,711][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:02,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:03,055][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:03,076][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 26
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.600 | Done: False

[2025-02-08 13:57:19,623][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:19,637][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:19,659][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:36,156][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:36,163][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:36,184][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:40,372][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:40,381][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:40,402][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:44,609][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:44,618][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:44,639][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:48,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:48,887][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:48,909][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 23
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.600 | Done: False

[2025-02-08 13:58:02,134][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:02,145][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:02,166][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:18,788][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:18,798][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:18,819][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:23,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:23,023][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:23,044][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:27,272][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:27,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:27,302][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:31,525][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:31,534][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:31,555][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 17
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.800 | Done: False

Mean: 0.8 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 2/50
[2025-02-08 13:58:59,052][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:59,158][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:59,179][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:16,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:16,433][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:16,453][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:20,630][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:20,726][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:20,747][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:24,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:25,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:25,055][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:29,222][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:29,318][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:29,339][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 21
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 13:59:40,610][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:40,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:40,636][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:57,833][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:57,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:57,863][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:02,055][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:02,063][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:02,083][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:06,273][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:06,282][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:06,302][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:10,483][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:10,487][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:10,508][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 20
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:00:24,256][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:24,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:24,398][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:41,765][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:41,864][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:41,886][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:46,073][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:46,176][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:46,199][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:50,402][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:50,494][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:50,516][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:54,695][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:54,798][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:54,820][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 23
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:01:11,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:11,432][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:11,453][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:28,668][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:28,672][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:28,693][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:32,884][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:32,888][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:32,909][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:37,111][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:37,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:37,136][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:41,317][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:41,326][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:41,347][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 26
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:02:00,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:00,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:00,639][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:17,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:17,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:17,986][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:22,165][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:22,276][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:22,297][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:26,485][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:26,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:26,670][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:30,847][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:30,998][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:31,021][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 3/50
[2025-02-08 14:02:55,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:55,749][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:55,770][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:12,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:12,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:12,664][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:16,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:16,993][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:17,014][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:21,207][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:21,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:21,326][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:25,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:25,630][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:25,650][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 17
Lang Goal: pack the can opener in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.6 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 4/50
[2025-02-08 14:03:47,135][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:47,140][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:47,160][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:03,949][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:03,958][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:03,978][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:08,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:08,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:08,174][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:12,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:12,385][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:12,405][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:16,576][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:16,584][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:16,604][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: pack the office depot box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:04:29,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:29,152][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:29,173][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:46,185][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:46,193][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:46,214][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:50,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:50,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:50,410][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:54,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:54,626][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:54,646][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:58,826][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:58,830][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:58,851][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 20
Lang Goal: pack the office depot box in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.45 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 5/50
[2025-02-08 14:05:23,747][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:23,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:23,883][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:40,573][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:40,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:40,690][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:44,890][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:45,002][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:45,022][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:49,212][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:49,310][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:49,330][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:53,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:53,601][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:53,621][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:06:10,070][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:10,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:10,110][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:26,679][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:26,696][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:26,717][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:30,927][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:30,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:30,958][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:35,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:35,158][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:35,179][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:39,361][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:39,366][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:39,388][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 20
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:06:54,971][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:54,985][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:55,005][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:11,646][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:11,656][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:11,677][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:15,893][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:15,902][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:15,922][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:20,148][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:20,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:20,176][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:24,353][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:24,362][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:24,383][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 20
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:07:40,472][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:40,477][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:40,498][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:57,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:57,217][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:57,238][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:01,448][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:01,452][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:01,473][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:05,681][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:05,688][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:05,709][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:09,898][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:09,908][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:09,929][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 17
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:08:28,674][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:28,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:28,800][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:46,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:46,585][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:46,614][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:50,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:50,918][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:50,946][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:55,142][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:55,283][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:55,311][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:59,496][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:59,608][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:59,630][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 14
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:09:19,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:19,570][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:19,592][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:36,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:36,410][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:36,431][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:40,634][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:40,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:40,801][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:44,996][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:45,101][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:45,122][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:49,307][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:49,405][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:49,426][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.36 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 6/50
[2025-02-08 14:10:13,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:13,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:13,618][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:30,430][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:30,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:30,464][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:34,648][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:34,658][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:34,678][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:38,869][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:38,879][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:38,900][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:43,081][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:43,085][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:43,106][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:11:01,478][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:01,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:01,510][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:18,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:18,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:18,177][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:22,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:22,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:22,389][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:26,566][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:26,571][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:26,592][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:30,788][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:30,793][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:30,814][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 19
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:11:47,716][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:47,731][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:47,752][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:04,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:04,284][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:04,306][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:08,494][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:08,499][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:08,520][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:12,706][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:12,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:12,735][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:16,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:16,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:16,955][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:12:36,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:36,479][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:36,499][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:53,271][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:53,280][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:53,300][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:57,480][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:57,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:57,504][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:01,690][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:01,694][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:01,715][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:05,895][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:05,904][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:05,924][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.3 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 7/50
[2025-02-08 14:13:30,302][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:30,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:30,333][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:47,404][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:47,413][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:47,433][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:51,636][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:51,640][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:51,660][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:55,859][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:55,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:55,883][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:00,041][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:00,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:00,065][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 17
Lang Goal: pack the crayon box in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.39999999999999997 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 8/50
[2025-02-08 14:14:25,562][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:25,656][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:25,676][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:42,413][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:42,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:42,531][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:46,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:46,791][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:46,812][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:50,986][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:51,084][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:51,104][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:55,239][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:55,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:55,362][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:15:12,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:12,836][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:12,857][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:29,430][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:29,437][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:29,457][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:33,614][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:33,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:33,641][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:37,831][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:37,839][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:37,860][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:42,020][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:42,029][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:42,049][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 20
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.35 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 9/50
[2025-02-08 14:16:14,262][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:14,413][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:14,439][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:31,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:31,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:31,362][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:35,525][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:35,626][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:35,646][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:39,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:39,923][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:39,943][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:44,134][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:44,263][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:44,283][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 22
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 14:17:03,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:03,271][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:03,292][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:19,794][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:19,804][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:19,824][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:24,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:24,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:24,030][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:28,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:28,228][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:28,248][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:32,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:32,438][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:32,458][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 18
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 14:17:50,629][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:50,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:50,654][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:07,409][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:07,417][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:07,437][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:11,627][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:11,636][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:11,656][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:15,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:15,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:15,882][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:20,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:20,076][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:20,096][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 21
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 14:18:38,094][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:38,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:38,128][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:54,736][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:54,748][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:54,769][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:58,959][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:58,969][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:58,989][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:03,190][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:03,200][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:03,220][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:07,408][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:07,416][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:07,436][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 22
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 14:19:26,965][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:27,070][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:27,091][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:43,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:43,898][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:43,919][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:48,101][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:48,270][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:48,291][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:52,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:52,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:52,646][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:56,825][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:56,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:56,974][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 22
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 14:20:20,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:20,160][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:20,181][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:36,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:36,861][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:36,882][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:41,053][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:41,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:41,078][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:45,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:45,277][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:45,297][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:49,484][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:49,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:49,514][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 20
Lang Goal: pack the honey dipper in the brown box
Warning: movej exceeded 5 second timeout. Skipping.
Total Reward: 0.200 | Done: True

Mean: 0.3333333333333333 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 10/50
[2025-02-08 14:21:28,927][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:28,940][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:28,961][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:45,741][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:45,749][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:45,769][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:49,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:49,944][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:49,964][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:54,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:54,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:54,182][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:58,331][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:58,335][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:58,356][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 20
Lang Goal: pack the yoshi figure in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:22:17,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:17,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:17,139][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:34,114][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:34,118][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:34,138][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:38,329][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:38,333][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:38,353][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:42,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:42,576][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:42,596][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:46,758][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:46,762][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:46,782][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 23
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.485 | Done: False

[2025-02-08 14:23:08,210][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:08,223][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:08,244][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:24,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:24,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:24,799][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:28,989][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:28,993][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:29,013][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:33,214][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:33,223][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:33,243][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:37,400][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:37,408][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:37,428][root][INFO] - Image embeddings computed.
The number of original masks: 47
The number of filtered masks: 25
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.485 | Done: False

[2025-02-08 14:24:02,675][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:02,810][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:02,841][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:19,351][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:19,462][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:19,484][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:23,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:23,833][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:23,855][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:28,057][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:28,160][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:28,182][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:32,341][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:32,437][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:32,459][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 22
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 14:24:55,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:55,920][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:55,941][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:12,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:12,457][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:12,477][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:16,666][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:16,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:16,690][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:20,913][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:20,922][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:20,942][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:25,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:25,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:25,127][root][INFO] - Image embeddings computed.
The number of original masks: 47
The number of filtered masks: 23
Lang Goal: pack the unicorn toy in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.35 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 11/50
[2025-02-08 14:25:56,301][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:56,430][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:56,450][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:13,498][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:13,680][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:13,700][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:17,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:18,027][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:18,054][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:22,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:22,416][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:22,436][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:26,606][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:26,741][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:26,761][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: pack the light brown boot with golden laces in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:26:50,368][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:50,379][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:50,400][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:07,117][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:07,125][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:07,145][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:11,324][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:11,331][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:11,351][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:15,634][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:15,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:15,661][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:19,841][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:19,850][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:19,884][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 19
Lang Goal: pack the red cup in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 14:27:40,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:40,888][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:40,909][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:57,431][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:57,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:57,456][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:01,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:01,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:01,661][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:05,869][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:05,876][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:05,896][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:10,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:10,093][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:10,113][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 14:28:36,576][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:36,671][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:36,692][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:53,186][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:53,345][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:53,366][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:57,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:57,642][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:57,670][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:01,888][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:01,987][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:02,009][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:06,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:06,280][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:06,302][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 14:29:29,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:29,950][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:29,970][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:46,441][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:46,448][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:46,468][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:50,643][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:50,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:50,673][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:54,843][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:54,851][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:54,872][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:59,065][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:59,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:59,092][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.36363636363636365 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 12/50
[2025-02-08 14:30:33,379][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:33,390][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:33,411][root][INFO] - Image embeddings computed.
[2025-02-08 14:30:50,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:50,466][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:50,486][root][INFO] - Image embeddings computed.
[2025-02-08 14:30:54,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:54,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:54,689][root][INFO] - Image embeddings computed.
[2025-02-08 14:30:58,850][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:58,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:58,875][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:03,055][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:03,059][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:03,080][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:31:24,488][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:24,502][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:24,522][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:41,560][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:41,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:41,589][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:45,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:45,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:45,798][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:49,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:49,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:49,984][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:54,166][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:54,171][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:54,191][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 24
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:32:16,054][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:16,068][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:16,089][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:33,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:33,071][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:33,091][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:37,278][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:37,288][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:37,309][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:41,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:41,479][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:41,499][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:45,676][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:45,680][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:45,701][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 21
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.3333333333333333 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 13/50
[2025-02-08 14:33:19,204][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:19,219][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:19,240][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:35,907][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:35,913][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:35,934][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:40,117][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:40,211][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:40,232][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:44,425][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:44,518][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:44,539][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:48,702][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:48,807][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:48,828][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 14
Lang Goal: pack the porcelain cup in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:34:13,157][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:13,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:13,183][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:29,610][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:29,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:29,640][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:33,811][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:33,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:33,836][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:38,024][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:38,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:38,055][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:42,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:42,241][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:42,262][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 12
Lang Goal: pack the porcelain cup in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 14:35:04,702][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:04,723][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:04,744][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:21,159][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:21,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:21,189][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:25,375][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:25,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:25,400][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:29,613][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:29,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:29,644][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:33,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:33,829][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:33,853][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: pack the screwdriver in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 14:35:57,906][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:57,920][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:57,941][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:14,373][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:14,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:14,404][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:18,592][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:18,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:18,618][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:22,816][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:22,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:22,847][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:27,023][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:27,027][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:27,048][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 15
Lang Goal: pack the screwdriver in the brown box
Total Reward: 0.333 | Done: False

Mean: 0.3333333333333333 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 14/50
[2025-02-08 14:36:57,605][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:57,626][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:57,647][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:14,427][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:14,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:14,457][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:18,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:18,650][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:18,671][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:22,849][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:22,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:22,875][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:27,073][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:27,078][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:27,099][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 15
Lang Goal: pack the white razer mouse in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:37:55,057][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:55,161][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:55,182][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:11,722][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:11,867][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:11,889][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:16,064][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:16,158][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:16,178][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:20,350][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:20,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:20,466][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:24,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:24,740][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:24,760][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: pack the white razer mouse in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:38:48,195][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:48,209][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:48,230][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:04,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:04,848][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:04,868][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:09,075][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:09,079][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:09,100][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:13,271][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:13,276][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:13,300][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:17,487][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:17,496][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:17,516][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: pack the white razer mouse in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.3095238095238095 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 15/50
[2025-02-08 14:39:54,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:54,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:54,540][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:11,315][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:11,416][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:11,436][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:15,601][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:15,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:15,719][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:19,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:20,008][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:20,028][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:24,216][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:24,318][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:24,338][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 15
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 14:40:52,299][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:52,312][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:52,333][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:09,570][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:09,578][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:09,599][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:13,776][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:13,784][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:13,804][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:18,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:18,011][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:18,031][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:22,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:22,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:22,259][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 16
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 14:41:52,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:52,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:52,514][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:09,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:09,454][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:09,475][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:13,646][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:13,742][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:13,763][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:17,960][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:18,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:18,078][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:22,275][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:22,372][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:22,393][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 18
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.3222222222222222 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 16/50
[2025-02-08 14:42:55,542][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:55,610][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:55,640][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:12,698][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:12,707][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:12,727][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:16,890][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:16,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:16,919][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:21,089][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:21,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:21,119][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:25,278][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:25,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:25,307][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 11
Lang Goal: pack the unicorn toy in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.36458333333333337 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 17/50
[2025-02-08 14:43:58,686][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:58,701][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:58,721][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:15,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:15,378][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:15,399][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:19,572][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:19,577][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:19,597][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:23,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:23,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:23,879][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:28,016][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:28,113][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:28,134][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 14
Lang Goal: pack the toy train in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:44:54,806][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:54,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:54,844][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:11,384][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:11,394][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:11,415][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:15,595][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:15,605][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:15,625][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:19,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:19,808][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:19,829][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:23,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:24,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:24,110][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 21
Lang Goal: pack the toy train in the brown box
Total Reward: 0.304 | Done: False

[2025-02-08 14:45:50,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:50,755][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:50,775][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:07,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:07,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:07,481][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:11,680][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:11,689][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:11,709][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:15,903][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:15,949][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:15,969][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:20,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:20,150][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:20,170][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 22
Lang Goal: pack the toy train in the brown box
Total Reward: 0.271 | Done: False

[2025-02-08 14:46:46,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:46,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:46,377][root][INFO] - Image embeddings computed.
[2025-02-08 14:47:02,973][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:02,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:03,002][root][INFO] - Image embeddings computed.
[2025-02-08 14:47:07,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:07,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:07,235][root][INFO] - Image embeddings computed.
[2025-02-08 14:47:11,410][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:11,419][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:11,439][root][INFO] - Image embeddings computed.
[2025-02-08 14:47:15,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:15,599][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:15,619][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 19
Lang Goal: pack the toy train in the brown box
Total Reward: 0.333 | Done: False

Mean: 0.36274509803921573 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 18/50
[2025-02-08 14:47:49,282][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:49,387][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:49,407][root][INFO] - Image embeddings computed.
[2025-02-08 14:48:06,047][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:06,141][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:06,162][root][INFO] - Image embeddings computed.
[2025-02-08 14:48:10,345][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:10,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:10,464][root][INFO] - Image embeddings computed.
[2025-02-08 14:48:14,656][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:14,752][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:14,772][root][INFO] - Image embeddings computed.
[2025-02-08 14:48:18,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:19,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:19,085][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 13
Lang Goal: pack the purple tape in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 14:48:45,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:45,789][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:45,810][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:02,413][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:02,422][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:02,443][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:06,616][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:06,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:06,646][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:10,872][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:10,876][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:10,897][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:15,058][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:15,068][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:15,088][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: pack the yoshi figure in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.39814814814814814 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 19/50
[2025-02-08 14:49:58,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:59,068][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:59,089][root][INFO] - Image embeddings computed.
[2025-02-08 14:50:15,690][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:15,835][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:15,855][root][INFO] - Image embeddings computed.
[2025-02-08 14:50:20,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:20,131][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:20,152][root][INFO] - Image embeddings computed.
[2025-02-08 14:50:24,320][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:24,420][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:24,441][root][INFO] - Image embeddings computed.
[2025-02-08 14:50:28,579][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:28,677][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:28,697][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 28
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:50:56,886][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:56,991][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:57,013][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:13,565][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:13,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:13,685][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:17,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:17,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:17,882][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:22,078][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:22,087][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:22,109][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:26,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:26,269][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:26,290][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 31
Lang Goal: pack the scissors in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 14:51:55,508][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:55,529][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:55,549][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:12,062][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:12,066][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:12,087][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:16,248][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:16,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:16,272][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:20,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:20,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:20,488][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:24,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:24,866][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:24,887][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 29
Lang Goal: pack the lion figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 14:53:01,536][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:01,655][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:01,676][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:18,194][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:18,294][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:18,321][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:22,471][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:22,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:22,587][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:26,782][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:26,918][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:26,939][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:31,094][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:31,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:31,213][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 24
Lang Goal: pack the lion figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 14:54:04,269][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:04,282][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:04,303][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:20,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:20,727][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:20,748][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:24,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:24,906][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:24,926][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:29,114][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:29,123][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:29,143][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:33,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:33,320][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:33,340][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 25
Lang Goal: pack the lion figure in the brown box
Total Reward: 0.750 | Done: False

Mean: 0.4166666666666667 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 20/50
[2025-02-08 14:55:10,844][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:10,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:10,878][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:27,610][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:27,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:27,635][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:31,833][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:31,839][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:31,859][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:36,029][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:36,039][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:36,059][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:40,219][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:40,229][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:40,250][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 10
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.4458333333333334 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 21/50
[2025-02-08 14:56:21,747][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:56:21,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:56:21,868][root][INFO] - Image embeddings computed.
[2025-02-08 14:56:38,374][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:56:38,471][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:56:38,491][root][INFO] - Image embeddings computed.
[2025-02-08 14:56:42,655][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:56:42,753][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:56:42,774][root][INFO] - Image embeddings computed.
[2025-02-08 14:56:46,943][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:56:47,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:56:47,067][root][INFO] - Image embeddings computed.
[2025-02-08 14:56:51,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:56:51,329][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:56:51,350][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.315 | Done: False

[2025-02-08 14:57:25,783][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:57:25,886][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:57:25,908][root][INFO] - Image embeddings computed.
[2025-02-08 14:57:43,197][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:57:43,417][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:57:43,445][root][INFO] - Image embeddings computed.
[2025-02-08 14:57:47,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:57:47,745][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:57:47,766][root][INFO] - Image embeddings computed.
[2025-02-08 14:57:51,942][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:57:52,081][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:57:52,103][root][INFO] - Image embeddings computed.
[2025-02-08 14:57:56,271][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:57:56,412][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:57:56,434][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.312 | Done: False

[2025-02-08 14:58:29,602][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:29,616][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:29,637][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:46,331][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:46,344][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:46,366][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:50,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:50,539][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:50,560][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:54,729][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:54,738][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:54,759][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:58,926][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:58,936][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:58,957][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 20
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.312 | Done: False

[2025-02-08 14:59:31,743][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:31,757][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:31,777][root][INFO] - Image embeddings computed.
[2025-02-08 14:59:48,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:48,178][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:48,198][root][INFO] - Image embeddings computed.
[2025-02-08 14:59:52,374][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:52,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:52,403][root][INFO] - Image embeddings computed.
[2025-02-08 14:59:56,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:56,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:56,613][root][INFO] - Image embeddings computed.
[2025-02-08 15:00:00,784][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:00:00,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:00:00,813][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 18
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.312 | Done: False

Mean: 0.43946837994457044 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 22/50
[2025-02-08 15:00:43,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:00:43,354][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:00:43,375][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:00,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:00,094][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:00,114][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:04,261][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:04,269][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:04,289][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:08,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:08,448][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:08,468][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:12,655][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:12,659][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:12,680][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 19
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:01:42,720][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:42,724][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:42,745][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:59,302][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:59,310][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:59,330][root][INFO] - Image embeddings computed.
[2025-02-08 15:02:03,486][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:03,494][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:03,514][root][INFO] - Image embeddings computed.
[2025-02-08 15:02:07,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:07,691][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:07,711][root][INFO] - Image embeddings computed.
[2025-02-08 15:02:11,899][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:11,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:11,929][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 22
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.41949254449254453 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 23/50
[2025-02-08 15:02:51,079][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:51,181][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:51,202][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:07,616][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:07,733][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:07,753][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:11,924][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:12,016][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:12,037][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:16,186][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:16,279][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:16,300][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:20,463][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:20,585][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:20,606][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 10
Lang Goal: pack the purple tape in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 15:03:52,538][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:52,542][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:52,563][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:09,081][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:09,089][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:09,110][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:13,265][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:13,273][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:13,293][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:17,480][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:17,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:17,504][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:21,656][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:21,659][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:21,680][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 11
Lang Goal: pack the bull figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 15:04:51,666][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:51,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:51,691][root][INFO] - Image embeddings computed.
[2025-02-08 15:05:08,222][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:05:08,230][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:05:08,250][root][INFO] - Image embeddings computed.
[2025-02-08 15:05:12,415][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:05:12,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:05:12,444][root][INFO] - Image embeddings computed.
[2025-02-08 15:05:16,614][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:05:16,618][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:05:16,639][root][INFO] - Image embeddings computed.
[2025-02-08 15:05:20,787][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:05:20,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:05:20,812][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 12
Lang Goal: pack the bull figure in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.4229928686450426 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 24/50
[2025-02-08 15:06:02,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:02,151][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:02,172][root][INFO] - Image embeddings computed.
[2025-02-08 15:06:19,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:19,145][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:19,166][root][INFO] - Image embeddings computed.
[2025-02-08 15:06:23,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:23,343][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:23,364][root][INFO] - Image embeddings computed.
[2025-02-08 15:06:27,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:27,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:27,564][root][INFO] - Image embeddings computed.
[2025-02-08 15:06:31,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:31,701][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:31,721][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 15:07:05,870][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:05,973][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:05,994][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:23,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:23,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:23,136][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:27,308][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:27,400][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:27,421][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:31,614][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:31,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:31,733][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:35,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:35,960][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:35,981][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 17
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 15:08:09,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:09,646][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:09,667][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:26,773][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:26,776][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:26,797][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:30,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:30,971][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:30,991][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:35,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:35,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:35,235][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:39,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:39,398][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:39,418][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 15:09:11,714][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:11,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:11,739][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:28,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:28,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:28,530][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:32,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:32,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:32,729][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:36,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:36,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:36,954][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:41,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:41,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:41,116][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 15:10:12,689][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:12,703][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:12,723][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:30,849][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:30,853][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:30,874][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:35,044][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:35,053][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:35,073][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:39,274][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:39,282][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:39,302][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:43,433][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:43,437][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:43,457][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 16
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 15:11:15,751][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:15,769][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:15,801][root][INFO] - Image embeddings computed.
[2025-02-08 15:11:32,652][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:32,658][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:32,678][root][INFO] - Image embeddings computed.
[2025-02-08 15:11:36,851][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:36,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:36,893][root][INFO] - Image embeddings computed.
[2025-02-08 15:11:41,089][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:41,099][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:41,120][root][INFO] - Image embeddings computed.
[2025-02-08 15:11:45,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:45,263][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:45,283][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 17
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.200 | Done: False

Mean: 0.4137014991181658 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 25/50
[2025-02-08 15:12:30,174][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:30,186][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:30,207][root][INFO] - Image embeddings computed.
[2025-02-08 15:12:46,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:46,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:46,968][root][INFO] - Image embeddings computed.
[2025-02-08 15:12:51,121][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:51,129][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:51,150][root][INFO] - Image embeddings computed.
[2025-02-08 15:12:55,331][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:55,340][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:55,360][root][INFO] - Image embeddings computed.
[2025-02-08 15:12:59,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:59,539][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:59,571][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 24
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 15:13:32,697][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:32,805][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:32,825][root][INFO] - Image embeddings computed.
[2025-02-08 15:13:49,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:49,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:49,417][root][INFO] - Image embeddings computed.
[2025-02-08 15:13:53,580][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:53,743][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:53,764][root][INFO] - Image embeddings computed.
[2025-02-08 15:13:57,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:58,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:58,137][root][INFO] - Image embeddings computed.
[2025-02-08 15:14:02,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:02,439][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:02,459][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 21
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 15:14:40,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:40,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:40,562][root][INFO] - Image embeddings computed.
[2025-02-08 15:14:57,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:57,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:57,136][root][INFO] - Image embeddings computed.
[2025-02-08 15:15:01,301][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:01,309][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:01,330][root][INFO] - Image embeddings computed.
[2025-02-08 15:15:05,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:05,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:05,539][root][INFO] - Image embeddings computed.
[2025-02-08 15:15:09,728][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:09,732][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:09,752][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 22
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 15:15:42,719][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:42,723][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:42,744][root][INFO] - Image embeddings computed.
[2025-02-08 15:15:59,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:59,181][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:59,202][root][INFO] - Image embeddings computed.
[2025-02-08 15:16:03,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:03,366][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:03,387][root][INFO] - Image embeddings computed.
[2025-02-08 15:16:07,584][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:07,595][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:07,615][root][INFO] - Image embeddings computed.
[2025-02-08 15:16:11,810][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:11,819][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:11,840][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 20
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 15:16:48,464][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:48,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:48,488][root][INFO] - Image embeddings computed.
[2025-02-08 15:17:04,966][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:17:04,974][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:17:04,995][root][INFO] - Image embeddings computed.
[2025-02-08 15:17:09,148][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:17:09,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:17:09,176][root][INFO] - Image embeddings computed.
[2025-02-08 15:17:13,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:17:13,363][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:17:13,383][root][INFO] - Image embeddings computed.
[2025-02-08 15:17:17,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:17:17,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:17:17,617][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 22
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.41715343915343917 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 26/50
[2025-02-08 15:18:02,069][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:02,083][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:02,104][root][INFO] - Image embeddings computed.
[2025-02-08 15:18:18,616][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:18,626][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:18,646][root][INFO] - Image embeddings computed.
[2025-02-08 15:18:22,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:22,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:22,843][root][INFO] - Image embeddings computed.
[2025-02-08 15:18:27,037][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:27,041][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:27,061][root][INFO] - Image embeddings computed.
[2025-02-08 15:18:31,252][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:31,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:31,280][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 13
Lang Goal: pack the honey dipper in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.4395706145706146 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 27/50
[2025-02-08 15:19:14,950][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:14,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:14,975][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:31,543][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:31,547][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:31,568][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:35,719][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:35,727][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:35,748][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:39,891][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:39,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:39,920][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:44,089][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:44,097][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:44,118][root][INFO] - Image embeddings computed.
The number of original masks: 15
The number of filtered masks: 9
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:20:17,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:17,952][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:17,973][root][INFO] - Image embeddings computed.
[2025-02-08 15:20:34,532][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:34,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:34,557][root][INFO] - Image embeddings computed.
[2025-02-08 15:20:38,710][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:38,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:38,739][root][INFO] - Image embeddings computed.
[2025-02-08 15:20:42,894][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:42,902][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:42,922][root][INFO] - Image embeddings computed.
[2025-02-08 15:20:47,088][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:47,097][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:47,117][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 11
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:21:21,923][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:21,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:21,948][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:38,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:38,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:38,463][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:42,612][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:42,616][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:42,637][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:46,797][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:46,801][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:46,822][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:50,981][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:50,985][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:51,005][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 12
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.432 | Done: False

Mean: 0.43930102390750536 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 28/50
[2025-02-08 15:22:37,312][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:22:37,317][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:22:37,347][root][INFO] - Image embeddings computed.
[2025-02-08 15:22:54,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:22:54,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:22:54,093][root][INFO] - Image embeddings computed.
[2025-02-08 15:22:58,273][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:22:58,277][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:22:58,297][root][INFO] - Image embeddings computed.
[2025-02-08 15:23:02,481][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:23:02,485][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:23:02,505][root][INFO] - Image embeddings computed.
[2025-02-08 15:23:06,652][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:23:06,656][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:23:06,677][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 18
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:23:42,093][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:23:42,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:23:42,135][root][INFO] - Image embeddings computed.
[2025-02-08 15:23:58,995][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:23:59,004][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:23:59,025][root][INFO] - Image embeddings computed.
[2025-02-08 15:24:03,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:03,237][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:03,262][root][INFO] - Image embeddings computed.
[2025-02-08 15:24:07,452][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:07,457][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:07,478][root][INFO] - Image embeddings computed.
[2025-02-08 15:24:11,628][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:11,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:11,654][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 22
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4236117016250945 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 29/50
[2025-02-08 15:24:57,306][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:57,411][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:57,431][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:14,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:14,261][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:14,282][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:18,461][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:18,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:18,575][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:22,751][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:22,844][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:22,864][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:27,020][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:27,113][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:27,133][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 14
Lang Goal: pack the nintendo 3ds in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:26:03,837][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:03,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:03,867][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:20,346][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:20,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:20,376][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:24,548][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:24,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:24,573][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:28,739][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:28,743][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:28,763][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:32,917][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:32,921][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:32,941][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 12
Lang Goal: pack the nintendo 3ds in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4090044015690567 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 30/50
[2025-02-08 15:27:19,950][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:19,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:19,985][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:36,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:36,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:36,863][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:41,032][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:41,036][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:41,057][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:45,242][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:45,246][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:45,266][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:49,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:49,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:49,463][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 18
Lang Goal: pack the spiderman figure in the brown box
Total Reward: 0.306 | Done: False

[2025-02-08 15:28:25,592][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:28:25,710][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:28:25,731][root][INFO] - Image embeddings computed.
[2025-02-08 15:28:42,368][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:28:42,377][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:28:42,397][root][INFO] - Image embeddings computed.
[2025-02-08 15:28:46,577][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:28:46,581][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:28:46,601][root][INFO] - Image embeddings computed.
[2025-02-08 15:28:50,788][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:28:50,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:28:50,813][root][INFO] - Image embeddings computed.
[2025-02-08 15:28:54,997][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:28:55,001][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:28:55,021][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 22
Lang Goal: pack the spiderman figure in the brown box
Total Reward: 0.306 | Done: False

[2025-02-08 15:29:32,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:29:32,775][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:29:32,796][root][INFO] - Image embeddings computed.
[2025-02-08 15:29:49,346][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:29:49,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:29:49,372][root][INFO] - Image embeddings computed.
[2025-02-08 15:29:53,561][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:29:53,565][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:29:53,585][root][INFO] - Image embeddings computed.
[2025-02-08 15:29:57,768][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:29:57,772][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:29:57,792][root][INFO] - Image embeddings computed.
[2025-02-08 15:30:01,976][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:01,984][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:02,008][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 23
Lang Goal: pack the spiderman figure in the brown box
Total Reward: 0.308 | Done: False

[2025-02-08 15:30:44,535][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:44,637][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:44,658][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:01,389][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:01,494][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:01,516][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:05,705][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:05,815][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:05,837][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:10,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:10,111][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:10,133][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:14,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:14,449][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:14,475][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 26
Lang Goal: pack the spiderman figure in the brown box
Total Reward: 0.319 | Done: False

Mean: 0.406019069664903 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 31/50
[2025-02-08 15:32:10,776][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:10,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:10,808][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:27,775][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:27,801][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:27,822][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:31,980][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:31,984][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:32,005][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:36,176][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:36,180][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:36,200][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:40,397][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:40,401][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:40,422][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 20
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 15:33:24,281][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:24,386][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:24,408][root][INFO] - Image embeddings computed.
[2025-02-08 15:33:41,277][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:41,377][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:41,399][root][INFO] - Image embeddings computed.
[2025-02-08 15:33:45,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:45,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:45,686][root][INFO] - Image embeddings computed.
[2025-02-08 15:33:49,876][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:49,984][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:50,005][root][INFO] - Image embeddings computed.
[2025-02-08 15:33:54,160][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:54,265][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:54,286][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 30
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 15:34:40,262][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:34:40,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:34:40,295][root][INFO] - Image embeddings computed.
[2025-02-08 15:34:57,066][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:34:57,075][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:34:57,095][root][INFO] - Image embeddings computed.
[2025-02-08 15:35:01,276][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:01,285][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:01,305][root][INFO] - Image embeddings computed.
[2025-02-08 15:35:05,487][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:05,496][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:05,517][root][INFO] - Image embeddings computed.
[2025-02-08 15:35:09,669][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:09,679][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:09,700][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 26
Lang Goal: pack the pepsi gold caffeine free box in the brown box
Total Reward: 0.750 | Done: False

[2025-02-08 15:35:48,736][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:48,749][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:48,783][root][INFO] - Image embeddings computed.
[2025-02-08 15:36:05,283][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:05,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:05,307][root][INFO] - Image embeddings computed.
[2025-02-08 15:36:09,477][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:09,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:09,504][root][INFO] - Image embeddings computed.
[2025-02-08 15:36:13,675][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:13,683][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:13,703][root][INFO] - Image embeddings computed.
[2025-02-08 15:36:17,887][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:17,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:17,919][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.771 | Done: False

[2025-02-08 15:36:58,645][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:58,658][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:58,689][root][INFO] - Image embeddings computed.
[2025-02-08 15:37:15,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:15,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:15,799][root][INFO] - Image embeddings computed.
[2025-02-08 15:37:19,981][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:19,991][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:20,011][root][INFO] - Image embeddings computed.
[2025-02-08 15:37:24,226][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:24,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:24,258][root][INFO] - Image embeddings computed.
[2025-02-08 15:37:28,387][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:28,497][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:28,519][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 27
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.772 | Done: False

Mean: 0.4178239286102189 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 32/50
[2025-02-08 15:38:22,972][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:38:23,055][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:38:23,076][root][INFO] - Image embeddings computed.
[2025-02-08 15:38:39,876][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:38:39,881][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:38:39,902][root][INFO] - Image embeddings computed.
[2025-02-08 15:38:44,048][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:38:44,058][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:38:44,078][root][INFO] - Image embeddings computed.
[2025-02-08 15:38:48,222][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:38:48,232][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:38:48,252][root][INFO] - Image embeddings computed.
[2025-02-08 15:38:52,411][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:38:52,420][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:38:52,441][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 14
Lang Goal: pack the red cup in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 15:39:30,952][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:30,963][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:30,984][root][INFO] - Image embeddings computed.
[2025-02-08 15:39:47,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:47,870][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:47,890][root][INFO] - Image embeddings computed.
[2025-02-08 15:39:52,042][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:52,051][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:52,072][root][INFO] - Image embeddings computed.
[2025-02-08 15:39:56,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:56,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:56,260][root][INFO] - Image embeddings computed.
[2025-02-08 15:40:00,433][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:40:00,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:40:00,462][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 16
Lang Goal: pack the honey dipper in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.4360169308411496 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 33/50
[2025-02-08 15:40:48,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:40:48,714][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:40:48,735][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:05,372][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:05,379][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:05,400][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:09,562][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:09,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:09,589][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:13,744][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:13,753][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:13,773][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:17,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:17,944][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:17,964][root][INFO] - Image embeddings computed.
The number of original masks: 50
The number of filtered masks: 21
Lang Goal: pack the toy school bus in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:42:04,287][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:04,390][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:04,411][root][INFO] - Image embeddings computed.
[2025-02-08 15:42:20,969][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:21,089][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:21,109][root][INFO] - Image embeddings computed.
[2025-02-08 15:42:25,276][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:25,372][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:25,393][root][INFO] - Image embeddings computed.
[2025-02-08 15:42:29,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:29,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:29,669][root][INFO] - Image embeddings computed.
[2025-02-08 15:42:33,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:33,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:33,947][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 17
Lang Goal: pack the toy school bus in the brown box
Total Reward: 0.496 | Done: False

[2025-02-08 15:43:16,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:16,310][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:16,331][root][INFO] - Image embeddings computed.
[2025-02-08 15:43:32,672][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:32,770][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:32,790][root][INFO] - Image embeddings computed.
[2025-02-08 15:43:36,946][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:37,042][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:37,063][root][INFO] - Image embeddings computed.
[2025-02-08 15:43:41,219][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:41,316][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:41,342][root][INFO] - Image embeddings computed.
[2025-02-08 15:43:45,508][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:45,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:45,636][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 25
Lang Goal: pack the bull figure in the brown box
Total Reward: 0.781 | Done: False

Mean: 0.4464785389974784 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 34/50
[2025-02-08 15:44:48,144][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:44:48,273][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:44:48,294][root][INFO] - Image embeddings computed.
[2025-02-08 15:45:04,994][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:05,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:05,112][root][INFO] - Image embeddings computed.
[2025-02-08 15:45:09,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:09,362][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:09,382][root][INFO] - Image embeddings computed.
[2025-02-08 15:45:13,529][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:13,658][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:13,678][root][INFO] - Image embeddings computed.
[2025-02-08 15:45:17,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:17,945][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:17,965][root][INFO] - Image embeddings computed.
The number of original masks: 47
The number of filtered masks: 36
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.326 | Done: False

[2025-02-08 15:45:59,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:59,567][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:59,588][root][INFO] - Image embeddings computed.
[2025-02-08 15:46:15,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:15,928][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:15,949][root][INFO] - Image embeddings computed.
[2025-02-08 15:46:20,115][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:20,118][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:20,139][root][INFO] - Image embeddings computed.
[2025-02-08 15:46:24,292][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:24,296][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:24,316][root][INFO] - Image embeddings computed.
[2025-02-08 15:46:28,527][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:28,531][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:28,552][root][INFO] - Image embeddings computed.
The number of original masks: 48
The number of filtered masks: 34
Lang Goal: pack the red cup in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 15:47:14,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:47:15,029][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:47:15,051][root][INFO] - Image embeddings computed.
[2025-02-08 15:47:31,686][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:47:31,784][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:47:31,805][root][INFO] - Image embeddings computed.
[2025-02-08 15:47:35,961][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:47:36,060][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:47:36,081][root][INFO] - Image embeddings computed.
[2025-02-08 15:47:40,245][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:47:40,340][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:47:40,361][root][INFO] - Image embeddings computed.
[2025-02-08 15:47:44,566][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:47:44,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:47:44,687][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 33
Lang Goal: pack the red cup in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 15:48:28,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:28,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:28,410][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:45,113][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:45,211][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:45,232][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:49,389][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:49,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:49,504][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:53,679][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:53,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:53,793][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:58,012][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:58,108][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:58,135][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 32
Lang Goal: pack the red cup in the brown box
Total Reward: 0.333 | Done: False

Mean: 0.44315073883088596 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 35/50
[2025-02-08 15:49:51,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:49:51,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:49:51,587][root][INFO] - Image embeddings computed.
[2025-02-08 15:50:08,265][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:08,365][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:08,386][root][INFO] - Image embeddings computed.
[2025-02-08 15:50:12,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:12,654][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:12,675][root][INFO] - Image embeddings computed.
[2025-02-08 15:50:16,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:16,936][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:16,957][root][INFO] - Image embeddings computed.
[2025-02-08 15:50:21,101][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:21,201][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:21,222][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: pack the toy train in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 15:51:07,519][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:51:07,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:51:07,640][root][INFO] - Image embeddings computed.
[2025-02-08 15:51:24,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:51:24,231][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:51:24,252][root][INFO] - Image embeddings computed.
[2025-02-08 15:51:28,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:51:28,513][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:51:28,533][root][INFO] - Image embeddings computed.
[2025-02-08 15:51:32,703][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:51:32,800][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:51:32,821][root][INFO] - Image embeddings computed.
[2025-02-08 15:51:36,956][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:51:36,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:51:36,990][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 16
Lang Goal: pack the nintendo 3ds in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 15:52:23,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:23,699][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:23,719][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:40,095][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:40,194][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:40,215][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:44,370][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:44,465][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:44,486][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:48,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:48,755][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:48,776][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:52,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:53,007][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:53,027][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 19
Lang Goal: pack the nintendo 3ds in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.44477500343571774 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 36/50
[2025-02-08 15:53:48,319][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:53:48,331][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:53:48,352][root][INFO] - Image embeddings computed.
[2025-02-08 15:54:05,411][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:54:05,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:54:05,439][root][INFO] - Image embeddings computed.
[2025-02-08 15:54:09,611][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:54:09,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:54:09,640][root][INFO] - Image embeddings computed.
[2025-02-08 15:54:13,808][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:54:13,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:54:13,837][root][INFO] - Image embeddings computed.
[2025-02-08 15:54:17,972][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:54:17,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:54:17,998][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: pack the android toy in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 15:55:05,414][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:05,514][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:05,535][root][INFO] - Image embeddings computed.
[2025-02-08 15:55:22,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:22,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:22,288][root][INFO] - Image embeddings computed.
[2025-02-08 15:55:26,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:26,556][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:26,577][root][INFO] - Image embeddings computed.
[2025-02-08 15:55:30,752][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:30,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:30,867][root][INFO] - Image embeddings computed.
[2025-02-08 15:55:35,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:35,122][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:35,143][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.979 | Done: False

[2025-02-08 15:56:22,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:22,420][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:22,441][root][INFO] - Image embeddings computed.
[2025-02-08 15:56:38,865][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:38,961][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:38,983][root][INFO] - Image embeddings computed.
[2025-02-08 15:56:43,147][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:43,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:43,261][root][INFO] - Image embeddings computed.
[2025-02-08 15:56:47,426][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:47,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:47,463][root][INFO] - Image embeddings computed.
[2025-02-08 15:56:51,608][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:51,714][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:51,739][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.979 | Done: False

Mean: 0.45961921630324415 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 37/50
[2025-02-08 15:57:54,708][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:57:54,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:57:54,834][root][INFO] - Image embeddings computed.
[2025-02-08 15:58:11,751][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:58:11,849][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:58:11,871][root][INFO] - Image embeddings computed.
[2025-02-08 15:58:16,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:58:16,136][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:58:16,157][root][INFO] - Image embeddings computed.
[2025-02-08 15:58:20,335][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:58:20,429][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:58:20,449][root][INFO] - Image embeddings computed.
[2025-02-08 15:58:24,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:58:24,696][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:58:24,717][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 21
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:59:15,263][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:15,373][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:15,395][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:32,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:32,385][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:32,406][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:36,552][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:36,651][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:36,673][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:40,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:40,946][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:40,967][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:45,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:45,229][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:45,250][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 21
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4471970753220754 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 38/50
[2025-02-08 16:00:37,192][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:37,296][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:37,316][root][INFO] - Image embeddings computed.
[2025-02-08 16:00:53,777][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:53,875][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:53,895][root][INFO] - Image embeddings computed.
[2025-02-08 16:00:58,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:58,138][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:58,158][root][INFO] - Image embeddings computed.
[2025-02-08 16:01:02,306][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:02,400][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:02,420][root][INFO] - Image embeddings computed.
[2025-02-08 16:01:06,569][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:06,584][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:06,605][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 13
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 16:01:49,836][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:49,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:49,861][root][INFO] - Image embeddings computed.
[2025-02-08 16:02:06,301][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:02:06,310][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:02:06,330][root][INFO] - Image embeddings computed.
[2025-02-08 16:02:10,470][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:02:10,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:02:10,495][root][INFO] - Image embeddings computed.
[2025-02-08 16:02:14,665][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:02:14,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:02:14,690][root][INFO] - Image embeddings computed.
[2025-02-08 16:02:18,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:02:18,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:02:18,875][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 13
Lang Goal: pack the red and white striped towel in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.46174452070833655 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 39/50
[2025-02-08 16:03:20,034][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:20,138][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:20,158][root][INFO] - Image embeddings computed.
[2025-02-08 16:03:37,032][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:37,136][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:37,156][root][INFO] - Image embeddings computed.
[2025-02-08 16:03:41,294][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:41,409][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:41,430][root][INFO] - Image embeddings computed.
[2025-02-08 16:03:45,610][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:45,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:45,728][root][INFO] - Image embeddings computed.
[2025-02-08 16:03:49,854][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:49,951][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:49,972][root][INFO] - Image embeddings computed.
The number of original masks: 47
The number of filtered masks: 30
Lang Goal: pack the spiderman figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 16:04:36,816][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:36,821][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:36,841][root][INFO] - Image embeddings computed.
[2025-02-08 16:04:53,290][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:53,300][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:53,320][root][INFO] - Image embeddings computed.
[2025-02-08 16:04:57,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:57,479][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:57,499][root][INFO] - Image embeddings computed.
[2025-02-08 16:05:01,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:01,701][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:01,722][root][INFO] - Image embeddings computed.
[2025-02-08 16:05:05,867][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:05,873][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:05,893][root][INFO] - Image embeddings computed.
The number of original masks: 54
The number of filtered masks: 35
Lang Goal: pack the hammer in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 16:05:53,065][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:53,070][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:53,091][root][INFO] - Image embeddings computed.
[2025-02-08 16:06:09,613][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:06:09,621][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:06:09,641][root][INFO] - Image embeddings computed.
[2025-02-08 16:06:13,807][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:06:13,815][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:06:13,835][root][INFO] - Image embeddings computed.
[2025-02-08 16:06:18,023][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:06:18,028][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:06:18,048][root][INFO] - Image embeddings computed.
[2025-02-08 16:06:22,191][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:06:22,196][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:06:22,216][root][INFO] - Image embeddings computed.
The number of original masks: 51
The number of filtered masks: 33
Lang Goal: pack the hammer in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.46272543043376385 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 40/50
[2025-02-08 16:07:18,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:07:18,919][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:07:18,940][root][INFO] - Image embeddings computed.
[2025-02-08 16:07:35,740][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:07:35,747][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:07:35,767][root][INFO] - Image embeddings computed.
[2025-02-08 16:07:39,921][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:07:39,925][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:07:39,946][root][INFO] - Image embeddings computed.
[2025-02-08 16:07:44,107][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:07:44,116][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:07:44,137][root][INFO] - Image embeddings computed.
[2025-02-08 16:07:48,268][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:07:48,272][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:07:48,293][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 22
Lang Goal: pack the light brown boot with golden laces in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 16:08:39,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:08:39,363][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:08:39,385][root][INFO] - Image embeddings computed.
[2025-02-08 16:08:55,943][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:08:55,948][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:08:55,970][root][INFO] - Image embeddings computed.
[2025-02-08 16:09:00,122][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:09:00,131][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:09:00,152][root][INFO] - Image embeddings computed.
[2025-02-08 16:09:04,318][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:09:04,323][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:09:04,344][root][INFO] - Image embeddings computed.
[2025-02-08 16:09:08,488][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:09:08,494][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:09:08,515][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 21
Lang Goal: pack the light brown boot with golden laces in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.47615729467291973 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 41/50
[2025-02-08 16:10:08,852][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:08,951][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:08,972][root][INFO] - Image embeddings computed.
[2025-02-08 16:10:25,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:25,919][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:25,940][root][INFO] - Image embeddings computed.
[2025-02-08 16:10:30,088][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:30,222][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:30,243][root][INFO] - Image embeddings computed.
[2025-02-08 16:10:34,399][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:34,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:34,537][root][INFO] - Image embeddings computed.
[2025-02-08 16:10:38,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:38,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:38,847][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 13
Lang Goal: pack the black boot with leopard print in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 16:11:25,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:25,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:25,039][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:41,316][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:41,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:41,345][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:45,502][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:45,512][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:45,532][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:49,667][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:49,678][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:49,699][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:53,830][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:53,839][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:53,859][root][INFO] - Image embeddings computed.
The number of original masks: 13
The number of filtered masks: 11
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.48893394602236073 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 42/50
[2025-02-08 16:12:51,697][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:12:51,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:12:51,732][root][INFO] - Image embeddings computed.
[2025-02-08 16:13:08,459][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:08,472][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:08,492][root][INFO] - Image embeddings computed.
[2025-02-08 16:13:12,652][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:12,661][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:12,681][root][INFO] - Image embeddings computed.
[2025-02-08 16:13:16,867][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:16,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:16,897][root][INFO] - Image embeddings computed.
[2025-02-08 16:13:21,041][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:21,049][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:21,069][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 19
Lang Goal: pack the unicorn toy in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 16:14:07,374][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:07,388][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:07,409][root][INFO] - Image embeddings computed.
[2025-02-08 16:14:23,881][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:23,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:23,910][root][INFO] - Image embeddings computed.
[2025-02-08 16:14:28,069][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:28,077][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:28,097][root][INFO] - Image embeddings computed.
[2025-02-08 16:14:32,282][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:32,290][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:32,310][root][INFO] - Image embeddings computed.
[2025-02-08 16:14:36,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:36,465][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:36,486][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 16
Lang Goal: pack the pepsi wild cherry box in the brown box
Total Reward: 0.642 | Done: False

[2025-02-08 16:15:23,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:23,803][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:23,824][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:40,155][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:40,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:40,180][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:44,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:44,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:44,368][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:48,552][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:48,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:48,582][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:52,725][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:52,733][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:52,753][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 20
Lang Goal: pack the pepsi wild cherry box in the brown box
Total Reward: 0.639 | Done: False

[2025-02-08 16:16:39,982][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:16:39,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:16:40,006][root][INFO] - Image embeddings computed.
[2025-02-08 16:16:56,434][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:16:56,438][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:16:56,459][root][INFO] - Image embeddings computed.
[2025-02-08 16:17:00,623][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:17:00,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:17:00,648][root][INFO] - Image embeddings computed.
[2025-02-08 16:17:04,824][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:17:04,850][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:17:04,882][root][INFO] - Image embeddings computed.
[2025-02-08 16:17:09,023][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:17:09,031][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:17:09,052][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: pack the pepsi wild cherry box in the brown box
Total Reward: 0.667 | Done: False

Mean: 0.4931656774662728 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 43/50
[2025-02-08 16:18:09,143][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:09,190][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:09,211][root][INFO] - Image embeddings computed.
[2025-02-08 16:18:25,884][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:25,893][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:25,914][root][INFO] - Image embeddings computed.
[2025-02-08 16:18:30,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:30,078][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:30,098][root][INFO] - Image embeddings computed.
[2025-02-08 16:18:34,292][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:34,301][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:34,321][root][INFO] - Image embeddings computed.
[2025-02-08 16:18:38,428][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:38,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:38,456][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 26
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 16:19:26,535][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:26,632][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:26,653][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:43,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:43,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:43,482][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:47,629][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:47,729][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:47,749][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:51,956][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:52,079][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:52,100][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:56,199][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:56,297][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:56,317][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 18
Lang Goal: pack the black and blue sneakers in the brown box
Total Reward: 0.969 | Done: False

[2025-02-08 16:20:44,565][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:20:44,578][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:20:44,599][root][INFO] - Image embeddings computed.
[2025-02-08 16:21:01,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:21:01,225][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:21:01,246][root][INFO] - Image embeddings computed.
[2025-02-08 16:21:05,403][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:21:05,407][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:21:05,427][root][INFO] - Image embeddings computed.
[2025-02-08 16:21:09,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:21:09,640][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:21:09,660][root][INFO] - Image embeddings computed.
[2025-02-08 16:21:13,767][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:21:13,776][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:21:13,800][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 20
Lang Goal: pack the black and blue sneakers in the brown box
Total Reward: 0.969 | Done: False

Mean: 0.504225777990313 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 44/50
[2025-02-08 16:22:13,672][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:13,676][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:13,697][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:30,354][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:30,358][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:30,379][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:34,553][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:34,562][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:34,582][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:38,732][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:38,740][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:38,760][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:42,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:42,923][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:42,943][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 26
Lang Goal: pack the office depot box in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 16:23:31,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:31,386][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:31,407][root][INFO] - Image embeddings computed.
[2025-02-08 16:23:48,049][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:48,053][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:48,073][root][INFO] - Image embeddings computed.
[2025-02-08 16:23:52,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:52,254][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:52,275][root][INFO] - Image embeddings computed.
[2025-02-08 16:23:56,431][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:56,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:56,456][root][INFO] - Image embeddings computed.
[2025-02-08 16:24:00,620][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:24:00,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:24:00,645][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 21
Lang Goal: pack the pepsi next box in the brown box
Total Reward: 0.812 | Done: False

[2025-02-08 16:24:48,887][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:24:48,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:24:49,010][root][INFO] - Image embeddings computed.
[2025-02-08 16:25:05,688][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:25:05,802][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:25:05,822][root][INFO] - Image embeddings computed.
[2025-02-08 16:25:09,973][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:25:10,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:25:10,086][root][INFO] - Image embeddings computed.
[2025-02-08 16:25:14,248][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:25:14,341][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:25:14,361][root][INFO] - Image embeddings computed.
[2025-02-08 16:25:18,531][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:25:18,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:25:18,645][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 22
Lang Goal: pack the pepsi next box in the brown box
Total Reward: 0.893 | Done: False

Mean: 0.5130667640965938 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 45/50
[2025-02-08 16:26:19,342][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:19,346][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:19,367][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:35,806][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:35,815][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:35,840][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:39,987][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:39,995][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:40,015][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:44,200][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:44,204][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:44,224][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:48,396][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:48,400][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:48,421][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 18
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 16:27:37,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:27:37,774][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:27:37,795][root][INFO] - Image embeddings computed.
[2025-02-08 16:27:54,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:27:54,520][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:27:54,541][root][INFO] - Image embeddings computed.
[2025-02-08 16:27:58,701][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:27:58,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:27:58,732][root][INFO] - Image embeddings computed.
[2025-02-08 16:28:02,910][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:28:02,914][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:28:02,935][root][INFO] - Image embeddings computed.
[2025-02-08 16:28:07,116][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:28:07,120][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:28:07,141][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 20
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 16:28:58,014][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:28:58,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:28:58,048][root][INFO] - Image embeddings computed.
[2025-02-08 16:29:14,527][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:29:14,537][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:29:14,558][root][INFO] - Image embeddings computed.
[2025-02-08 16:29:18,709][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:29:18,717][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:29:18,739][root][INFO] - Image embeddings computed.
[2025-02-08 16:29:22,905][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:29:22,910][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:29:22,931][root][INFO] - Image embeddings computed.
[2025-02-08 16:29:27,106][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:29:27,110][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:29:27,131][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 21
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 16:30:17,546][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:30:17,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:30:17,587][root][INFO] - Image embeddings computed.
[2025-02-08 16:30:33,987][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:30:33,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:30:34,017][root][INFO] - Image embeddings computed.
[2025-02-08 16:30:38,168][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:30:38,176][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:30:38,197][root][INFO] - Image embeddings computed.
[2025-02-08 16:30:42,375][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:30:42,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:30:42,401][root][INFO] - Image embeddings computed.
[2025-02-08 16:30:46,566][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:30:46,571][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:30:46,593][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 25
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 16:31:37,238][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:37,251][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:37,272][root][INFO] - Image embeddings computed.
[2025-02-08 16:31:54,133][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:54,141][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:54,162][root][INFO] - Image embeddings computed.
[2025-02-08 16:31:58,318][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:58,326][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:58,346][root][INFO] - Image embeddings computed.
[2025-02-08 16:32:02,523][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:02,532][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:02,552][root][INFO] - Image embeddings computed.
[2025-02-08 16:32:06,733][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:06,737][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:06,758][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 22
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 16:32:59,466][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:59,480][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:59,501][root][INFO] - Image embeddings computed.
[2025-02-08 16:33:16,213][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:33:16,222][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:33:16,243][root][INFO] - Image embeddings computed.
[2025-02-08 16:33:20,413][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:33:20,421][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:33:20,442][root][INFO] - Image embeddings computed.
[2025-02-08 16:33:24,611][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:33:24,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:33:24,640][root][INFO] - Image embeddings computed.
[2025-02-08 16:33:28,814][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:33:28,818][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:33:28,839][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 20
Lang Goal: pack the red and white striped towel in the brown box
Total Reward: 0.400 | Done: False

Mean: 0.5105541693388916 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 46/50
[2025-02-08 16:34:28,529][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:34:28,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:34:28,646][root][INFO] - Image embeddings computed.
[2025-02-08 16:34:45,298][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:34:45,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:34:45,416][root][INFO] - Image embeddings computed.
[2025-02-08 16:34:49,555][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:34:49,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:34:49,668][root][INFO] - Image embeddings computed.
[2025-02-08 16:34:53,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:34:53,918][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:34:53,938][root][INFO] - Image embeddings computed.
[2025-02-08 16:34:58,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:34:58,184][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:34:58,205][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 19
Lang Goal: pack the alarm clock in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.521194296092394 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 47/50
[2025-02-08 16:35:58,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:35:58,204][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:35:58,225][root][INFO] - Image embeddings computed.
[2025-02-08 16:36:14,850][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:14,945][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:14,966][root][INFO] - Image embeddings computed.
[2025-02-08 16:36:19,105][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:19,198][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:19,219][root][INFO] - Image embeddings computed.
[2025-02-08 16:36:23,381][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:23,480][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:23,501][root][INFO] - Image embeddings computed.
[2025-02-08 16:36:27,648][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:27,742][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:27,763][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 20
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 16:37:24,986][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:37:25,087][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:37:25,108][root][INFO] - Image embeddings computed.
[2025-02-08 16:37:41,740][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:37:41,834][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:37:41,855][root][INFO] - Image embeddings computed.
[2025-02-08 16:37:46,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:37:46,101][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:37:46,122][root][INFO] - Image embeddings computed.
[2025-02-08 16:37:50,277][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:37:50,459][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:37:50,480][root][INFO] - Image embeddings computed.
[2025-02-08 16:37:54,625][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:37:54,724][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:37:54,745][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 16:38:51,871][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:38:51,974][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:38:51,995][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:08,668][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:08,763][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:08,784][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:12,933][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:13,050][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:13,071][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:17,225][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:17,375][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:17,396][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:21,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:21,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:21,668][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 20
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.5101050557500026 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 48/50
[2025-02-08 16:40:32,998][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:40:33,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:40:33,119][root][INFO] - Image embeddings computed.
[2025-02-08 16:40:50,030][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:40:50,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:40:50,203][root][INFO] - Image embeddings computed.
[2025-02-08 16:40:54,335][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:40:54,452][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:40:54,472][root][INFO] - Image embeddings computed.
[2025-02-08 16:40:58,584][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:40:58,684][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:40:58,705][root][INFO] - Image embeddings computed.
[2025-02-08 16:41:02,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:41:03,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:41:03,027][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 16:41:58,527][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:41:58,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:41:58,562][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:15,044][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:15,052][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:15,072][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:19,201][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:19,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:19,230][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:23,352][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:23,361][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:23,381][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:27,587][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:27,596][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:27,616][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 19
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 16:43:21,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:21,822][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:21,843][root][INFO] - Image embeddings computed.
[2025-02-08 16:43:38,177][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:38,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:38,301][root][INFO] - Image embeddings computed.
[2025-02-08 16:43:42,428][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:42,527][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:42,547][root][INFO] - Image embeddings computed.
[2025-02-08 16:43:46,684][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:46,781][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:46,802][root][INFO] - Image embeddings computed.
[2025-02-08 16:43:51,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:51,101][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:51,121][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 18
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4994778670885442 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 49/50
[2025-02-08 16:44:54,086][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:44:54,173][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:44:54,194][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:10,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:10,765][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:10,786][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:14,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:14,945][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:14,965][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:19,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:19,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:19,142][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:23,281][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:23,295][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:23,315][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 9
Lang Goal: pack the bull figure in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 16:46:17,998][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:18,012][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:18,034][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:34,509][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:34,518][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:34,540][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:38,679][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:38,689][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:38,710][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:42,859][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:42,864][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:42,885][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:47,029][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:47,035][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:47,056][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: pack the mario figure in the brown box
Total Reward: 0.667 | Done: False

[2025-02-08 16:47:43,195][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:47:43,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:47:43,232][root][INFO] - Image embeddings computed.
[2025-02-08 16:47:59,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:47:59,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:47:59,691][root][INFO] - Image embeddings computed.
[2025-02-08 16:48:03,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:48:03,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:48:03,991][root][INFO] - Image embeddings computed.
[2025-02-08 16:48:08,139][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:48:08,234][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:48:08,255][root][INFO] - Image embeddings computed.
[2025-02-08 16:48:12,400][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:48:12,474][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:48:12,495][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 11
Lang Goal: pack the black shoe with green stripes in the brown box
Total Reward: 0.933 | Done: False

[2025-02-08 16:49:11,053][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:11,155][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:11,175][root][INFO] - Image embeddings computed.
[2025-02-08 16:49:27,362][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:27,459][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:27,479][root][INFO] - Image embeddings computed.
[2025-02-08 16:49:31,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:31,719][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:31,740][root][INFO] - Image embeddings computed.
[2025-02-08 16:49:35,893][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:35,994][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:36,014][root][INFO] - Image embeddings computed.
[2025-02-08 16:49:40,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:40,248][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:40,269][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: pack the black shoe with green stripes in the brown box
Total Reward: 0.706 | Done: False

Mean: 0.5036977065357168 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
Test: 50/50
[2025-02-08 16:50:49,430][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:50:49,540][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:50:49,562][root][INFO] - Image embeddings computed.
[2025-02-08 16:51:06,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:51:06,428][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:51:06,450][root][INFO] - Image embeddings computed.
[2025-02-08 16:51:10,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:51:10,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:51:10,743][root][INFO] - Image embeddings computed.
[2025-02-08 16:51:14,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:51:14,981][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:51:15,003][root][INFO] - Image embeddings computed.
[2025-02-08 16:51:19,147][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:51:19,245][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:51:19,267][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: pack the black shoe with green stripes in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.5136237524050025 | Task: packing-seen-google-objects-seq | Ckpt: steps=00040-val_loss=0.00019566.ckpt
[2025-02-08 16:52:20,268][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 16:52:20,419][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 16:52:27,096][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-08 16:52:33,979][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 16:52:34,148][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 16:52:40,670][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-08 16:52:50,214][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 16:52:50,400][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 16:52:57,137][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-08 16:53:05,144][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 16:53:05,334][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 16:53:11,945][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: packing-seen-google-objects-seq-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/packing-seen-google-objects-seq-clipfit-n10-train/checkpoints/steps=00080-val_loss=0.00018048.ckpt
Test: 1/50
[2025-02-08 16:54:04,105][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:04,207][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:04,231][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:21,293][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:21,387][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:21,407][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:25,596][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:25,689][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:25,710][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:29,920][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:29,988][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:30,009][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:34,238][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:34,248][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:34,269][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 26
Lang Goal: pack the scissors in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 16:55:28,956][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:55:28,960][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:55:28,981][root][INFO] - Image embeddings computed.
[2025-02-08 16:55:45,755][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:55:45,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:55:45,781][root][INFO] - Image embeddings computed.
[2025-02-08 16:55:49,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:55:49,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:55:50,016][root][INFO] - Image embeddings computed.
[2025-02-08 16:55:54,242][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:55:54,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:55:54,273][root][INFO] - Image embeddings computed.
[2025-02-08 16:55:58,514][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:55:58,524][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:55:58,544][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 23
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.400 | Done: False

[2025-02-08 16:56:54,129][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:56:54,141][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:56:54,161][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:10,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:10,966][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:10,987][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:15,202][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:15,206][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:15,226][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:19,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:19,485][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:19,506][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:23,753][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:23,763][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:23,783][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 27
Lang Goal: pack the lion figure in the brown box
Total Reward: 0.600 | Done: False

[2025-02-08 16:58:20,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:58:20,599][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:58:20,620][root][INFO] - Image embeddings computed.
[2025-02-08 16:58:37,307][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:58:37,312][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:58:37,333][root][INFO] - Image embeddings computed.
[2025-02-08 16:58:41,553][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:58:41,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:58:41,582][root][INFO] - Image embeddings computed.
[2025-02-08 16:58:45,807][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:58:45,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:58:45,836][root][INFO] - Image embeddings computed.
[2025-02-08 16:58:50,087][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:58:50,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:58:50,116][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 22
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.600 | Done: False

[2025-02-08 16:59:49,233][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:59:49,345][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:59:49,367][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:05,924][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:06,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:06,044][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:10,266][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:10,377][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:10,406][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:14,645][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:14,743][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:14,765][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:19,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:19,105][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:19,126][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 25
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.600 | Done: False

[2025-02-08 17:01:22,458][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:22,577][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:22,598][root][INFO] - Image embeddings computed.
[2025-02-08 17:01:39,182][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:39,291][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:39,312][root][INFO] - Image embeddings computed.
[2025-02-08 17:01:43,526][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:43,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:43,645][root][INFO] - Image embeddings computed.
[2025-02-08 17:01:47,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:47,971][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:47,992][root][INFO] - Image embeddings computed.
[2025-02-08 17:01:52,243][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:52,336][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:52,357][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 22
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.600 | Done: False

Mean: 0.6000000000000001 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 2/50
[2025-02-08 17:03:04,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:04,562][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:04,584][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:21,813][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:21,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:21,932][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:26,133][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:26,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:26,288][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:30,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:30,580][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:30,602][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:34,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:34,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:34,921][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 21
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:04:34,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:04:34,646][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:04:34,667][root][INFO] - Image embeddings computed.
[2025-02-08 17:04:51,933][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:04:52,027][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:04:52,051][root][INFO] - Image embeddings computed.
[2025-02-08 17:04:56,257][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:04:56,386][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:04:56,407][root][INFO] - Image embeddings computed.
[2025-02-08 17:05:00,591][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:05:00,738][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:05:00,759][root][INFO] - Image embeddings computed.
[2025-02-08 17:05:04,961][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:05:05,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:05:05,094][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 20
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:06:07,873][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:07,974][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:07,995][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:24,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:24,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:25,008][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:29,205][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:29,325][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:29,347][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:33,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:33,628][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:33,650][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:37,854][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:37,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:37,986][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 23
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:07:42,974][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:07:42,987][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:07:43,013][root][INFO] - Image embeddings computed.
[2025-02-08 17:07:59,942][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:07:59,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:07:59,973][root][INFO] - Image embeddings computed.
[2025-02-08 17:08:04,175][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:08:04,184][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:08:04,205][root][INFO] - Image embeddings computed.
[2025-02-08 17:08:08,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:08:08,401][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:08:08,422][root][INFO] - Image embeddings computed.
[2025-02-08 17:08:12,621][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:08:12,631][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:08:12,651][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 23
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:09:10,389][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:10,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:10,439][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:27,270][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:27,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:27,389][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:31,593][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:31,706][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:31,727][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:35,922][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:36,016][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:36,037][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:40,234][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:40,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:40,359][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 24
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.30000000000000004 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 3/50
[2025-02-08 17:10:56,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:10:56,477][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:10:56,498][root][INFO] - Image embeddings computed.
[2025-02-08 17:11:13,353][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:11:13,458][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:11:13,479][root][INFO] - Image embeddings computed.
[2025-02-08 17:11:17,671][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:11:17,820][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:11:17,841][root][INFO] - Image embeddings computed.
[2025-02-08 17:11:22,062][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:11:22,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:11:22,182][root][INFO] - Image embeddings computed.
[2025-02-08 17:11:26,391][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:11:26,485][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:11:26,506][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 17
Lang Goal: pack the can opener in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.5333333333333333 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 4/50
[2025-02-08 17:12:37,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:37,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:37,670][root][INFO] - Image embeddings computed.
[2025-02-08 17:12:54,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:54,646][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:54,667][root][INFO] - Image embeddings computed.
[2025-02-08 17:12:58,859][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:58,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:58,974][root][INFO] - Image embeddings computed.
[2025-02-08 17:13:03,208][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:13:03,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:13:03,328][root][INFO] - Image embeddings computed.
[2025-02-08 17:13:07,525][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:13:07,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:13:07,642][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: pack the office depot box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:14:12,815][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:14:12,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:14:12,937][root][INFO] - Image embeddings computed.
[2025-02-08 17:14:29,785][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:14:29,889][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:14:29,910][root][INFO] - Image embeddings computed.
[2025-02-08 17:14:34,122][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:14:34,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:14:34,237][root][INFO] - Image embeddings computed.
[2025-02-08 17:14:38,463][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:14:38,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:14:38,588][root][INFO] - Image embeddings computed.
[2025-02-08 17:14:42,800][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:14:42,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:14:42,921][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 22
Lang Goal: pack the office depot box in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 5/50
[2025-02-08 17:15:58,036][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:15:58,169][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:15:58,190][root][INFO] - Image embeddings computed.
[2025-02-08 17:16:14,987][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:16:15,081][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:16:15,102][root][INFO] - Image embeddings computed.
[2025-02-08 17:16:19,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:16:19,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:16:19,468][root][INFO] - Image embeddings computed.
[2025-02-08 17:16:23,687][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:16:23,787][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:16:23,809][root][INFO] - Image embeddings computed.
[2025-02-08 17:16:28,012][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:16:28,104][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:16:28,126][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:17:27,137][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:17:27,251][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:17:27,272][root][INFO] - Image embeddings computed.
[2025-02-08 17:17:43,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:17:44,005][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:17:44,026][root][INFO] - Image embeddings computed.
[2025-02-08 17:17:48,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:17:48,355][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:17:48,376][root][INFO] - Image embeddings computed.
[2025-02-08 17:17:52,592][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:17:52,685][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:17:52,706][root][INFO] - Image embeddings computed.
[2025-02-08 17:17:56,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:17:57,007][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:17:57,028][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 19
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:18:56,176][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:18:56,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:18:56,226][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:12,771][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:12,775][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:12,796][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:17,032][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:17,041][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:17,062][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:21,281][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:21,285][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:21,306][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:25,513][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:25,516][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:25,537][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:20:26,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:20:26,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:20:26,039][root][INFO] - Image embeddings computed.
[2025-02-08 17:20:42,790][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:20:42,882][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:20:42,903][root][INFO] - Image embeddings computed.
[2025-02-08 17:20:47,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:20:47,238][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:20:47,259][root][INFO] - Image embeddings computed.
[2025-02-08 17:20:51,489][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:20:51,582][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:20:51,603][root][INFO] - Image embeddings computed.
[2025-02-08 17:20:55,822][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:20:55,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:20:55,936][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 22
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:22:00,168][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:00,173][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:00,194][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:16,739][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:16,743][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:16,764][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:20,996][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:21,000][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:21,021][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:25,260][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:25,264][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:25,285][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:29,498][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:29,502][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:29,523][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 21
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:23:35,452][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:23:35,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:23:35,574][root][INFO] - Image embeddings computed.
[2025-02-08 17:23:52,328][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:23:52,432][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:23:52,454][root][INFO] - Image embeddings computed.
[2025-02-08 17:23:56,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:23:56,817][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:23:56,844][root][INFO] - Image embeddings computed.
[2025-02-08 17:24:01,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:24:01,166][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:24:01,188][root][INFO] - Image embeddings computed.
[2025-02-08 17:24:05,393][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:24:05,509][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:24:05,531][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.32 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 6/50
[2025-02-08 17:25:18,027][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:18,040][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:18,066][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:34,980][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:34,990][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:35,011][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:39,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:39,227][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:39,248][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:43,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:43,479][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:43,500][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:47,711][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:47,722][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:47,743][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:26:51,565][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:26:51,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:26:51,686][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:08,509][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:08,602][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:08,624][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:12,830][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:12,933][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:12,954][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:17,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:17,264][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:17,285][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:21,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:21,610][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:21,632][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 19
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:28:22,735][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:22,838][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:22,859][root][INFO] - Image embeddings computed.
[2025-02-08 17:28:39,462][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:39,473][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:39,493][root][INFO] - Image embeddings computed.
[2025-02-08 17:28:43,708][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:43,716][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:43,736][root][INFO] - Image embeddings computed.
[2025-02-08 17:28:47,949][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:47,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:47,980][root][INFO] - Image embeddings computed.
[2025-02-08 17:28:52,203][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:52,213][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:52,234][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:29:58,632][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:29:58,734][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:29:58,755][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:15,688][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:15,797][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:15,818][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:20,016][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:20,133][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:20,153][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:24,362][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:24,469][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:24,490][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:28,696][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:28,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:28,834][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.26666666666666666 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 7/50
[2025-02-08 17:31:38,573][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:31:38,679][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:31:38,700][root][INFO] - Image embeddings computed.
[2025-02-08 17:31:55,886][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:31:55,984][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:31:56,005][root][INFO] - Image embeddings computed.
[2025-02-08 17:32:00,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:32:00,327][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:32:00,348][root][INFO] - Image embeddings computed.
[2025-02-08 17:32:04,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:32:04,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:32:04,689][root][INFO] - Image embeddings computed.
[2025-02-08 17:32:08,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:32:08,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:32:09,004][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 17
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:33:09,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:09,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:09,393][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:25,922][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:25,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:25,946][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:30,170][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:30,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:30,200][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:34,418][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:34,471][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:34,492][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:38,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:38,700][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:38,721][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 20
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.2285714285714286 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 8/50
[2025-02-08 17:34:52,849][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:34:52,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:34:52,889][root][INFO] - Image embeddings computed.
[2025-02-08 17:35:09,758][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:35:09,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:35:09,788][root][INFO] - Image embeddings computed.
[2025-02-08 17:35:13,969][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:35:13,974][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:35:13,994][root][INFO] - Image embeddings computed.
[2025-02-08 17:35:18,199][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:35:18,202][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:35:18,223][root][INFO] - Image embeddings computed.
[2025-02-08 17:35:22,396][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:35:22,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:35:22,510][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:36:24,706][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:24,719][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:24,740][root][INFO] - Image embeddings computed.
[2025-02-08 17:36:41,248][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:41,258][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:41,279][root][INFO] - Image embeddings computed.
[2025-02-08 17:36:45,467][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:45,472][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:45,492][root][INFO] - Image embeddings computed.
[2025-02-08 17:36:49,706][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:49,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:49,731][root][INFO] - Image embeddings computed.
[2025-02-08 17:36:53,906][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:53,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:53,931][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 22
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.2 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 9/50
[2025-02-08 17:38:09,895][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:09,910][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:09,931][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:26,824][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:26,830][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:26,850][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:31,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:31,056][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:31,077][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:35,293][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:35,298][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:35,319][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:39,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:39,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:39,573][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 22
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 17:39:45,470][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:39:45,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:39:45,506][root][INFO] - Image embeddings computed.
[2025-02-08 17:40:02,205][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:40:02,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:40:02,232][root][INFO] - Image embeddings computed.
[2025-02-08 17:40:06,431][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:40:06,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:40:06,457][root][INFO] - Image embeddings computed.
[2025-02-08 17:40:10,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:40:10,675][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:40:10,697][root][INFO] - Image embeddings computed.
[2025-02-08 17:40:14,915][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:40:14,920][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:40:14,942][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 20
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 17:41:21,593][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:21,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:21,627][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:38,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:38,251][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:38,272][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:42,477][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:42,482][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:42,502][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:46,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:46,722][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:46,743][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:50,954][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:50,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:50,980][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 19
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 17:42:54,260][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:42:54,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:42:54,294][root][INFO] - Image embeddings computed.
[2025-02-08 17:43:10,898][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:43:10,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:43:10,924][root][INFO] - Image embeddings computed.
[2025-02-08 17:43:15,139][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:43:15,144][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:43:15,165][root][INFO] - Image embeddings computed.
[2025-02-08 17:43:19,387][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:43:19,392][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:43:19,412][root][INFO] - Image embeddings computed.
[2025-02-08 17:43:23,626][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:43:23,631][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:43:23,651][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 19
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 17:44:26,508][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:44:26,521][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:44:26,542][root][INFO] - Image embeddings computed.
[2025-02-08 17:44:43,097][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:44:43,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:44:43,212][root][INFO] - Image embeddings computed.
[2025-02-08 17:44:47,422][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:44:47,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:44:47,536][root][INFO] - Image embeddings computed.
[2025-02-08 17:44:51,759][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:44:51,852][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:44:51,872][root][INFO] - Image embeddings computed.
[2025-02-08 17:44:56,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:44:56,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:44:56,200][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 22
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 17:45:59,579][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:45:59,594][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:45:59,614][root][INFO] - Image embeddings computed.
[2025-02-08 17:46:16,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:46:16,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:46:16,176][root][INFO] - Image embeddings computed.
[2025-02-08 17:46:20,396][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:46:20,514][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:46:20,535][root][INFO] - Image embeddings computed.
[2025-02-08 17:46:24,756][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:46:24,851][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:46:24,872][root][INFO] - Image embeddings computed.
[2025-02-08 17:46:29,080][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:46:29,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:46:29,194][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 19
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.200 | Done: False

Mean: 0.2 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 10/50
[2025-02-08 17:47:48,301][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:47:48,397][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:47:48,418][root][INFO] - Image embeddings computed.
[2025-02-08 17:48:05,363][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:05,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:05,401][root][INFO] - Image embeddings computed.
[2025-02-08 17:48:09,607][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:09,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:09,632][root][INFO] - Image embeddings computed.
[2025-02-08 17:48:13,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:13,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:13,883][root][INFO] - Image embeddings computed.
[2025-02-08 17:48:18,071][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:18,075][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:18,095][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 20
Lang Goal: pack the yoshi figure in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 17:49:25,175][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:49:25,278][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:49:25,299][root][INFO] - Image embeddings computed.
[2025-02-08 17:49:41,997][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:49:42,097][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:49:42,118][root][INFO] - Image embeddings computed.
[2025-02-08 17:49:46,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:49:46,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:49:46,504][root][INFO] - Image embeddings computed.
[2025-02-08 17:49:50,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:49:50,876][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:49:50,898][root][INFO] - Image embeddings computed.
[2025-02-08 17:49:55,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:49:55,203][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:49:55,224][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 21
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.485 | Done: False

[2025-02-08 17:51:06,342][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:51:06,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:51:06,374][root][INFO] - Image embeddings computed.
[2025-02-08 17:51:23,181][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:51:23,186][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:51:23,206][root][INFO] - Image embeddings computed.
[2025-02-08 17:51:27,445][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:51:27,449][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:51:27,470][root][INFO] - Image embeddings computed.
[2025-02-08 17:51:31,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:51:31,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:51:31,728][root][INFO] - Image embeddings computed.
[2025-02-08 17:51:35,934][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:51:35,938][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:51:35,959][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 22
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 17:52:44,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:52:44,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:52:44,539][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:01,259][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:01,263][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:01,284][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:05,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:05,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:05,531][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:09,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:09,766][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:09,786][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:13,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:13,995][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:14,016][root][INFO] - Image embeddings computed.
The number of original masks: 53
The number of filtered masks: 24
Lang Goal: pack the unicorn toy in the brown box
Total Reward: 0.750 | Done: False

[2025-02-08 17:54:19,557][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:54:19,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:54:19,590][root][INFO] - Image embeddings computed.
[2025-02-08 17:54:36,243][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:54:36,247][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:54:36,268][root][INFO] - Image embeddings computed.
[2025-02-08 17:54:40,488][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:54:40,492][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:54:40,512][root][INFO] - Image embeddings computed.
[2025-02-08 17:54:44,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:54:44,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:54:44,775][root][INFO] - Image embeddings computed.
[2025-02-08 17:54:48,994][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:54:48,998][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:54:49,018][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 23
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.995 | Done: True

Mean: 0.27947916666666667 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 11/50
[2025-02-08 17:56:05,450][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:05,486][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:05,507][root][INFO] - Image embeddings computed.
[2025-02-08 17:56:22,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:22,662][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:22,682][root][INFO] - Image embeddings computed.
[2025-02-08 17:56:26,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:26,864][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:26,885][root][INFO] - Image embeddings computed.
[2025-02-08 17:56:31,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:31,127][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:31,147][root][INFO] - Image embeddings computed.
[2025-02-08 17:56:35,360][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:35,369][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:35,389][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: pack the light brown boot with golden laces in the brown box
Total Reward: 0.228 | Done: False

[2025-02-08 17:57:46,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:57:46,218][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:57:46,239][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:02,958][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:02,969][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:02,990][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:07,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:07,193][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:07,214][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:11,448][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:11,458][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:11,479][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:15,687][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:15,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:15,719][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: pack the light brown boot with golden laces in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 17:59:21,759][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:59:21,765][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:59:21,786][root][INFO] - Image embeddings computed.
[2025-02-08 17:59:38,639][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:59:38,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:59:38,668][root][INFO] - Image embeddings computed.
[2025-02-08 17:59:42,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:59:42,886][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:59:42,907][root][INFO] - Image embeddings computed.
[2025-02-08 17:59:47,144][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:59:47,148][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:59:47,179][root][INFO] - Image embeddings computed.
[2025-02-08 17:59:51,395][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:59:51,404][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:59:51,424][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 20
Lang Goal: pack the red cup in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 18:00:58,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:00:58,369][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:00:58,390][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:15,197][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:15,202][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:15,223][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:19,420][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:19,429][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:19,450][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:23,737][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:23,747][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:23,767][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:27,976][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:27,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:28,006][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 20
Lang Goal: pack the red cup in the brown box
Warning: movej exceeded 5 second timeout. Skipping.
Total Reward: 0.250 | Done: True

Mean: 0.2767992424242424 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 12/50
[2025-02-08 18:02:51,638][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:02:51,749][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:02:51,769][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:08,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:09,066][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:09,086][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:13,298][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:13,397][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:13,417][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:17,613][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:17,716][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:17,737][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:21,956][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:22,055][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:22,076][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 18:04:29,996][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:04:30,000][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:04:30,021][root][INFO] - Image embeddings computed.
[2025-02-08 18:04:46,954][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:04:46,963][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:04:46,983][root][INFO] - Image embeddings computed.
[2025-02-08 18:04:51,192][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:04:51,197][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:04:51,217][root][INFO] - Image embeddings computed.
[2025-02-08 18:04:55,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:04:55,503][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:04:55,523][root][INFO] - Image embeddings computed.
[2025-02-08 18:04:59,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:04:59,835][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:04:59,855][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 18:06:11,491][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:11,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:11,613][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:28,671][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:28,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:28,868][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:33,054][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:33,170][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:33,191][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:37,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:37,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:37,562][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:41,781][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:41,880][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:41,901][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 21
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.29539930555555555 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 13/50
[2025-02-08 18:08:00,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:00,582][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:00,602][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:17,434][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:17,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:17,463][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:21,679][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:21,687][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:21,707][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:25,934][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:25,942][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:25,962][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:30,162][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:30,166][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:30,187][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 14
Lang Goal: pack the porcelain cup in the brown box
Warning: movej exceeded 5 second timeout. Skipping.
Total Reward: 0.000 | Done: True

Mean: 0.2726762820512821 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 14/50
[2025-02-08 18:09:50,976][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:09:50,990][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:09:51,011][root][INFO] - Image embeddings computed.
[2025-02-08 18:10:07,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:10:07,944][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:10:07,964][root][INFO] - Image embeddings computed.
[2025-02-08 18:10:12,176][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:10:12,186][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:10:12,206][root][INFO] - Image embeddings computed.
[2025-02-08 18:10:16,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:10:16,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:10:16,444][root][INFO] - Image embeddings computed.
[2025-02-08 18:10:20,677][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:10:20,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:10:20,702][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 15
Lang Goal: pack the white razer mouse in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 18:11:29,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:29,472][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:29,492][root][INFO] - Image embeddings computed.
[2025-02-08 18:11:46,157][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:46,166][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:46,187][root][INFO] - Image embeddings computed.
[2025-02-08 18:11:50,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:50,425][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:50,445][root][INFO] - Image embeddings computed.
[2025-02-08 18:11:54,653][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:54,658][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:54,678][root][INFO] - Image embeddings computed.
[2025-02-08 18:11:58,892][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:58,897][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:58,917][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 18
Lang Goal: pack the white razer mouse in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 18:13:06,714][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:06,728][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:06,749][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:23,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:23,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:23,468][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:27,698][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:27,705][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:27,726][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:31,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:31,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:31,968][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:36,190][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:36,195][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:36,215][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: pack the white razer mouse in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.2531994047619048 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 15/50
[2025-02-08 18:14:56,166][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:14:56,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:14:56,308][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:13,285][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:13,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:13,410][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:17,612][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:17,709][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:17,730][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:21,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:22,047][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:22,068][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:26,300][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:26,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:26,422][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 15
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 18:16:34,995][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:16:35,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:16:35,030][root][INFO] - Image embeddings computed.
[2025-02-08 18:16:52,208][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:16:52,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:16:52,236][root][INFO] - Image embeddings computed.
[2025-02-08 18:16:56,435][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:16:56,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:16:56,465][root][INFO] - Image embeddings computed.
[2025-02-08 18:17:00,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:17:00,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:17:00,718][root][INFO] - Image embeddings computed.
[2025-02-08 18:17:04,963][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:17:04,967][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:17:04,988][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 13
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 18:18:13,062][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:13,083][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:13,103][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:30,101][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:30,110][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:30,130][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:34,336][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:34,345][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:34,365][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:38,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:38,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:38,645][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:42,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:42,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:42,920][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 15
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.2696527777777778 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 16/50
[2025-02-08 18:20:00,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:00,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:00,231][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:17,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:17,504][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:17,524][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:21,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:21,828][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:21,849][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:26,058][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:26,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:26,093][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:30,299][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:30,303][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:30,324][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 11
Lang Goal: pack the unicorn toy in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.3152994791666667 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 17/50
[2025-02-08 18:21:46,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:21:46,360][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:21:46,380][root][INFO] - Image embeddings computed.
[2025-02-08 18:22:03,196][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:22:03,205][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:22:03,225][root][INFO] - Image embeddings computed.
[2025-02-08 18:22:07,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:22:07,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:22:07,462][root][INFO] - Image embeddings computed.
[2025-02-08 18:22:11,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:22:11,674][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:22:11,695][root][INFO] - Image embeddings computed.
[2025-02-08 18:22:15,879][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:22:15,883][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:22:15,903][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 14
Lang Goal: pack the toy train in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 18:23:25,211][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:23:25,263][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:23:25,283][root][INFO] - Image embeddings computed.
[2025-02-08 18:23:42,016][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:23:42,023][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:23:42,044][root][INFO] - Image embeddings computed.
[2025-02-08 18:23:46,263][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:23:46,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:23:46,288][root][INFO] - Image embeddings computed.
[2025-02-08 18:23:50,505][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:23:50,509][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:23:50,529][root][INFO] - Image embeddings computed.
[2025-02-08 18:23:54,731][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:23:54,735][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:23:54,755][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 22
Lang Goal: pack the toy train in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 18:25:05,441][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:05,454][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:05,475][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:22,147][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:22,155][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:22,176][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:26,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:26,421][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:26,442][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:30,665][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:30,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:30,690][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:34,892][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:34,895][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:34,916][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 17
Lang Goal: pack the pepsi gold caffeine free box in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 18:26:46,814][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:26:46,828][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:26:46,848][root][INFO] - Image embeddings computed.
[2025-02-08 18:27:03,578][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:27:03,586][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:27:03,607][root][INFO] - Image embeddings computed.
[2025-02-08 18:27:07,854][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:27:07,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:27:07,880][root][INFO] - Image embeddings computed.
[2025-02-08 18:27:12,108][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:27:12,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:27:12,133][root][INFO] - Image embeddings computed.
[2025-02-08 18:27:16,365][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:27:16,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:27:16,389][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 18
Lang Goal: pack the pepsi gold caffeine free box in the brown box
Total Reward: 0.333 | Done: False

Mean: 0.31636029411764705 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 18/50
[2025-02-08 18:28:35,017][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:28:35,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:28:35,051][root][INFO] - Image embeddings computed.
[2025-02-08 18:28:51,832][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:28:51,836][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:28:51,856][root][INFO] - Image embeddings computed.
[2025-02-08 18:28:56,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:28:56,087][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:28:56,107][root][INFO] - Image embeddings computed.
[2025-02-08 18:29:00,338][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:29:00,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:29:00,363][root][INFO] - Image embeddings computed.
[2025-02-08 18:29:04,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:29:04,587][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:29:04,607][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 13
Lang Goal: pack the purple tape in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 18:30:17,233][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:17,366][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:17,387][root][INFO] - Image embeddings computed.
[2025-02-08 18:30:34,322][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:34,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:34,445][root][INFO] - Image embeddings computed.
[2025-02-08 18:30:38,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:38,767][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:38,788][root][INFO] - Image embeddings computed.
[2025-02-08 18:30:43,047][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:43,153][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:43,174][root][INFO] - Image embeddings computed.
[2025-02-08 18:30:47,369][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:47,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:47,489][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: pack the yoshi figure in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.35434027777777777 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 19/50
[2025-02-08 18:32:17,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:17,739][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:17,760][root][INFO] - Image embeddings computed.
[2025-02-08 18:32:34,523][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:34,636][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:34,657][root][INFO] - Image embeddings computed.
[2025-02-08 18:32:38,852][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:38,973][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:38,993][root][INFO] - Image embeddings computed.
[2025-02-08 18:32:43,210][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:43,305][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:43,325][root][INFO] - Image embeddings computed.
[2025-02-08 18:32:47,517][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:47,623][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:47,643][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 28
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 18:33:59,892][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:33:59,998][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:34:00,019][root][INFO] - Image embeddings computed.
[2025-02-08 18:34:16,844][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:34:16,938][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:34:16,980][root][INFO] - Image embeddings computed.
[2025-02-08 18:34:21,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:34:21,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:34:21,287][root][INFO] - Image embeddings computed.
[2025-02-08 18:34:25,525][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:34:25,626][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:34:25,647][root][INFO] - Image embeddings computed.
[2025-02-08 18:34:29,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:34:29,941][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:34:29,961][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 29
Lang Goal: pack the scissors in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 18:35:43,777][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:35:43,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:35:43,898][root][INFO] - Image embeddings computed.
[2025-02-08 18:36:00,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:36:00,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:36:00,864][root][INFO] - Image embeddings computed.
[2025-02-08 18:36:05,053][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:36:05,148][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:36:05,170][root][INFO] - Image embeddings computed.
[2025-02-08 18:36:09,411][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:36:09,505][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:36:09,527][root][INFO] - Image embeddings computed.
[2025-02-08 18:36:13,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:36:13,820][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:36:13,841][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 26
Lang Goal: pack the lion figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 18:37:33,305][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:37:33,311][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:37:33,332][root][INFO] - Image embeddings computed.
[2025-02-08 18:37:49,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:37:49,956][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:37:49,976][root][INFO] - Image embeddings computed.
[2025-02-08 18:37:54,176][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:37:54,180][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:37:54,201][root][INFO] - Image embeddings computed.
[2025-02-08 18:37:58,420][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:37:58,429][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:37:58,450][root][INFO] - Image embeddings computed.
[2025-02-08 18:38:02,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:38:02,678][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:38:02,699][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 25
Lang Goal: pack the lion figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 18:39:17,650][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:39:17,748][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:39:17,769][root][INFO] - Image embeddings computed.
[2025-02-08 18:39:34,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:39:34,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:39:34,661][root][INFO] - Image embeddings computed.
[2025-02-08 18:39:38,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:39:38,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:39:38,991][root][INFO] - Image embeddings computed.
[2025-02-08 18:39:43,224][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:39:43,323][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:39:43,343][root][INFO] - Image embeddings computed.
[2025-02-08 18:39:47,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:39:47,637][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:39:47,658][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 27
Lang Goal: pack the lion figure in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.36200657894736843 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 20/50
[2025-02-08 18:41:09,724][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:41:09,731][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:41:09,751][root][INFO] - Image embeddings computed.
[2025-02-08 18:41:26,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:41:26,704][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:41:26,725][root][INFO] - Image embeddings computed.
[2025-02-08 18:41:30,969][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:41:30,979][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:41:30,999][root][INFO] - Image embeddings computed.
[2025-02-08 18:41:35,212][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:41:35,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:41:35,237][root][INFO] - Image embeddings computed.
[2025-02-08 18:41:39,445][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:41:39,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:41:39,476][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 10
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.39390625 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 21/50
[2025-02-08 18:43:04,709][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:43:04,720][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:43:04,741][root][INFO] - Image embeddings computed.
[2025-02-08 18:43:21,463][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:43:21,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:43:21,488][root][INFO] - Image embeddings computed.
[2025-02-08 18:43:25,703][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:43:25,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:43:25,732][root][INFO] - Image embeddings computed.
[2025-02-08 18:43:29,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:43:29,946][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:43:29,967][root][INFO] - Image embeddings computed.
[2025-02-08 18:43:34,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:43:34,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:43:34,207][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.315 | Done: False

[2025-02-08 18:44:47,570][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:44:47,583][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:44:47,605][root][INFO] - Image embeddings computed.
[2025-02-08 18:45:04,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:45:04,149][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:45:04,170][root][INFO] - Image embeddings computed.
[2025-02-08 18:45:08,388][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:45:08,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:45:08,417][root][INFO] - Image embeddings computed.
[2025-02-08 18:45:12,626][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:45:12,635][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:45:12,656][root][INFO] - Image embeddings computed.
[2025-02-08 18:45:16,903][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:45:16,912][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:45:16,933][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 18:46:35,543][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:46:35,555][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:46:35,575][root][INFO] - Image embeddings computed.
[2025-02-08 18:46:52,350][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:46:52,358][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:46:52,379][root][INFO] - Image embeddings computed.
[2025-02-08 18:46:56,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:46:56,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:46:56,609][root][INFO] - Image embeddings computed.
[2025-02-08 18:47:00,818][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:47:00,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:47:00,847][root][INFO] - Image embeddings computed.
[2025-02-08 18:47:05,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:47:05,076][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:47:05,096][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.320 | Done: False

[2025-02-08 18:48:18,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:48:18,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:48:18,946][root][INFO] - Image embeddings computed.
[2025-02-08 18:48:35,481][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:48:35,491][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:48:35,511][root][INFO] - Image embeddings computed.
[2025-02-08 18:48:39,725][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:48:39,736][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:48:39,756][root][INFO] - Image embeddings computed.
[2025-02-08 18:48:43,974][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:48:43,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:48:44,002][root][INFO] - Image embeddings computed.
[2025-02-08 18:48:48,243][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:48:48,247][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:48:48,267][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 18
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.3751488095238095 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 22/50
[2025-02-08 18:50:17,710][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:50:17,843][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:50:17,865][root][INFO] - Image embeddings computed.
[2025-02-08 18:50:34,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:50:34,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:50:34,930][root][INFO] - Image embeddings computed.
[2025-02-08 18:50:39,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:50:39,250][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:50:39,271][root][INFO] - Image embeddings computed.
[2025-02-08 18:50:43,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:50:43,571][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:50:43,592][root][INFO] - Image embeddings computed.
[2025-02-08 18:50:47,821][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:50:47,921][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:50:47,943][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 19
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 18:52:09,182][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:52:09,291][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:52:09,312][root][INFO] - Image embeddings computed.
[2025-02-08 18:52:26,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:52:26,212][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:52:26,233][root][INFO] - Image embeddings computed.
[2025-02-08 18:52:30,429][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:52:30,529][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:52:30,549][root][INFO] - Image embeddings computed.
[2025-02-08 18:52:34,754][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:52:34,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:52:34,868][root][INFO] - Image embeddings computed.
[2025-02-08 18:52:39,098][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:52:39,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:52:39,213][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 22
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.3580965909090909 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 23/50
[2025-02-08 18:54:04,140][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:54:04,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:54:04,235][root][INFO] - Image embeddings computed.
[2025-02-08 18:54:20,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:54:20,849][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:54:20,869][root][INFO] - Image embeddings computed.
[2025-02-08 18:54:25,086][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:54:25,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:54:25,111][root][INFO] - Image embeddings computed.
[2025-02-08 18:54:29,303][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:54:29,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:54:29,328][root][INFO] - Image embeddings computed.
[2025-02-08 18:54:33,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:54:33,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:54:33,566][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 10
Lang Goal: pack the purple tape in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 18:55:48,439][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:55:48,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:55:48,566][root][INFO] - Image embeddings computed.
[2025-02-08 18:56:05,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:56:05,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:56:05,505][root][INFO] - Image embeddings computed.
[2025-02-08 18:56:09,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:56:09,803][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:56:09,823][root][INFO] - Image embeddings computed.
[2025-02-08 18:56:14,044][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:56:14,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:56:14,177][root][INFO] - Image embeddings computed.
[2025-02-08 18:56:18,373][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:56:18,473][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:56:18,493][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 9
Lang Goal: pack the bull figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 18:57:34,724][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:57:34,736][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:57:34,757][root][INFO] - Image embeddings computed.
[2025-02-08 18:57:51,719][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:57:51,724][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:57:51,744][root][INFO] - Image embeddings computed.
[2025-02-08 18:57:55,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:57:55,945][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:57:55,966][root][INFO] - Image embeddings computed.
[2025-02-08 18:58:00,192][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:58:00,196][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:58:00,217][root][INFO] - Image embeddings computed.
[2025-02-08 18:58:04,414][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:58:04,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:58:04,439][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 11
Lang Goal: pack the bull figure in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.38600543478260874 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 24/50
[2025-02-08 18:59:29,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:59:29,567][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:59:29,589][root][INFO] - Image embeddings computed.
[2025-02-08 18:59:46,730][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:59:46,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:59:46,853][root][INFO] - Image embeddings computed.
[2025-02-08 18:59:51,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:59:51,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:59:51,195][root][INFO] - Image embeddings computed.
[2025-02-08 18:59:55,420][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:59:55,532][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:59:55,553][root][INFO] - Image embeddings computed.
[2025-02-08 18:59:59,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:59:59,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:59:59,862][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 19:01:19,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:01:19,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:01:19,424][root][INFO] - Image embeddings computed.
[2025-02-08 19:01:37,532][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:01:37,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:01:37,557][root][INFO] - Image embeddings computed.
[2025-02-08 19:01:41,765][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:01:41,770][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:01:41,791][root][INFO] - Image embeddings computed.
[2025-02-08 19:01:46,042][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:01:46,047][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:01:46,068][root][INFO] - Image embeddings computed.
[2025-02-08 19:01:50,245][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:01:50,249][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:01:50,271][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 18
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.400 | Done: False

[2025-02-08 19:03:10,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:03:10,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:03:10,468][root][INFO] - Image embeddings computed.
[2025-02-08 19:03:29,090][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:03:29,093][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:03:29,114][root][INFO] - Image embeddings computed.
[2025-02-08 19:03:33,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:03:33,329][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:03:33,350][root][INFO] - Image embeddings computed.
[2025-02-08 19:03:37,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:03:37,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:03:37,610][root][INFO] - Image embeddings computed.
[2025-02-08 19:03:41,787][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:03:41,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:03:41,812][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: pack the toy school bus in the brown box
Total Reward: 0.597 | Done: False

[2025-02-08 19:04:57,144][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:04:57,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:04:57,175][root][INFO] - Image embeddings computed.
[2025-02-08 19:05:15,063][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:05:15,067][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:05:15,088][root][INFO] - Image embeddings computed.
[2025-02-08 19:05:19,302][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:05:19,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:05:19,327][root][INFO] - Image embeddings computed.
[2025-02-08 19:05:23,573][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:05:23,577][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:05:23,597][root][INFO] - Image embeddings computed.
[2025-02-08 19:05:27,764][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:05:27,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:05:27,789][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 20
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.800 | Done: False

[2025-02-08 19:06:44,490][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:06:44,503][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:06:44,523][root][INFO] - Image embeddings computed.
[2025-02-08 19:07:03,113][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:07:03,118][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:07:03,138][root][INFO] - Image embeddings computed.
[2025-02-08 19:07:07,360][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:07:07,364][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:07:07,385][root][INFO] - Image embeddings computed.
[2025-02-08 19:07:11,643][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:07:11,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:07:11,667][root][INFO] - Image embeddings computed.
[2025-02-08 19:07:15,829][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:07:15,834][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:07:15,854][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 21
Lang Goal: pack the porcelain salad plate in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.4115885416666667 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 25/50
[2025-02-08 19:08:42,906][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:08:43,067][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:08:43,088][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:00,048][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:00,142][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:00,163][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:04,361][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:04,454][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:04,475][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:08,697][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:08,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:08,836][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:13,049][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:13,144][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:13,165][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 24
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 19:10:29,639][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:10:29,649][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:10:29,670][root][INFO] - Image embeddings computed.
[2025-02-08 19:10:46,312][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:10:46,316][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:10:46,337][root][INFO] - Image embeddings computed.
[2025-02-08 19:10:50,540][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:10:50,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:10:50,564][root][INFO] - Image embeddings computed.
[2025-02-08 19:10:54,782][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:10:54,786][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:10:54,807][root][INFO] - Image embeddings computed.
[2025-02-08 19:10:59,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:10:59,044][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:10:59,065][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 20
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 19:12:16,650][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:12:16,661][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:12:16,682][root][INFO] - Image embeddings computed.
[2025-02-08 19:12:33,213][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:12:33,218][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:12:33,238][root][INFO] - Image embeddings computed.
[2025-02-08 19:12:37,458][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:12:37,462][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:12:37,482][root][INFO] - Image embeddings computed.
[2025-02-08 19:12:41,702][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:12:41,706][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:12:41,726][root][INFO] - Image embeddings computed.
[2025-02-08 19:12:45,964][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:12:45,968][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:12:45,988][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 22
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 19:14:02,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:14:02,595][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:14:02,616][root][INFO] - Image embeddings computed.
[2025-02-08 19:14:19,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:14:19,167][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:14:19,187][root][INFO] - Image embeddings computed.
[2025-02-08 19:14:23,395][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:14:23,399][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:14:23,419][root][INFO] - Image embeddings computed.
[2025-02-08 19:14:27,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:14:27,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:14:27,683][root][INFO] - Image embeddings computed.
[2025-02-08 19:14:31,912][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:14:31,916][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:14:31,937][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 22
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.750 | Done: False

[2025-02-08 19:15:50,706][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:15:50,805][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:15:50,827][root][INFO] - Image embeddings computed.
[2025-02-08 19:16:07,434][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:07,533][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:07,554][root][INFO] - Image embeddings computed.
[2025-02-08 19:16:11,765][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:11,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:11,880][root][INFO] - Image embeddings computed.
[2025-02-08 19:16:16,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:16,186][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:16,206][root][INFO] - Image embeddings computed.
[2025-02-08 19:16:20,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:20,555][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:20,575][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 22
Lang Goal: pack the nintendo 3ds in the brown box
Total Reward: 0.750 | Done: False

Mean: 0.42512500000000003 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 26/50
[2025-02-08 19:17:48,910][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:17:49,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:17:49,030][root][INFO] - Image embeddings computed.
[2025-02-08 19:18:05,720][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:18:05,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:18:05,833][root][INFO] - Image embeddings computed.
[2025-02-08 19:18:10,059][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:18:10,151][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:18:10,171][root][INFO] - Image embeddings computed.
[2025-02-08 19:18:14,409][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:18:14,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:18:14,464][root][INFO] - Image embeddings computed.
[2025-02-08 19:18:18,708][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:18:18,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:18:18,732][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 13
Lang Goal: pack the honey dipper in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.44723557692307697 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 27/50
[2025-02-08 19:19:47,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:19:47,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:19:47,789][root][INFO] - Image embeddings computed.
[2025-02-08 19:20:04,578][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:04,688][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:04,708][root][INFO] - Image embeddings computed.
[2025-02-08 19:20:08,909][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:09,002][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:09,023][root][INFO] - Image embeddings computed.
[2025-02-08 19:20:13,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:13,310][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:13,330][root][INFO] - Image embeddings computed.
[2025-02-08 19:20:17,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:17,649][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:17,669][root][INFO] - Image embeddings computed.
The number of original masks: 15
The number of filtered masks: 9
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 19:21:40,512][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:21:40,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:21:40,633][root][INFO] - Image embeddings computed.
[2025-02-08 19:21:58,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:21:58,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:21:58,404][root][INFO] - Image embeddings computed.
[2025-02-08 19:22:02,596][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:22:02,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:22:02,712][root][INFO] - Image embeddings computed.
[2025-02-08 19:22:06,920][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:22:07,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:22:07,043][root][INFO] - Image embeddings computed.
[2025-02-08 19:22:11,242][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:22:11,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:22:11,375][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 10
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 19:23:34,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:23:35,039][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:23:35,061][root][INFO] - Image embeddings computed.
[2025-02-08 19:23:52,028][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:23:52,132][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:23:52,154][root][INFO] - Image embeddings computed.
[2025-02-08 19:23:56,351][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:23:56,480][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:23:56,501][root][INFO] - Image embeddings computed.
[2025-02-08 19:24:00,711][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:24:00,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:24:00,830][root][INFO] - Image embeddings computed.
[2025-02-08 19:24:05,027][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:24:05,122][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:24:05,143][root][INFO] - Image embeddings computed.
The number of original masks: 15
The number of filtered masks: 10
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4306712962962963 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 28/50
[2025-02-08 19:25:37,627][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:25:37,720][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:25:37,742][root][INFO] - Image embeddings computed.
[2025-02-08 19:25:54,642][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:25:54,735][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:25:54,756][root][INFO] - Image embeddings computed.
[2025-02-08 19:25:58,979][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:25:59,086][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:25:59,107][root][INFO] - Image embeddings computed.
[2025-02-08 19:26:03,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:26:03,437][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:26:03,457][root][INFO] - Image embeddings computed.
[2025-02-08 19:26:07,653][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:26:07,756][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:26:07,777][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 18
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 19:27:27,110][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:27,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:27,135][root][INFO] - Image embeddings computed.
[2025-02-08 19:27:44,175][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:44,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:44,200][root][INFO] - Image embeddings computed.
[2025-02-08 19:27:48,453][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:48,457][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:48,477][root][INFO] - Image embeddings computed.
[2025-02-08 19:27:52,713][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:52,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:52,738][root][INFO] - Image embeddings computed.
[2025-02-08 19:27:56,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:56,946][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:56,966][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 22
Lang Goal: pack the alarm clock in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.45100446428571433 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 29/50
[2025-02-08 19:29:27,759][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:27,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:27,794][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:44,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:44,688][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:44,709][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:48,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:48,943][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:48,964][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:53,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:53,197][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:53,218][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:57,423][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:57,431][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:57,452][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 14
Lang Goal: pack the nintendo 3ds in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 19:31:21,655][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:21,659][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:21,680][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:38,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:38,403][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:38,423][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:42,674][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:42,683][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:42,704][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:46,944][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:46,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:46,973][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:51,177][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:51,185][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:51,205][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 16
Lang Goal: pack the nintendo 3ds in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4354525862068966 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 30/50
[2025-02-08 19:33:25,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:25,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:26,003][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:43,019][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:43,027][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:43,048][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:47,257][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:47,265][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:47,286][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:51,519][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:51,523][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:51,544][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:55,759][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:55,763][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:55,784][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 18
Lang Goal: pack the spiderman figure in the brown box
Total Reward: 0.271 | Done: False

[2025-02-08 19:35:18,123][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:18,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:18,158][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:34,842][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:34,852][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:34,873][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:39,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:39,108][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:39,130][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:43,353][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:43,358][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:43,379][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:47,607][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:47,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:47,633][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 20
Lang Goal: pack the spiderman figure in the brown box
Total Reward: 0.315 | Done: False

[2025-02-08 19:37:12,617][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:12,719][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:12,740][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:29,508][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:29,613][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:29,635][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:33,851][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:33,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:33,978][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:38,212][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:38,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:38,342][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:42,562][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:42,656][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:42,677][root][INFO] - Image embeddings computed.
The number of original masks: 48
The number of filtered masks: 23
Lang Goal: pack the spiderman figure in the brown box
Total Reward: 0.315 | Done: False

[2025-02-08 19:39:11,765][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:11,866][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:11,887][root][INFO] - Image embeddings computed.
[2025-02-08 19:39:28,512][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:28,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:28,689][root][INFO] - Image embeddings computed.
[2025-02-08 19:39:32,912][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:33,005][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:33,026][root][INFO] - Image embeddings computed.
[2025-02-08 19:39:37,252][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:37,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:37,436][root][INFO] - Image embeddings computed.
[2025-02-08 19:39:41,655][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:41,755][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:41,776][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 25
Lang Goal: pack the spiderman figure in the brown box
Total Reward: 0.315 | Done: False

Mean: 0.43143132716049387 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 31/50
[2025-02-08 19:41:16,039][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:41:16,044][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:41:16,064][root][INFO] - Image embeddings computed.
[2025-02-08 19:41:33,241][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:41:33,245][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:41:33,265][root][INFO] - Image embeddings computed.
[2025-02-08 19:41:37,477][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:41:37,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:41:37,502][root][INFO] - Image embeddings computed.
[2025-02-08 19:41:41,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:41:41,730][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:41:41,750][root][INFO] - Image embeddings computed.
[2025-02-08 19:41:45,999][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:41:46,003][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:41:46,024][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 20
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 19:43:06,470][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:43:06,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:43:06,495][root][INFO] - Image embeddings computed.
[2025-02-08 19:43:23,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:43:23,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:43:23,531][root][INFO] - Image embeddings computed.
[2025-02-08 19:43:27,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:43:27,749][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:43:27,770][root][INFO] - Image embeddings computed.
[2025-02-08 19:43:32,026][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:43:32,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:43:32,050][root][INFO] - Image embeddings computed.
[2025-02-08 19:43:36,266][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:43:36,270][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:43:36,291][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 26
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 19:44:57,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:44:57,733][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:44:57,754][root][INFO] - Image embeddings computed.
[2025-02-08 19:45:14,724][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:45:14,729][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:45:14,749][root][INFO] - Image embeddings computed.
[2025-02-08 19:45:18,958][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:45:18,962][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:45:18,983][root][INFO] - Image embeddings computed.
[2025-02-08 19:45:23,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:45:23,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:45:23,255][root][INFO] - Image embeddings computed.
[2025-02-08 19:45:27,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:45:27,479][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:45:27,499][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 26
Lang Goal: pack the pepsi gold caffeine free box in the brown box
Total Reward: 0.750 | Done: False

[2025-02-08 19:46:49,484][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:46:49,503][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:46:49,523][root][INFO] - Image embeddings computed.
[2025-02-08 19:47:07,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:47:07,575][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:47:07,596][root][INFO] - Image embeddings computed.
[2025-02-08 19:47:11,804][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:47:11,808][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:47:11,828][root][INFO] - Image embeddings computed.
[2025-02-08 19:47:16,076][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:47:16,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:47:16,101][root][INFO] - Image embeddings computed.
[2025-02-08 19:47:20,337][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:47:20,341][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:47:20,361][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 21
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.750 | Done: False

[2025-02-08 19:48:47,913][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:48:47,918][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:48:47,938][root][INFO] - Image embeddings computed.
[2025-02-08 19:49:05,159][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:49:05,163][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:49:05,184][root][INFO] - Image embeddings computed.
[2025-02-08 19:49:09,392][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:49:09,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:49:09,416][root][INFO] - Image embeddings computed.
[2025-02-08 19:49:13,660][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:49:13,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:49:13,685][root][INFO] - Image embeddings computed.
[2025-02-08 19:49:17,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:49:17,905][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:49:17,926][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 24
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.995 | Done: True

Mean: 0.4496134055609862 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 32/50
[2025-02-08 19:50:48,207][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:50:48,218][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:50:48,238][root][INFO] - Image embeddings computed.
[2025-02-08 19:51:05,245][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:51:05,249][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:51:05,270][root][INFO] - Image embeddings computed.
[2025-02-08 19:51:09,471][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:51:09,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:51:09,495][root][INFO] - Image embeddings computed.
[2025-02-08 19:51:13,695][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:51:13,699][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:51:13,720][root][INFO] - Image embeddings computed.
[2025-02-08 19:51:17,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:51:17,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:51:17,954][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 14
Lang Goal: pack the red cup in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 19:52:45,618][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:52:45,717][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:52:45,738][root][INFO] - Image embeddings computed.
[2025-02-08 19:53:02,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:53:02,822][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:53:02,843][root][INFO] - Image embeddings computed.
[2025-02-08 19:53:07,030][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:53:07,124][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:53:07,144][root][INFO] - Image embeddings computed.
[2025-02-08 19:53:11,346][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:53:11,439][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:53:11,460][root][INFO] - Image embeddings computed.
[2025-02-08 19:53:15,668][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:53:15,762][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:53:15,782][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 15
Lang Goal: pack the honey dipper in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.4668129866372054 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 33/50
[2025-02-08 19:54:51,079][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:54:51,084][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:54:51,104][root][INFO] - Image embeddings computed.
[2025-02-08 19:55:07,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:55:07,945][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:55:07,966][root][INFO] - Image embeddings computed.
[2025-02-08 19:55:12,181][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:55:12,186][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:55:12,206][root][INFO] - Image embeddings computed.
[2025-02-08 19:55:16,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:55:16,410][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:55:16,431][root][INFO] - Image embeddings computed.
[2025-02-08 19:55:20,644][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:55:20,649][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:55:20,670][root][INFO] - Image embeddings computed.
The number of original masks: 50
The number of filtered masks: 21
Lang Goal: pack the toy school bus in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 19:56:43,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:56:43,330][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:56:43,351][root][INFO] - Image embeddings computed.
[2025-02-08 19:57:00,106][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:57:00,111][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:57:00,132][root][INFO] - Image embeddings computed.
[2025-02-08 19:57:04,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:57:04,345][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:57:04,365][root][INFO] - Image embeddings computed.
[2025-02-08 19:57:08,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:57:08,587][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:57:08,607][root][INFO] - Image embeddings computed.
[2025-02-08 19:57:12,825][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:57:12,830][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:57:12,850][root][INFO] - Image embeddings computed.
The number of original masks: 48
The number of filtered masks: 18
Lang Goal: pack the toy school bus in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 19:58:36,333][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:36,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:36,359][root][INFO] - Image embeddings computed.
[2025-02-08 19:58:53,080][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:53,091][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:53,111][root][INFO] - Image embeddings computed.
[2025-02-08 19:58:57,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:57,349][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:57,370][root][INFO] - Image embeddings computed.
[2025-02-08 19:59:01,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:59:01,590][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:59:01,610][root][INFO] - Image embeddings computed.
[2025-02-08 19:59:05,836][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:59:05,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:59:05,862][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 19
Lang Goal: pack the bull figure in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.48297016886032035 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 34/50
[2025-02-08 20:00:48,794][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:00:48,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:00:48,911][root][INFO] - Image embeddings computed.
[2025-02-08 20:01:05,813][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:01:05,906][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:01:05,927][root][INFO] - Image embeddings computed.
[2025-02-08 20:01:10,117][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:01:10,218][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:01:10,239][root][INFO] - Image embeddings computed.
[2025-02-08 20:01:14,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:01:14,533][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:01:14,554][root][INFO] - Image embeddings computed.
[2025-02-08 20:01:18,771][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:01:18,893][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:01:18,914][root][INFO] - Image embeddings computed.
The number of original masks: 47
The number of filtered masks: 36
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.329 | Done: False

[2025-02-08 20:02:46,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:02:46,343][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:02:46,364][root][INFO] - Image embeddings computed.
[2025-02-08 20:03:02,988][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:03:03,000][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:03:03,021][root][INFO] - Image embeddings computed.
[2025-02-08 20:03:07,215][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:03:07,220][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:03:07,241][root][INFO] - Image embeddings computed.
[2025-02-08 20:03:11,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:03:11,463][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:03:11,487][root][INFO] - Image embeddings computed.
[2025-02-08 20:03:15,752][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:03:15,756][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:03:15,777][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 28
Lang Goal: pack the red cup in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 20:04:48,997][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:04:49,002][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:04:49,023][root][INFO] - Image embeddings computed.
[2025-02-08 20:05:05,814][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:05:05,824][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:05:05,845][root][INFO] - Image embeddings computed.
[2025-02-08 20:05:10,052][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:05:10,058][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:05:10,079][root][INFO] - Image embeddings computed.
[2025-02-08 20:05:14,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:05:14,299][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:05:14,320][root][INFO] - Image embeddings computed.
[2025-02-08 20:05:18,578][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:05:18,587][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:05:18,608][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 33
Lang Goal: pack the red cup in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 20:06:52,371][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:06:52,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:06:52,532][root][INFO] - Image embeddings computed.
[2025-02-08 20:07:09,303][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:07:09,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:07:09,423][root][INFO] - Image embeddings computed.
[2025-02-08 20:07:13,636][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:07:13,735][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:07:13,757][root][INFO] - Image embeddings computed.
[2025-02-08 20:07:17,970][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:07:18,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:07:18,102][root][INFO] - Image embeddings computed.
[2025-02-08 20:07:22,283][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:07:22,381][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:07:22,402][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 28
Lang Goal: pack the red cup in the brown box
Total Reward: 0.333 | Done: False

Mean: 0.4785690854624678 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 35/50
[2025-02-08 20:09:05,353][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:09:05,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:09:05,488][root][INFO] - Image embeddings computed.
[2025-02-08 20:09:22,397][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:09:22,498][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:09:22,519][root][INFO] - Image embeddings computed.
[2025-02-08 20:09:26,737][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:09:26,840][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:09:26,862][root][INFO] - Image embeddings computed.
[2025-02-08 20:09:31,069][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:09:31,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:09:31,189][root][INFO] - Image embeddings computed.
[2025-02-08 20:09:35,381][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:09:35,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:09:35,532][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: pack the toy train in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 20:11:05,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:11:05,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:11:05,295][root][INFO] - Image embeddings computed.
[2025-02-08 20:11:22,182][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:11:22,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:11:22,212][root][INFO] - Image embeddings computed.
[2025-02-08 20:11:26,412][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:11:26,423][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:11:26,445][root][INFO] - Image embeddings computed.
[2025-02-08 20:11:30,667][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:11:30,672][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:11:30,693][root][INFO] - Image embeddings computed.
[2025-02-08 20:11:34,875][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:11:34,879][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:11:34,900][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 17
Lang Goal: pack the nintendo 3ds in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.49346711159211154 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 36/50
[2025-02-08 20:13:11,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:13:11,513][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:13:11,534][root][INFO] - Image embeddings computed.
[2025-02-08 20:13:28,821][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:13:28,828][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:13:28,849][root][INFO] - Image embeddings computed.
[2025-02-08 20:13:33,071][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:13:33,076][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:13:33,097][root][INFO] - Image embeddings computed.
[2025-02-08 20:13:37,315][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:13:37,325][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:13:37,346][root][INFO] - Image embeddings computed.
[2025-02-08 20:13:41,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:13:41,543][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:13:41,564][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: pack the android toy in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 20:15:11,215][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:15:11,315][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:15:11,336][root][INFO] - Image embeddings computed.
[2025-02-08 20:15:28,079][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:15:28,176][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:15:28,197][root][INFO] - Image embeddings computed.
[2025-02-08 20:15:32,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:15:32,508][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:15:32,529][root][INFO] - Image embeddings computed.
[2025-02-08 20:15:36,746][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:15:36,869][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:15:36,890][root][INFO] - Image embeddings computed.
[2025-02-08 20:15:41,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:15:41,207][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:15:41,228][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 15
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.562 | Done: False

[2025-02-08 20:17:13,696][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:17:13,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:17:13,837][root][INFO] - Image embeddings computed.
[2025-02-08 20:17:30,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:17:30,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:17:30,690][root][INFO] - Image embeddings computed.
[2025-02-08 20:17:34,898][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:17:34,991][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:17:35,012][root][INFO] - Image embeddings computed.
[2025-02-08 20:17:39,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:17:39,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:17:39,359][root][INFO] - Image embeddings computed.
[2025-02-08 20:17:43,538][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:17:43,637][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:17:43,658][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.562 | Done: False

Mean: 0.495384691825664 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 37/50
[2025-02-08 20:19:30,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:19:31,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:19:31,055][root][INFO] - Image embeddings computed.
[2025-02-08 20:19:48,198][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:19:48,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:19:48,328][root][INFO] - Image embeddings computed.
[2025-02-08 20:19:52,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:19:52,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:19:52,662][root][INFO] - Image embeddings computed.
[2025-02-08 20:19:56,891][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:19:56,902][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:19:56,923][root][INFO] - Image embeddings computed.
[2025-02-08 20:20:01,130][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:20:01,136][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:20:01,156][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 21
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:21:34,872][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:21:34,974][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:21:34,995][root][INFO] - Image embeddings computed.
[2025-02-08 20:21:52,645][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:21:52,790][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:21:52,811][root][INFO] - Image embeddings computed.
[2025-02-08 20:21:57,002][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:21:57,120][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:21:57,142][root][INFO] - Image embeddings computed.
[2025-02-08 20:22:01,355][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:22:01,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:22:01,489][root][INFO] - Image embeddings computed.
[2025-02-08 20:22:05,703][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:22:05,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:22:05,830][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 21
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4819959163709163 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 38/50
[2025-02-08 20:23:45,562][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:23:45,585][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:23:45,606][root][INFO] - Image embeddings computed.
[2025-02-08 20:24:02,295][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:24:02,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:24:02,328][root][INFO] - Image embeddings computed.
[2025-02-08 20:24:06,520][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:24:06,524][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:24:06,545][root][INFO] - Image embeddings computed.
[2025-02-08 20:24:10,739][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:24:10,747][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:24:10,768][root][INFO] - Image embeddings computed.
[2025-02-08 20:24:14,965][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:24:14,973][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:24:14,993][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 13
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:25:47,466][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:25:47,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:25:47,587][root][INFO] - Image embeddings computed.
[2025-02-08 20:26:04,384][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:26:04,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:26:04,511][root][INFO] - Image embeddings computed.
[2025-02-08 20:26:08,687][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:26:08,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:26:08,801][root][INFO] - Image embeddings computed.
[2025-02-08 20:26:13,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:26:13,102][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:26:13,123][root][INFO] - Image embeddings computed.
[2025-02-08 20:26:17,314][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:26:17,434][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:26:17,455][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 12
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 20:27:45,498][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:27:45,509][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:27:45,529][root][INFO] - Image embeddings computed.
[2025-02-08 20:28:02,138][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:28:02,145][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:28:02,165][root][INFO] - Image embeddings computed.
[2025-02-08 20:28:06,350][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:28:06,361][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:28:06,381][root][INFO] - Image embeddings computed.
[2025-02-08 20:28:10,592][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:28:10,596][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:28:10,617][root][INFO] - Image embeddings computed.
[2025-02-08 20:28:14,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:28:14,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:28:14,845][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 13
Lang Goal: pack the red and white striped towel in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.495627602782208 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 39/50
[2025-02-08 20:30:02,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:02,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:02,046][root][INFO] - Image embeddings computed.
[2025-02-08 20:30:18,954][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:18,963][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:18,984][root][INFO] - Image embeddings computed.
[2025-02-08 20:30:23,178][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:23,276][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:23,297][root][INFO] - Image embeddings computed.
[2025-02-08 20:30:27,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:27,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:27,653][root][INFO] - Image embeddings computed.
[2025-02-08 20:30:31,835][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:31,936][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:31,957][root][INFO] - Image embeddings computed.
The number of original masks: 47
The number of filtered masks: 30
Lang Goal: pack the spiderman figure in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 20:32:02,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:02,270][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:02,291][root][INFO] - Image embeddings computed.
[2025-02-08 20:32:18,920][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:18,930][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:18,950][root][INFO] - Image embeddings computed.
[2025-02-08 20:32:23,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:23,161][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:23,181][root][INFO] - Image embeddings computed.
[2025-02-08 20:32:27,414][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:27,426][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:27,446][root][INFO] - Image embeddings computed.
[2025-02-08 20:32:31,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:31,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:31,672][root][INFO] - Image embeddings computed.
The number of original masks: 57
The number of filtered masks: 37
Lang Goal: pack the hammer in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 20:34:00,592][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:00,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:00,626][root][INFO] - Image embeddings computed.
[2025-02-08 20:34:17,205][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:17,214][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:17,234][root][INFO] - Image embeddings computed.
[2025-02-08 20:34:21,433][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:21,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:21,462][root][INFO] - Image embeddings computed.
[2025-02-08 20:34:25,709][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:25,720][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:25,740][root][INFO] - Image embeddings computed.
[2025-02-08 20:34:29,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:29,952][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:29,972][root][INFO] - Image embeddings computed.
The number of original masks: 54
The number of filtered masks: 35
Lang Goal: pack the hammer in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.4957397155313822 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 40/50
[2025-02-08 20:36:09,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:10,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:10,107][root][INFO] - Image embeddings computed.
[2025-02-08 20:36:27,140][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:27,256][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:27,276][root][INFO] - Image embeddings computed.
[2025-02-08 20:36:31,481][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:31,610][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:31,631][root][INFO] - Image embeddings computed.
[2025-02-08 20:36:35,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:35,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:35,977][root][INFO] - Image embeddings computed.
[2025-02-08 20:36:40,155][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:40,254][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:40,275][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 22
Lang Goal: pack the light brown boot with golden laces in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:38:10,553][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:10,656][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:10,676][root][INFO] - Image embeddings computed.
[2025-02-08 20:38:27,441][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:27,453][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:27,473][root][INFO] - Image embeddings computed.
[2025-02-08 20:38:31,669][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:31,680][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:31,701][root][INFO] - Image embeddings computed.
[2025-02-08 20:38:35,915][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:35,922][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:35,943][root][INFO] - Image embeddings computed.
[2025-02-08 20:38:40,138][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:40,149][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:40,170][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 20
Lang Goal: pack the light brown boot with golden laces in the brown box
Total Reward: 0.933 | Done: False

Mean: 0.506679555976431 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 41/50
[2025-02-08 20:40:18,744][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:40:18,756][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:40:18,777][root][INFO] - Image embeddings computed.
[2025-02-08 20:40:35,831][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:40:35,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:40:35,861][root][INFO] - Image embeddings computed.
[2025-02-08 20:40:40,070][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:40:40,078][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:40:40,098][root][INFO] - Image embeddings computed.
[2025-02-08 20:40:44,304][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:40:44,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:40:44,334][root][INFO] - Image embeddings computed.
[2025-02-08 20:40:48,518][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:40:48,532][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:40:48,553][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 13
Lang Goal: pack the black boot with leopard print in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:42:24,399][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:24,505][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:24,526][root][INFO] - Image embeddings computed.
[2025-02-08 20:42:41,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:41,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:41,403][root][INFO] - Image embeddings computed.
[2025-02-08 20:42:45,597][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:45,709][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:45,730][root][INFO] - Image embeddings computed.
[2025-02-08 20:42:49,931][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:50,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:50,067][root][INFO] - Image embeddings computed.
[2025-02-08 20:42:54,262][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:42:54,363][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:42:54,396][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: pack the black boot with leopard print in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:44:25,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:44:25,530][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:44:25,557][root][INFO] - Image embeddings computed.
[2025-02-08 20:44:42,396][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:44:42,502][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:44:42,528][root][INFO] - Image embeddings computed.
[2025-02-08 20:44:46,728][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:44:46,828][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:44:46,849][root][INFO] - Image embeddings computed.
[2025-02-08 20:44:51,054][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:44:51,152][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:44:51,173][root][INFO] - Image embeddings computed.
[2025-02-08 20:44:55,333][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:44:55,432][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:44:55,453][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: pack the black boot with leopard print in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4943215180257863 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 42/50
[2025-02-08 20:46:38,090][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:46:38,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:46:38,212][root][INFO] - Image embeddings computed.
[2025-02-08 20:46:55,157][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:46:55,257][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:46:55,283][root][INFO] - Image embeddings computed.
[2025-02-08 20:46:59,491][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:46:59,590][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:46:59,616][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:03,853][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:03,948][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:03,969][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:08,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:08,258][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:08,278][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 19
Lang Goal: pack the unicorn toy in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 20:48:43,045][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:48:43,146][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:48:43,173][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:00,048][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:00,148][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:00,168][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:04,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:04,455][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:04,476][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:08,728][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:08,732][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:08,753][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:12,946][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:12,951][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:12,971][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 18
Lang Goal: pack the pepsi wild cherry box in the brown box
Total Reward: 0.667 | Done: False

[2025-02-08 20:50:51,533][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:50:51,634][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:50:51,655][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:08,721][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:08,827][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:08,848][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:13,060][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:13,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:13,180][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:17,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:17,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:17,565][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:21,752][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:21,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:21,883][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: pack the magnifying glass in the brown box
Total Reward: 0.667 | Done: False

[2025-02-08 20:52:58,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:52:58,403][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:52:58,425][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:15,400][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:15,498][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:15,520][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:19,739][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:19,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:19,881][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:24,121][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:24,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:24,237][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:28,421][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:28,530][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:28,552][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 13
Lang Goal: pack the magnifying glass in the brown box
Total Reward: 0.667 | Done: False

Mean: 0.49842497394580726 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 43/50
[2025-02-08 20:55:16,979][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:17,086][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:17,107][root][INFO] - Image embeddings computed.
[2025-02-08 20:55:33,983][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:34,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:34,119][root][INFO] - Image embeddings computed.
[2025-02-08 20:55:38,326][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:38,425][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:38,446][root][INFO] - Image embeddings computed.
[2025-02-08 20:55:42,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:42,808][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:42,829][root][INFO] - Image embeddings computed.
[2025-02-08 20:55:46,985][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:47,085][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:47,105][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 26
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:57:28,156][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:28,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:28,189][root][INFO] - Image embeddings computed.
[2025-02-08 20:57:45,134][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:45,142][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:45,163][root][INFO] - Image embeddings computed.
[2025-02-08 20:57:49,372][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:49,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:49,404][root][INFO] - Image embeddings computed.
[2025-02-08 20:57:53,658][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:53,668][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:53,689][root][INFO] - Image embeddings computed.
[2025-02-08 20:57:57,843][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:57,950][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:57,972][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 24
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:59:38,557][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:59:38,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:59:38,694][root][INFO] - Image embeddings computed.
[2025-02-08 20:59:55,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:59:55,763][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:59:55,784][root][INFO] - Image embeddings computed.
[2025-02-08 20:59:59,997][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:00,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:00,117][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:04,349][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:04,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:04,475][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:08,639][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:08,737][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:08,758][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 25
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4868336954819513 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 44/50
[2025-02-08 21:02:00,642][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:00,758][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:00,792][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:17,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:17,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:17,846][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:22,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:22,165][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:22,186][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:26,387][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:26,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:26,514][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:30,716][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:30,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:30,830][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 26
Lang Goal: pack the office depot box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 21:04:09,668][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:09,772][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:09,794][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:26,653][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:26,752][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:26,774][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:31,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:31,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:31,134][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:35,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:35,427][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:35,448][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:39,654][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:39,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:39,775][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 20
Lang Goal: pack the office depot box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 21:06:16,729][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:16,829][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:16,893][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:33,774][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:33,874][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:33,894][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:38,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:38,222][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:38,242][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:42,435][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:42,529][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:42,550][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:46,752][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:46,845][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:46,866][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 21
Lang Goal: pack the office depot box in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4757692933119069 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 45/50
[2025-02-08 21:08:38,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:38,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:38,690][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:55,349][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:55,360][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:55,381][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:59,578][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:59,587][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:59,608][root][INFO] - Image embeddings computed.
[2025-02-08 21:09:03,843][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:09:03,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:09:03,876][root][INFO] - Image embeddings computed.
[2025-02-08 21:09:08,101][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:09:08,114][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:09:08,135][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 18
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 21:10:42,309][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:42,322][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:42,342][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:59,335][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:59,340][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:59,360][root][INFO] - Image embeddings computed.
[2025-02-08 21:11:03,567][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:11:03,577][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:11:03,597][root][INFO] - Image embeddings computed.
[2025-02-08 21:11:07,817][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:11:07,824][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:11:07,844][root][INFO] - Image embeddings computed.
[2025-02-08 21:11:12,071][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:11:12,079][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:11:12,102][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 24
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 21:12:48,461][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:48,572][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:48,592][root][INFO] - Image embeddings computed.
[2025-02-08 21:13:05,552][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:05,686][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:05,706][root][INFO] - Image embeddings computed.
[2025-02-08 21:13:09,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:10,013][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:10,034][root][INFO] - Image embeddings computed.
[2025-02-08 21:13:14,259][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:14,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:14,402][root][INFO] - Image embeddings computed.
[2025-02-08 21:13:18,625][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:18,732][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:18,753][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 23
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 21:14:59,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:59,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:00,004][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:16,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:16,849][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:16,870][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:21,080][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:21,175][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:21,197][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:25,410][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:25,507][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:25,537][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:29,759][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:29,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:29,878][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 21
Lang Goal: pack the red and white striped towel in the brown box
Total Reward: 0.400 | Done: False

[2025-02-08 21:17:08,787][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:08,889][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:08,911][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:25,532][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:25,639][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:25,661][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:29,873][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:29,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:30,002][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:34,215][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:34,315][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:34,337][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:38,572][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:38,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:38,687][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 13
Lang Goal: pack the light brown boot with golden laces in the brown box
Total Reward: 0.400 | Done: False

[2025-02-08 21:19:18,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:18,354][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:18,375][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:35,023][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:35,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:35,142][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:39,355][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:39,454][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:39,475][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:43,729][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:43,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:43,846][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:48,082][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:48,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:48,203][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 13
Lang Goal: pack the light brown boot with golden laces in the brown box
Total Reward: 0.404 | Done: False

Mean: 0.4741781238309016 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 46/50
[2025-02-08 21:21:35,498][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:35,598][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:35,629][root][INFO] - Image embeddings computed.
[2025-02-08 21:21:52,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:52,571][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:52,591][root][INFO] - Image embeddings computed.
[2025-02-08 21:21:56,787][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:56,888][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:56,909][root][INFO] - Image embeddings computed.
[2025-02-08 21:22:01,117][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:01,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:01,236][root][INFO] - Image embeddings computed.
[2025-02-08 21:22:05,434][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:05,534][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:05,554][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 19
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 21:23:45,620][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:23:45,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:23:45,742][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:02,388][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:02,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:02,510][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:06,696][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:06,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:06,815][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:11,020][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:11,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:11,141][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:15,342][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:15,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:15,465][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 17
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4638699037476211 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 47/50
[2025-02-08 21:26:00,778][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:00,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:00,898][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:17,782][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:17,887][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:17,908][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:22,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:22,219][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:22,239][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:26,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:26,556][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:26,577][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:30,782][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:30,885][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:30,906][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 20
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 21:28:09,550][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:09,572][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:09,594][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:27,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:27,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:27,038][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:31,224][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:31,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:31,254][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:35,466][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:35,469][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:35,490][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:39,685][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:39,784][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:39,806][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 14
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 21:30:22,532][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:22,640][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:22,661][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:39,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:39,695][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:39,716][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:43,915][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:44,029][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:44,051][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:48,256][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:48,354][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:48,377][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:52,569][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:52,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:52,690][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 17
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.45400033132745893 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 48/50
[2025-02-08 21:32:47,471][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:47,582][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:47,604][root][INFO] - Image embeddings computed.
[2025-02-08 21:33:04,763][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:33:04,874][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:33:04,896][root][INFO] - Image embeddings computed.
[2025-02-08 21:33:09,094][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:33:09,194][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:33:09,215][root][INFO] - Image embeddings computed.
[2025-02-08 21:33:13,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:33:13,483][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:33:13,513][root][INFO] - Image embeddings computed.
[2025-02-08 21:33:17,760][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:33:17,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:33:17,881][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 21:34:57,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:58,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:58,051][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:14,868][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:14,968][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:14,989][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:19,174][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:19,273][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:19,301][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:23,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:23,603][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:23,624][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:27,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:27,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:28,007][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 19
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 21:37:11,909][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:12,008][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:12,029][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:28,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:28,689][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:28,710][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:32,883][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:32,984][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:33,005][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:37,176][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:37,286][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:37,312][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:41,543][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:41,653][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:41,674][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 19
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4445419910914703 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 49/50
[2025-02-08 21:39:28,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:28,425][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:28,446][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:45,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:45,370][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:45,391][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:49,588][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:49,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:49,703][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:53,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:54,002][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:54,024][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:58,221][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:58,320][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:58,341][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 9
Lang Goal: pack the bull figure in the brown box
Total Reward: 0.333 | Done: False

[2025-02-08 21:41:37,078][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:37,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:37,109][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:53,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:53,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:53,731][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:57,928][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:57,938][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:57,958][root][INFO] - Image embeddings computed.
[2025-02-08 21:42:02,159][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:42:02,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:42:02,189][root][INFO] - Image embeddings computed.
[2025-02-08 21:42:06,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:42:06,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:42:06,415][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 12
Lang Goal: pack the mario figure in the brown box
Total Reward: 0.667 | Done: False

[2025-02-08 21:43:46,665][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:46,765][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:46,786][root][INFO] - Image embeddings computed.
[2025-02-08 21:44:03,369][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:44:03,477][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:44:03,497][root][INFO] - Image embeddings computed.
[2025-02-08 21:44:07,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:44:07,789][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:44:07,810][root][INFO] - Image embeddings computed.
[2025-02-08 21:44:12,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:44:12,108][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:44:12,128][root][INFO] - Image embeddings computed.
[2025-02-08 21:44:16,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:44:16,446][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:44:16,467][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 11
Lang Goal: pack the black shoe with green stripes in the brown box
Total Reward: 0.944 | Done: False

[2025-02-08 21:45:59,026][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:59,043][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:59,065][root][INFO] - Image embeddings computed.
[2025-02-08 21:46:15,515][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:46:15,525][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:46:15,547][root][INFO] - Image embeddings computed.
[2025-02-08 21:46:19,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:46:19,757][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:46:19,778][root][INFO] - Image embeddings computed.
[2025-02-08 21:46:23,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:46:24,003][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:46:24,024][root][INFO] - Image embeddings computed.
[2025-02-08 21:46:28,212][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:46:28,221][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:46:28,242][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 14
Lang Goal: pack the black shoe with green stripes in the brown box
Total Reward: 0.667 | Done: False

Mean: 0.4490751477358621 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
Test: 50/50
[2025-02-08 21:48:23,067][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:23,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:23,195][root][INFO] - Image embeddings computed.
[2025-02-08 21:48:40,187][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:40,295][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:40,322][root][INFO] - Image embeddings computed.
[2025-02-08 21:48:44,549][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:44,649][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:44,669][root][INFO] - Image embeddings computed.
[2025-02-08 21:48:48,867][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:48,878][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:48,899][root][INFO] - Image embeddings computed.
[2025-02-08 21:48:53,097][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:53,106][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:53,126][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: pack the black shoe with green stripes in the brown box
Total Reward: 0.991 | Done: True

Mean: 0.45990845959595966 | Task: packing-seen-google-objects-seq | Ckpt: steps=00080-val_loss=0.00018048.ckpt
[2025-02-08 21:50:45,499][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 21:50:45,669][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 21:50:52,462][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-08 21:50:57,802][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 21:50:57,951][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 21:51:04,593][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-08 21:51:14,485][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 21:51:14,647][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 21:51:21,137][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-08 21:51:31,130][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 21:51:31,304][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 21:51:38,070][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: packing-seen-google-objects-seq-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/packing-seen-google-objects-seq-clipfit-n10-train/checkpoints/steps=00120-val_loss=0.00018318.ckpt
Test: 1/50
[2025-02-08 21:52:28,947][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:29,062][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:29,085][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:45,903][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:46,001][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:46,022][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:50,201][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:50,305][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:50,326][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:54,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:54,630][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:54,651][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:58,865][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:58,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:58,980][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 26
Lang Goal: pack the scissors in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 21:54:43,057][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:43,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:43,108][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:59,854][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:59,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:59,883][root][INFO] - Image embeddings computed.
[2025-02-08 21:55:04,079][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:55:04,082][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:55:04,103][root][INFO] - Image embeddings computed.
[2025-02-08 21:55:08,317][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:55:08,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:55:08,341][root][INFO] - Image embeddings computed.
[2025-02-08 21:55:12,563][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:55:12,570][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:55:12,591][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 27
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.400 | Done: False

[2025-02-08 21:56:59,146][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:59,251][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:59,273][root][INFO] - Image embeddings computed.
[2025-02-08 21:57:16,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:57:16,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:57:16,129][root][INFO] - Image embeddings computed.
[2025-02-08 21:57:20,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:57:20,420][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:57:20,442][root][INFO] - Image embeddings computed.
[2025-02-08 21:57:24,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:57:24,758][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:57:24,780][root][INFO] - Image embeddings computed.
[2025-02-08 21:57:29,012][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:57:29,111][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:57:29,133][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 25
Lang Goal: pack the lion figure in the brown box
Total Reward: 0.600 | Done: False

[2025-02-08 21:59:17,910][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:18,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:18,039][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:34,729][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:34,828][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:34,859][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:39,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:39,163][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:39,186][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:43,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:43,501][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:43,523][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:47,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:47,849][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:47,871][root][INFO] - Image embeddings computed.
The number of original masks: 54
The number of filtered masks: 29
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.600 | Done: False

[2025-02-08 22:01:37,081][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:37,084][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:37,105][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:53,595][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:53,691][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:53,711][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:57,921][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:58,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:58,038][root][INFO] - Image embeddings computed.
[2025-02-08 22:02:02,248][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:02:02,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:02:02,368][root][INFO] - Image embeddings computed.
[2025-02-08 22:02:06,584][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:02:06,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:02:06,702][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 24
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.600 | Done: False

[2025-02-08 22:03:54,494][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:54,598][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:54,620][root][INFO] - Image embeddings computed.
[2025-02-08 22:04:11,249][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:04:11,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:04:11,404][root][INFO] - Image embeddings computed.
[2025-02-08 22:04:15,613][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:04:15,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:04:15,734][root][INFO] - Image embeddings computed.
[2025-02-08 22:04:19,942][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:04:20,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:04:20,068][root][INFO] - Image embeddings computed.
[2025-02-08 22:04:24,297][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:04:24,400][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:04:24,423][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 23
Lang Goal: pack the black razer mouse in the brown box
Total Reward: 0.600 | Done: False

Mean: 0.6000000000000001 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 2/50
[2025-02-08 22:06:18,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:18,540][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:18,562][root][INFO] - Image embeddings computed.
[2025-02-08 22:06:35,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:35,856][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:35,878][root][INFO] - Image embeddings computed.
[2025-02-08 22:06:40,060][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:40,166][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:40,188][root][INFO] - Image embeddings computed.
[2025-02-08 22:06:44,355][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:44,458][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:44,480][root][INFO] - Image embeddings computed.
[2025-02-08 22:06:48,660][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:48,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:48,782][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 21
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:08:37,160][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:37,271][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:37,293][root][INFO] - Image embeddings computed.
[2025-02-08 22:08:54,481][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:54,585][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:54,612][root][INFO] - Image embeddings computed.
[2025-02-08 22:08:58,798][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:58,897][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:58,919][root][INFO] - Image embeddings computed.
[2025-02-08 22:09:03,087][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:09:03,190][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:09:03,212][root][INFO] - Image embeddings computed.
[2025-02-08 22:09:07,389][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:09:07,494][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:09:07,515][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 20
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:10:56,107][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:56,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:56,238][root][INFO] - Image embeddings computed.
[2025-02-08 22:11:13,399][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:11:13,498][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:11:13,521][root][INFO] - Image embeddings computed.
[2025-02-08 22:11:17,709][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:11:17,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:11:17,832][root][INFO] - Image embeddings computed.
[2025-02-08 22:11:21,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:11:22,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:11:22,152][root][INFO] - Image embeddings computed.
[2025-02-08 22:11:26,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:11:26,423][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:11:26,444][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:13:10,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:13:10,789][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:13:10,810][root][INFO] - Image embeddings computed.
[2025-02-08 22:13:27,900][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:13:27,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:13:27,930][root][INFO] - Image embeddings computed.
[2025-02-08 22:13:32,114][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:13:32,124][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:13:32,145][root][INFO] - Image embeddings computed.
[2025-02-08 22:13:36,328][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:13:36,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:13:36,358][root][INFO] - Image embeddings computed.
[2025-02-08 22:13:40,542][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:13:40,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:13:40,572][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:15:21,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:21,923][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:21,944][root][INFO] - Image embeddings computed.
[2025-02-08 22:15:39,046][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:39,053][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:39,074][root][INFO] - Image embeddings computed.
[2025-02-08 22:15:43,259][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:43,269][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:43,290][root][INFO] - Image embeddings computed.
[2025-02-08 22:15:47,476][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:47,488][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:47,509][root][INFO] - Image embeddings computed.
[2025-02-08 22:15:51,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:51,702][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:51,723][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.30000000000000004 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 3/50
[2025-02-08 22:17:47,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:17:47,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:17:48,007][root][INFO] - Image embeddings computed.
[2025-02-08 22:18:04,796][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:04,895][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:04,917][root][INFO] - Image embeddings computed.
[2025-02-08 22:18:09,082][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:09,183][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:09,205][root][INFO] - Image embeddings computed.
[2025-02-08 22:18:13,406][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:13,506][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:13,527][root][INFO] - Image embeddings computed.
[2025-02-08 22:18:17,721][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:17,820][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:17,841][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 17
Lang Goal: pack the can opener in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.5333333333333333 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 4/50
[2025-02-08 22:20:09,864][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:20:09,880][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:20:09,900][root][INFO] - Image embeddings computed.
[2025-02-08 22:20:26,749][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:20:26,759][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:20:26,780][root][INFO] - Image embeddings computed.
[2025-02-08 22:20:30,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:20:30,966][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:20:30,986][root][INFO] - Image embeddings computed.
[2025-02-08 22:20:35,203][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:20:35,213][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:20:35,233][root][INFO] - Image embeddings computed.
[2025-02-08 22:20:39,414][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:20:39,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:20:39,445][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: pack the office depot box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:22:21,255][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:22:21,268][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:22:21,288][root][INFO] - Image embeddings computed.
[2025-02-08 22:22:38,102][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:22:38,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:22:38,140][root][INFO] - Image embeddings computed.
[2025-02-08 22:22:42,318][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:22:42,323][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:22:42,343][root][INFO] - Image embeddings computed.
[2025-02-08 22:22:46,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:22:46,558][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:22:46,579][root][INFO] - Image embeddings computed.
[2025-02-08 22:22:50,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:22:50,774][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:22:50,794][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 16
Lang Goal: pack the office depot box in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.4 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 5/50
[2025-02-08 22:24:45,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:24:45,470][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:24:45,490][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:02,216][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:02,225][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:02,246][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:06,452][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:06,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:06,482][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:10,689][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:10,693][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:10,714][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:14,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:14,910][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:14,931][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:26:59,253][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:26:59,265][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:26:59,285][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:15,849][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:15,853][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:15,873][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:20,084][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:20,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:20,109][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:24,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:24,331][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:24,351][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:28,538][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:28,547][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:28,568][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 19
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:29:10,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:29:10,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:29:10,884][root][INFO] - Image embeddings computed.
[2025-02-08 22:29:28,676][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:29:28,685][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:29:28,706][root][INFO] - Image embeddings computed.
[2025-02-08 22:29:32,913][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:29:32,917][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:29:32,938][root][INFO] - Image embeddings computed.
[2025-02-08 22:29:37,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:29:37,145][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:29:37,166][root][INFO] - Image embeddings computed.
[2025-02-08 22:29:41,356][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:29:41,361][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:29:41,381][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 18
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:31:27,102][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:27,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:27,137][root][INFO] - Image embeddings computed.
[2025-02-08 22:31:44,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:44,828][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:44,850][root][INFO] - Image embeddings computed.
[2025-02-08 22:31:49,056][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:49,060][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:49,081][root][INFO] - Image embeddings computed.
[2025-02-08 22:31:53,283][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:53,292][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:53,313][root][INFO] - Image embeddings computed.
[2025-02-08 22:31:57,496][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:57,605][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:57,626][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 17
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:33:41,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:33:41,870][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:33:41,890][root][INFO] - Image embeddings computed.
[2025-02-08 22:33:58,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:33:58,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:33:58,463][root][INFO] - Image embeddings computed.
[2025-02-08 22:34:02,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:34:02,679][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:34:02,699][root][INFO] - Image embeddings computed.
[2025-02-08 22:34:06,894][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:34:06,902][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:34:06,922][root][INFO] - Image embeddings computed.
[2025-02-08 22:34:11,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:34:11,116][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:34:11,136][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 15
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:35:54,313][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:35:54,331][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:35:54,351][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:11,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:11,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:11,140][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:15,356][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:15,360][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:15,381][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:19,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:19,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:19,610][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:23,802][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:23,811][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:23,832][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 16
Lang Goal: pack the rhino figure in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.32 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 6/50
[2025-02-08 22:38:18,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:38:18,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:38:18,947][root][INFO] - Image embeddings computed.
[2025-02-08 22:38:35,787][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:38:35,796][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:38:35,817][root][INFO] - Image embeddings computed.
[2025-02-08 22:38:40,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:38:40,022][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:38:40,042][root][INFO] - Image embeddings computed.
[2025-02-08 22:38:44,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:38:44,257][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:38:44,278][root][INFO] - Image embeddings computed.
[2025-02-08 22:38:48,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:38:48,485][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:38:48,506][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:40:40,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:40:40,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:40:40,288][root][INFO] - Image embeddings computed.
[2025-02-08 22:40:57,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:40:57,335][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:40:57,363][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:01,543][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:01,646][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:01,676][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:05,873][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:06,007][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:06,028][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:10,219][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:10,319][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:10,340][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 16
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:42:55,842][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:42:55,856][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:42:55,876][root][INFO] - Image embeddings computed.
[2025-02-08 22:43:12,681][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:12,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:12,711][root][INFO] - Image embeddings computed.
[2025-02-08 22:43:16,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:16,898][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:16,919][root][INFO] - Image embeddings computed.
[2025-02-08 22:43:21,111][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:21,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:21,136][root][INFO] - Image embeddings computed.
[2025-02-08 22:43:25,336][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:25,340][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:25,361][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:45:10,973][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:10,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:11,007][root][INFO] - Image embeddings computed.
[2025-02-08 22:45:27,817][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:27,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:27,847][root][INFO] - Image embeddings computed.
[2025-02-08 22:45:32,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:32,041][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:32,061][root][INFO] - Image embeddings computed.
[2025-02-08 22:45:36,261][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:36,271][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:36,292][root][INFO] - Image embeddings computed.
[2025-02-08 22:45:40,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:40,496][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:40,517][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 17
Lang Goal: pack the hammer in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.26666666666666666 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 7/50
[2025-02-08 22:47:35,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:47:35,020][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:47:35,041][root][INFO] - Image embeddings computed.
[2025-02-08 22:47:52,146][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:47:52,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:47:52,175][root][INFO] - Image embeddings computed.
[2025-02-08 22:47:56,388][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:47:56,398][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:47:56,442][root][INFO] - Image embeddings computed.
[2025-02-08 22:48:00,650][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:00,661][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:00,681][root][INFO] - Image embeddings computed.
[2025-02-08 22:48:04,853][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:04,861][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:04,882][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 17
Lang Goal: pack the crayon box in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:49:50,694][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:49:50,706][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:49:50,727][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:07,176][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:07,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:07,207][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:11,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:11,428][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:11,449][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:15,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:15,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:15,686][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:19,891][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:19,901][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:19,922][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: pack the crayon box in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.37142857142857144 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 8/50
[2025-02-08 22:52:13,368][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:13,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:13,401][root][INFO] - Image embeddings computed.
[2025-02-08 22:52:30,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:30,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:30,180][root][INFO] - Image embeddings computed.
[2025-02-08 22:52:34,337][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:34,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:34,368][root][INFO] - Image embeddings computed.
[2025-02-08 22:52:38,566][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:38,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:38,683][root][INFO] - Image embeddings computed.
[2025-02-08 22:52:42,837][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:42,936][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:42,957][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 16
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:54:29,243][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:54:29,255][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:54:29,275][root][INFO] - Image embeddings computed.
[2025-02-08 22:54:45,926][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:54:45,935][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:54:45,956][root][INFO] - Image embeddings computed.
[2025-02-08 22:54:50,134][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:54:50,144][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:54:50,164][root][INFO] - Image embeddings computed.
[2025-02-08 22:54:54,351][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:54:54,357][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:54:54,378][root][INFO] - Image embeddings computed.
[2025-02-08 22:54:58,544][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:54:58,551][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:54:58,571][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 19
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.325 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 9/50
[2025-02-08 22:57:04,676][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:04,779][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:04,801][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:21,632][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:21,736][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:21,758][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:25,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:26,039][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:26,061][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:30,266][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:30,386][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:30,408][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:34,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:34,803][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:34,830][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 22
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:59:21,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:21,581][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:21,603][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:38,120][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:38,130][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:38,151][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:42,346][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:42,355][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:42,376][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:46,579][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:46,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:46,610][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:50,817][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:50,829][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:50,850][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 18
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 23:01:40,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:01:40,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:01:40,041][root][INFO] - Image embeddings computed.
[2025-02-08 23:01:56,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:01:56,941][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:01:56,962][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:01,161][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:01,258][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:01,280][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:05,498][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:05,700][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:05,720][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:09,926][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:10,131][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:10,154][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 18
Lang Goal: pack the dog statue in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 23:04:03,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:03,719][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:03,740][root][INFO] - Image embeddings computed.
[2025-02-08 23:04:20,190][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:20,199][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:20,220][root][INFO] - Image embeddings computed.
[2025-02-08 23:04:24,412][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:24,423][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:24,444][root][INFO] - Image embeddings computed.
[2025-02-08 23:04:28,647][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:28,658][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:28,678][root][INFO] - Image embeddings computed.
[2025-02-08 23:04:32,885][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:32,896][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:32,916][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 18
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 23:06:25,847][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:25,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:25,883][root][INFO] - Image embeddings computed.
[2025-02-08 23:06:42,398][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:42,405][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:42,425][root][INFO] - Image embeddings computed.
[2025-02-08 23:06:46,614][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:46,623][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:46,644][root][INFO] - Image embeddings computed.
[2025-02-08 23:06:50,847][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:50,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:50,877][root][INFO] - Image embeddings computed.
[2025-02-08 23:06:55,093][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:55,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:55,124][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 16
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.200 | Done: False

[2025-02-08 23:08:42,742][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:08:42,755][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:08:42,775][root][INFO] - Image embeddings computed.
[2025-02-08 23:08:59,269][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:08:59,280][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:08:59,301][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:03,491][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:03,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:03,521][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:07,725][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:07,734][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:07,755][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:11,959][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:11,969][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:11,990][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 21
Lang Goal: pack the honey dipper in the brown box
Total Reward: 0.200 | Done: False

Mean: 0.3111111111111111 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 10/50
[2025-02-08 23:11:18,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:18,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:18,979][root][INFO] - Image embeddings computed.
[2025-02-08 23:11:35,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:35,960][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:35,982][root][INFO] - Image embeddings computed.
[2025-02-08 23:11:40,170][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:40,276][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:40,296][root][INFO] - Image embeddings computed.
[2025-02-08 23:11:44,502][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:44,610][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:44,631][root][INFO] - Image embeddings computed.
[2025-02-08 23:11:48,806][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:48,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:48,948][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 20
Lang Goal: pack the yoshi figure in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 23:13:38,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:13:38,270][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:13:38,291][root][INFO] - Image embeddings computed.
[2025-02-08 23:13:55,166][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:13:55,180][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:13:55,200][root][INFO] - Image embeddings computed.
[2025-02-08 23:13:59,404][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:13:59,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:13:59,435][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:03,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:03,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:03,690][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:07,866][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:07,876][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:07,896][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 21
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 23:15:57,452][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:15:57,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:15:57,488][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:14,142][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:14,152][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:14,172][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:18,383][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:18,393][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:18,413][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:22,630][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:22,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:22,661][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:26,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:26,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:26,875][root][INFO] - Image embeddings computed.
The number of original masks: 48
The number of filtered masks: 24
Lang Goal: pack the unicorn toy in the brown box
Total Reward: 0.750 | Done: False

[2025-02-08 23:18:16,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:16,526][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:16,548][root][INFO] - Image embeddings computed.
[2025-02-08 23:18:33,133][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:33,142][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:33,163][root][INFO] - Image embeddings computed.
[2025-02-08 23:18:37,369][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:37,378][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:37,399][root][INFO] - Image embeddings computed.
[2025-02-08 23:18:41,613][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:41,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:41,643][root][INFO] - Image embeddings computed.
[2025-02-08 23:18:45,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:45,867][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:45,888][root][INFO] - Image embeddings computed.
The number of original masks: 48
The number of filtered masks: 24
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.750 | Done: False

[2025-02-08 23:20:36,683][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:20:36,786][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:20:36,807][root][INFO] - Image embeddings computed.
[2025-02-08 23:20:53,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:20:53,453][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:20:53,473][root][INFO] - Image embeddings computed.
[2025-02-08 23:20:57,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:20:57,799][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:20:57,819][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:02,053][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:02,164][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:02,185][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:06,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:06,524][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:06,544][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 24
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.776 | Done: False

Mean: 0.35760416666666667 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 11/50
[2025-02-08 23:23:12,535][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:12,644][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:12,665][root][INFO] - Image embeddings computed.
[2025-02-08 23:23:29,795][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:29,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:29,919][root][INFO] - Image embeddings computed.
[2025-02-08 23:23:34,079][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:34,194][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:34,215][root][INFO] - Image embeddings computed.
[2025-02-08 23:23:38,429][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:38,577][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:38,597][root][INFO] - Image embeddings computed.
[2025-02-08 23:23:42,796][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:42,892][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:42,913][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: pack the light brown boot with golden laces in the brown box
Total Reward: 0.039 | Done: False

[2025-02-08 23:25:38,924][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:25:39,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:25:39,047][root][INFO] - Image embeddings computed.
[2025-02-08 23:25:56,210][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:25:56,309][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:25:56,331][root][INFO] - Image embeddings computed.
[2025-02-08 23:26:00,535][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:26:00,634][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:26:00,655][root][INFO] - Image embeddings computed.
[2025-02-08 23:26:04,871][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:26:04,978][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:26:05,000][root][INFO] - Image embeddings computed.
[2025-02-08 23:26:09,210][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:26:09,309][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:26:09,331][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 18
Lang Goal: pack the light brown boot with golden laces in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 23:28:04,105][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:04,211][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:04,233][root][INFO] - Image embeddings computed.
[2025-02-08 23:28:21,044][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:21,190][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:21,212][root][INFO] - Image embeddings computed.
[2025-02-08 23:28:25,397][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:25,549][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:25,571][root][INFO] - Image embeddings computed.
[2025-02-08 23:28:29,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:29,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:29,922][root][INFO] - Image embeddings computed.
[2025-02-08 23:28:34,107][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:34,208][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:34,230][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: pack the red cup in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 23:30:31,990][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:32,190][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:32,218][root][INFO] - Image embeddings computed.
[2025-02-08 23:30:49,221][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:49,329][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:49,351][root][INFO] - Image embeddings computed.
[2025-02-08 23:30:53,518][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:53,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:53,644][root][INFO] - Image embeddings computed.
[2025-02-08 23:30:57,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:58,008][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:58,030][root][INFO] - Image embeddings computed.
[2025-02-08 23:31:02,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:31:02,332][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:31:02,354][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: pack the red cup in the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 23:32:59,960][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:33:00,114][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:33:00,135][root][INFO] - Image embeddings computed.
[2025-02-08 23:33:17,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:33:17,105][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:33:17,127][root][INFO] - Image embeddings computed.
[2025-02-08 23:33:21,303][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:33:21,403][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:33:21,426][root][INFO] - Image embeddings computed.
[2025-02-08 23:33:25,680][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:33:25,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:33:25,800][root][INFO] - Image embeddings computed.
[2025-02-08 23:33:29,989][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:33:30,094][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:33:30,115][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 17
Lang Goal: pack the red cup in the brown box
Total Reward: 0.250 | Done: False

Mean: 0.3478219696969697 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 12/50
[2025-02-08 23:35:39,165][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:35:39,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:35:39,289][root][INFO] - Image embeddings computed.
[2025-02-08 23:35:56,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:35:56,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:35:56,563][root][INFO] - Image embeddings computed.
[2025-02-08 23:36:00,752][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:36:00,850][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:36:00,871][root][INFO] - Image embeddings computed.
[2025-02-08 23:36:05,058][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:36:05,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:36:05,260][root][INFO] - Image embeddings computed.
[2025-02-08 23:36:09,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:36:09,564][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:36:09,585][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 23:38:00,184][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:00,204][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:00,224][root][INFO] - Image embeddings computed.
[2025-02-08 23:38:17,338][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:17,348][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:17,369][root][INFO] - Image embeddings computed.
[2025-02-08 23:38:21,553][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:21,557][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:21,578][root][INFO] - Image embeddings computed.
[2025-02-08 23:38:25,768][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:25,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:25,793][root][INFO] - Image embeddings computed.
[2025-02-08 23:38:29,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:29,995][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:30,015][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 23:40:21,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:40:21,355][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:40:21,375][root][INFO] - Image embeddings computed.
[2025-02-08 23:40:38,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:40:38,364][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:40:38,384][root][INFO] - Image embeddings computed.
[2025-02-08 23:40:42,582][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:40:42,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:40:42,781][root][INFO] - Image embeddings computed.
[2025-02-08 23:40:46,954][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:40:47,051][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:40:47,071][root][INFO] - Image embeddings computed.
[2025-02-08 23:40:51,282][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:40:51,375][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:40:51,396][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.36050347222222223 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 13/50
[2025-02-08 23:42:53,811][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:42:53,949][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:42:53,971][root][INFO] - Image embeddings computed.
[2025-02-08 23:43:10,719][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:10,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:10,868][root][INFO] - Image embeddings computed.
[2025-02-08 23:43:15,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:15,173][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:15,195][root][INFO] - Image embeddings computed.
[2025-02-08 23:43:19,402][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:19,501][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:19,529][root][INFO] - Image embeddings computed.
[2025-02-08 23:43:23,713][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:23,817][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:23,838][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 14
Lang Goal: pack the porcelain cup in the brown box
Warning: movej exceeded 5 second timeout. Skipping.
Total Reward: 0.000 | Done: True

Mean: 0.3327724358974359 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 14/50
[2025-02-08 23:45:34,774][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:45:34,882][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:45:34,904][root][INFO] - Image embeddings computed.
[2025-02-08 23:45:51,768][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:45:51,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:45:51,884][root][INFO] - Image embeddings computed.
[2025-02-08 23:45:56,076][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:45:56,169][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:45:56,191][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:00,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:00,480][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:00,502][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:04,724][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:04,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:04,849][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 15
Lang Goal: pack the white razer mouse in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 23:48:02,734][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:48:02,756][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:48:02,777][root][INFO] - Image embeddings computed.
[2025-02-08 23:48:19,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:48:19,330][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:48:19,350][root][INFO] - Image embeddings computed.
[2025-02-08 23:48:23,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:48:23,549][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:48:23,569][root][INFO] - Image embeddings computed.
[2025-02-08 23:48:27,760][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:48:27,770][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:48:27,790][root][INFO] - Image embeddings computed.
[2025-02-08 23:48:31,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:48:32,000][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:48:32,020][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: pack the white razer mouse in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 23:50:23,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:50:23,743][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:50:23,764][root][INFO] - Image embeddings computed.
[2025-02-08 23:50:40,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:50:40,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:50:40,415][root][INFO] - Image embeddings computed.
[2025-02-08 23:50:44,604][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:50:44,614][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:50:44,634][root][INFO] - Image embeddings computed.
[2025-02-08 23:50:48,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:50:48,840][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:50:48,860][root][INFO] - Image embeddings computed.
[2025-02-08 23:50:53,060][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:50:53,069][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:50:53,089][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: pack the white razer mouse in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.3090029761904762 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 15/50
[2025-02-08 23:52:59,632][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:52:59,736][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:52:59,757][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:16,628][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:16,729][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:16,750][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:20,931][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:21,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:21,067][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:25,282][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:25,416][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:25,436][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:29,653][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:29,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:29,813][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 15
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 23:55:28,972][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:29,109][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:29,136][root][INFO] - Image embeddings computed.
[2025-02-08 23:55:46,133][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:46,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:46,255][root][INFO] - Image embeddings computed.
[2025-02-08 23:55:50,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:50,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:50,576][root][INFO] - Image embeddings computed.
[2025-02-08 23:55:54,782][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:54,880][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:54,903][root][INFO] - Image embeddings computed.
[2025-02-08 23:55:59,122][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:59,226][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:59,248][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 16
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 23:58:00,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:01,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:01,052][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:18,069][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:18,170][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:18,191][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:22,383][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:22,483][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:22,504][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:26,732][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:26,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:26,852][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:31,071][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:31,171][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:31,192][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 20
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.2884027777777778 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 16/50
[2025-02-09 00:00:37,715][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:00:37,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:00:37,852][root][INFO] - Image embeddings computed.
[2025-02-09 00:00:54,974][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:00:55,067][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:00:55,087][root][INFO] - Image embeddings computed.
[2025-02-09 00:00:59,268][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:00:59,377][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:00:59,397][root][INFO] - Image embeddings computed.
[2025-02-09 00:01:03,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:03,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:03,702][root][INFO] - Image embeddings computed.
[2025-02-09 00:01:07,888][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:07,981][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:08,002][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 11
Lang Goal: pack the unicorn toy in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.3328776041666667 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 17/50
[2025-02-09 00:03:14,560][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:14,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:14,684][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:31,456][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:31,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:31,610][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:35,803][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:35,916][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:35,937][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:40,126][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:40,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:40,254][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:44,414][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:44,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:44,540][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 14
Lang Goal: pack the toy train in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 00:05:38,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:05:38,559][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:05:38,580][root][INFO] - Image embeddings computed.
[2025-02-09 00:05:55,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:05:55,268][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:05:55,289][root][INFO] - Image embeddings computed.
[2025-02-09 00:05:59,487][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:05:59,492][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:05:59,513][root][INFO] - Image embeddings computed.
[2025-02-09 00:06:03,707][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:06:03,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:06:03,749][root][INFO] - Image embeddings computed.
[2025-02-09 00:06:07,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:06:07,949][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:06:07,969][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 18
Lang Goal: pack the toy train in the brown box
Total Reward: 0.210 | Done: False

[2025-02-09 00:08:03,252][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:03,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:03,387][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:19,952][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:20,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:20,077][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:24,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:24,384][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:24,404][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:28,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:28,728][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:28,749][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:32,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:33,081][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:33,101][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 19
Lang Goal: pack the toy train in the brown box
Total Reward: 0.317 | Done: False

[2025-02-09 00:10:29,430][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:29,553][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:29,574][root][INFO] - Image embeddings computed.
[2025-02-09 00:10:46,111][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:46,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:46,240][root][INFO] - Image embeddings computed.
[2025-02-09 00:10:50,443][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:50,588][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:50,609][root][INFO] - Image embeddings computed.
[2025-02-09 00:10:54,810][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:54,929][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:54,950][root][INFO] - Image embeddings computed.
[2025-02-09 00:10:59,134][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:59,228][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:59,248][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 15
Lang Goal: pack the toy train in the brown box
Total Reward: 0.317 | Done: False

Mean: 0.3319240196078431 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 18/50
[2025-02-09 00:13:01,525][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:01,638][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:01,659][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:18,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:18,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:18,532][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:22,740][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:22,844][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:22,874][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:27,089][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:27,189][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:27,210][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:31,413][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:31,506][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:31,527][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 13
Lang Goal: pack the purple tape in the brown box
Total Reward: 0.500 | Done: False

[2025-02-09 00:15:31,332][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:31,470][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:31,491][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:48,272][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:48,429][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:48,450][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:52,654][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:52,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:52,774][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:57,027][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:57,124][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:57,145][root][INFO] - Image embeddings computed.
[2025-02-09 00:16:01,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:16:01,434][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:16:01,455][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: pack the yoshi figure in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.3690393518518518 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 19/50
[2025-02-09 00:18:14,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:14,765][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:14,786][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:31,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:31,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:31,645][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:35,824][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:35,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:35,973][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:40,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:40,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:40,294][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:44,468][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:44,568][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:44,588][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 28
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 00:20:39,619][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:39,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:39,644][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:56,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:56,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:56,142][root][INFO] - Image embeddings computed.
[2025-02-09 00:21:00,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:21:00,330][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:21:00,350][root][INFO] - Image embeddings computed.
[2025-02-09 00:21:04,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:21:04,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:21:04,582][root][INFO] - Image embeddings computed.
[2025-02-09 00:21:08,754][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:21:08,759][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:21:08,779][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 31
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.008 | Done: False

[2025-02-09 00:23:06,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:07,002][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:07,025][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:23,851][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:23,955][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:23,976][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:28,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:28,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:28,296][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:32,523][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:32,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:32,670][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:36,844][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:36,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:36,979][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 29
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.008 | Done: False

[2025-02-09 00:25:38,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:38,039][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:38,060][root][INFO] - Image embeddings computed.
[2025-02-09 00:25:54,739][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:54,743][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:54,764][root][INFO] - Image embeddings computed.
[2025-02-09 00:25:58,952][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:59,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:59,066][root][INFO] - Image embeddings computed.
[2025-02-09 00:26:03,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:26:03,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:26:03,403][root][INFO] - Image embeddings computed.
[2025-02-09 00:26:07,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:26:07,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:26:07,703][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 28
Lang Goal: pack the silver tape in the brown box
Total Reward: 0.250 | Done: False

[2025-02-09 00:28:06,772][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:06,906][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:06,935][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:23,639][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:23,732][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:23,754][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:27,951][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:28,068][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:28,090][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:32,306][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:32,406][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:32,428][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:36,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:36,693][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:36,715][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 25
Lang Goal: pack the scissors in the brown box
Total Reward: 0.500 | Done: False

Mean: 0.37593201754385963 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 20/50
[2025-02-09 00:30:46,606][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:46,709][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:46,730][root][INFO] - Image embeddings computed.
[2025-02-09 00:31:03,592][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:31:03,693][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:31:03,714][root][INFO] - Image embeddings computed.
[2025-02-09 00:31:07,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:31:08,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:31:08,051][root][INFO] - Image embeddings computed.
[2025-02-09 00:31:12,257][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:31:12,262][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:31:12,283][root][INFO] - Image embeddings computed.
[2025-02-09 00:31:16,467][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:31:16,477][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:31:16,498][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 10
Lang Goal: pack the nintendo cartridge in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.40713541666666664 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 21/50
[2025-02-09 00:33:21,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:33:21,411][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:33:21,432][root][INFO] - Image embeddings computed.
[2025-02-09 00:33:38,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:33:38,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:33:38,109][root][INFO] - Image embeddings computed.
[2025-02-09 00:33:42,302][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:33:42,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:33:42,327][root][INFO] - Image embeddings computed.
[2025-02-09 00:33:46,527][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:33:46,539][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:33:46,559][root][INFO] - Image embeddings computed.
[2025-02-09 00:33:50,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:33:50,771][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:33:50,792][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.325 | Done: False

[2025-02-09 00:35:51,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:35:52,091][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:35:52,113][root][INFO] - Image embeddings computed.
[2025-02-09 00:36:08,681][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:36:08,791][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:36:08,813][root][INFO] - Image embeddings computed.
[2025-02-09 00:36:13,005][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:36:13,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:36:13,125][root][INFO] - Image embeddings computed.
[2025-02-09 00:36:17,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:36:17,421][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:36:17,443][root][INFO] - Image embeddings computed.
[2025-02-09 00:36:21,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:36:21,769][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:36:21,792][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 18
Lang Goal: pack the porcelain cup in the brown box
Total Reward: 0.333 | Done: False

[2025-02-09 00:38:28,097][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:38:28,207][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:38:28,229][root][INFO] - Image embeddings computed.
[2025-02-09 00:38:44,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:38:44,757][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:38:44,779][root][INFO] - Image embeddings computed.
[2025-02-09 00:38:48,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:38:49,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:38:49,130][root][INFO] - Image embeddings computed.
[2025-02-09 00:38:53,332][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:38:53,430][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:38:53,452][root][INFO] - Image embeddings computed.
[2025-02-09 00:38:57,672][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:38:57,765][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:38:57,787][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: pack the porcelain cup in the brown box
Total Reward: 0.640 | Done: False

[2025-02-09 00:40:59,710][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:40:59,827][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:40:59,849][root][INFO] - Image embeddings computed.
[2025-02-09 00:41:16,328][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:41:16,428][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:41:16,450][root][INFO] - Image embeddings computed.
[2025-02-09 00:41:20,664][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:41:20,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:41:20,782][root][INFO] - Image embeddings computed.
[2025-02-09 00:41:24,979][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:41:25,071][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:41:25,093][root][INFO] - Image embeddings computed.
[2025-02-09 00:41:29,319][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:41:29,425][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:41:29,456][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 17
Lang Goal: pack the porcelain cup in the brown box
Total Reward: 0.333 | Done: False

Mean: 0.40362103174603176 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 22/50
[2025-02-09 00:43:46,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:43:46,758][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:43:46,779][root][INFO] - Image embeddings computed.
[2025-02-09 00:44:03,602][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:44:03,706][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:44:03,727][root][INFO] - Image embeddings computed.
[2025-02-09 00:44:07,905][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:44:08,014][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:44:08,045][root][INFO] - Image embeddings computed.
[2025-02-09 00:44:12,221][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:44:12,320][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:44:12,342][root][INFO] - Image embeddings computed.
[2025-02-09 00:44:16,561][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:44:16,661][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:44:16,683][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 19
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 00:46:15,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:46:15,549][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:46:15,570][root][INFO] - Image embeddings computed.
[2025-02-09 00:46:32,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:46:32,455][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:46:32,476][root][INFO] - Image embeddings computed.
[2025-02-09 00:46:36,652][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:46:36,756][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:46:36,776][root][INFO] - Image embeddings computed.
[2025-02-09 00:46:40,961][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:46:41,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:46:41,108][root][INFO] - Image embeddings computed.
[2025-02-09 00:46:45,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:46:45,420][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:46:45,440][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 20
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.38527462121212125 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 23/50
[2025-02-09 00:48:52,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:48:52,803][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:48:52,824][root][INFO] - Image embeddings computed.
[2025-02-09 00:49:09,346][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:49:09,357][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:49:09,377][root][INFO] - Image embeddings computed.
[2025-02-09 00:49:13,576][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:49:13,588][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:49:13,608][root][INFO] - Image embeddings computed.
[2025-02-09 00:49:17,785][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:49:17,799][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:49:17,820][root][INFO] - Image embeddings computed.
[2025-02-09 00:49:22,012][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:49:22,022][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:49:22,042][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 10
Lang Goal: pack the purple tape in the brown box
Total Reward: 0.469 | Done: False

[2025-02-09 00:51:20,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:20,713][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:20,734][root][INFO] - Image embeddings computed.
[2025-02-09 00:51:37,304][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:37,359][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:37,379][root][INFO] - Image embeddings computed.
[2025-02-09 00:51:41,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:41,568][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:41,589][root][INFO] - Image embeddings computed.
[2025-02-09 00:51:45,785][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:45,794][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:45,815][root][INFO] - Image embeddings computed.
[2025-02-09 00:51:49,996][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:50,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:50,031][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 8
Lang Goal: pack the purple tape in the brown box
Total Reward: 0.469 | Done: False

[2025-02-09 00:53:48,877][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:53:48,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:53:48,910][root][INFO] - Image embeddings computed.
[2025-02-09 00:54:05,532][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:54:05,543][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:54:05,563][root][INFO] - Image embeddings computed.
[2025-02-09 00:54:09,743][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:54:09,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:54:09,774][root][INFO] - Image embeddings computed.
[2025-02-09 00:54:13,975][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:54:13,983][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:54:14,004][root][INFO] - Image embeddings computed.
[2025-02-09 00:54:18,186][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:54:18,194][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:54:18,214][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 9
Lang Goal: pack the purple tape in the brown box
Total Reward: 0.469 | Done: False

Mean: 0.3889039855072464 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 24/50
[2025-02-09 00:56:31,546][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:31,650][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:31,672][root][INFO] - Image embeddings computed.
[2025-02-09 00:56:48,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:48,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:48,875][root][INFO] - Image embeddings computed.
[2025-02-09 00:56:53,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:53,170][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:53,190][root][INFO] - Image embeddings computed.
[2025-02-09 00:56:57,396][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:57,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:57,510][root][INFO] - Image embeddings computed.
[2025-02-09 00:57:01,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:57:01,755][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:57:01,776][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 00:59:02,764][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:59:02,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:59:02,802][root][INFO] - Image embeddings computed.
[2025-02-09 00:59:19,513][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:59:19,523][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:59:19,545][root][INFO] - Image embeddings computed.
[2025-02-09 00:59:23,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:59:23,742][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:59:23,764][root][INFO] - Image embeddings computed.
[2025-02-09 00:59:27,977][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:59:27,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:59:28,004][root][INFO] - Image embeddings computed.
[2025-02-09 00:59:32,195][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:59:32,206][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:59:32,228][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:01:36,724][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:01:36,830][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:01:36,852][root][INFO] - Image embeddings computed.
[2025-02-09 01:01:53,794][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:01:53,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:01:53,925][root][INFO] - Image embeddings computed.
[2025-02-09 01:01:58,117][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:01:58,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:01:58,262][root][INFO] - Image embeddings computed.
[2025-02-09 01:02:02,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:02:02,575][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:02:02,598][root][INFO] - Image embeddings computed.
[2025-02-09 01:02:06,779][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:02:06,880][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:02:06,902][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 14
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:04:10,426][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:04:10,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:04:10,476][root][INFO] - Image embeddings computed.
[2025-02-09 01:04:27,281][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:04:27,290][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:04:27,312][root][INFO] - Image embeddings computed.
[2025-02-09 01:04:31,504][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:04:31,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:04:31,531][root][INFO] - Image embeddings computed.
[2025-02-09 01:04:35,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:04:35,762][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:04:35,784][root][INFO] - Image embeddings computed.
[2025-02-09 01:04:39,956][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:04:40,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:04:40,079][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:06:49,640][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:06:49,743][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:06:49,765][root][INFO] - Image embeddings computed.
[2025-02-09 01:07:06,635][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:07:06,728][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:07:06,750][root][INFO] - Image embeddings computed.
[2025-02-09 01:07:10,948][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:07:11,074][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:07:11,096][root][INFO] - Image embeddings computed.
[2025-02-09 01:07:15,309][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:07:15,403][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:07:15,425][root][INFO] - Image embeddings computed.
[2025-02-09 01:07:19,614][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:07:19,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:07:19,729][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:09:30,628][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:09:30,737][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:09:30,759][root][INFO] - Image embeddings computed.
[2025-02-09 01:09:47,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:09:47,736][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:09:47,758][root][INFO] - Image embeddings computed.
[2025-02-09 01:09:51,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:09:52,054][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:09:52,075][root][INFO] - Image embeddings computed.
[2025-02-09 01:09:56,284][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:09:56,390][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:09:56,412][root][INFO] - Image embeddings computed.
[2025-02-09 01:10:00,596][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:10:00,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:10:00,734][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 16
Lang Goal: pack the c clamp in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.3726996527777778 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 25/50
[2025-02-09 01:12:18,485][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:12:18,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:12:18,521][root][INFO] - Image embeddings computed.
[2025-02-09 01:12:35,400][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:12:35,404][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:12:35,425][root][INFO] - Image embeddings computed.
[2025-02-09 01:12:39,607][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:12:39,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:12:39,632][root][INFO] - Image embeddings computed.
[2025-02-09 01:12:43,850][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:12:43,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:12:43,875][root][INFO] - Image embeddings computed.
[2025-02-09 01:12:48,073][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:12:48,077][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:12:48,098][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 24
Lang Goal: pack the green and white striped towel in the brown box
Total Reward: 0.250 | Done: False

[2025-02-09 01:14:51,213][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:14:51,230][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:14:51,251][root][INFO] - Image embeddings computed.
[2025-02-09 01:15:07,772][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:15:07,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:15:07,801][root][INFO] - Image embeddings computed.
[2025-02-09 01:15:12,000][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:15:12,004][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:15:12,025][root][INFO] - Image embeddings computed.
[2025-02-09 01:15:16,222][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:15:16,226][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:15:16,247][root][INFO] - Image embeddings computed.
[2025-02-09 01:15:20,470][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:15:20,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:15:20,501][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 23
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 0.250 | Done: False

[2025-02-09 01:17:22,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:17:22,452][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:17:22,473][root][INFO] - Image embeddings computed.
[2025-02-09 01:17:38,893][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:17:38,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:17:38,920][root][INFO] - Image embeddings computed.
[2025-02-09 01:17:43,110][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:17:43,113][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:17:43,134][root][INFO] - Image embeddings computed.
[2025-02-09 01:17:47,337][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:17:47,340][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:17:47,361][root][INFO] - Image embeddings computed.
[2025-02-09 01:17:51,557][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:17:51,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:17:51,581][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 26
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 0.250 | Done: False

[2025-02-09 01:20:02,433][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:02,543][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:02,565][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:19,137][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:19,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:19,257][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:23,447][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:23,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:23,568][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:27,784][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:27,910][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:27,933][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:32,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:32,308][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:32,330][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 25
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 0.250 | Done: False

[2025-02-09 01:22:37,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:22:37,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:22:37,781][root][INFO] - Image embeddings computed.
[2025-02-09 01:22:54,283][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:22:54,288][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:22:54,308][root][INFO] - Image embeddings computed.
[2025-02-09 01:22:58,487][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:22:58,497][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:22:58,517][root][INFO] - Image embeddings computed.
[2025-02-09 01:23:02,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:23:02,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:23:02,774][root][INFO] - Image embeddings computed.
[2025-02-09 01:23:06,981][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:23:06,985][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:23:07,006][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 18
Lang Goal: pack the rocket racoon figure in the brown box
Total Reward: 0.250 | Done: False

Mean: 0.3677916666666667 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 26/50
[2025-02-09 01:25:19,086][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:19,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:19,208][root][INFO] - Image embeddings computed.
[2025-02-09 01:25:35,816][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:35,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:35,935][root][INFO] - Image embeddings computed.
[2025-02-09 01:25:40,143][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:40,236][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:40,257][root][INFO] - Image embeddings computed.
[2025-02-09 01:25:44,484][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:44,594][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:44,615][root][INFO] - Image embeddings computed.
[2025-02-09 01:25:48,841][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:48,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:48,980][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 13
Lang Goal: pack the honey dipper in the brown box
Total Reward: 1.000 | Done: True

Mean: 0.3921073717948718 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 27/50
[2025-02-09 01:28:04,433][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:04,576][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:04,607][root][INFO] - Image embeddings computed.
[2025-02-09 01:28:21,307][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:21,405][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:21,426][root][INFO] - Image embeddings computed.
[2025-02-09 01:28:25,613][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:25,705][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:25,726][root][INFO] - Image embeddings computed.
[2025-02-09 01:28:29,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:30,001][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:30,021][root][INFO] - Image embeddings computed.
[2025-02-09 01:28:34,219][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:34,318][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:34,339][root][INFO] - Image embeddings computed.
The number of original masks: 15
The number of filtered masks: 9
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:30:42,843][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:30:42,948][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:30:42,981][root][INFO] - Image embeddings computed.
[2025-02-09 01:30:59,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:30:59,734][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:30:59,755][root][INFO] - Image embeddings computed.
[2025-02-09 01:31:03,917][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:31:04,011][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:31:04,031][root][INFO] - Image embeddings computed.
[2025-02-09 01:31:08,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:31:08,222][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:31:08,242][root][INFO] - Image embeddings computed.
[2025-02-09 01:31:12,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:31:12,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:31:12,464][root][INFO] - Image embeddings computed.
The number of original masks: 15
The number of filtered masks: 10
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:33:16,300][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:33:16,326][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:33:16,347][root][INFO] - Image embeddings computed.
[2025-02-09 01:33:32,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:33:32,747][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:33:32,767][root][INFO] - Image embeddings computed.
[2025-02-09 01:33:36,933][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:33:36,944][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:33:36,964][root][INFO] - Image embeddings computed.
[2025-02-09 01:33:41,143][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:33:41,148][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:33:41,168][root][INFO] - Image embeddings computed.
[2025-02-09 01:33:45,365][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:33:45,369][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:33:45,390][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 11
Lang Goal: pack the brown fedora in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.3775848765432099 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 28/50
[2025-02-09 01:36:04,251][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:04,359][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:04,380][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:21,197][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:21,305][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:21,327][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:25,533][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:25,646][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:25,668][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:29,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:30,041][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:30,063][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:34,243][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:34,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:34,473][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 18
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:38:48,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:38:48,626][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:38:48,647][root][INFO] - Image embeddings computed.
[2025-02-09 01:39:05,454][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:05,574][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:05,596][root][INFO] - Image embeddings computed.
[2025-02-09 01:39:09,825][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:09,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:09,948][root][INFO] - Image embeddings computed.
[2025-02-09 01:39:14,155][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:14,160][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:14,181][root][INFO] - Image embeddings computed.
[2025-02-09 01:39:18,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:18,369][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:18,390][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 23
Lang Goal: pack the alarm clock in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.3640997023809524 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 29/50
[2025-02-09 01:41:29,504][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:29,518][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:29,539][root][INFO] - Image embeddings computed.
[2025-02-09 01:41:46,383][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:46,406][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:46,426][root][INFO] - Image embeddings computed.
[2025-02-09 01:41:50,635][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:50,644][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:50,665][root][INFO] - Image embeddings computed.
[2025-02-09 01:41:54,879][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:54,886][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:54,906][root][INFO] - Image embeddings computed.
[2025-02-09 01:41:59,097][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:59,106][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:59,126][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 14
Lang Goal: pack the nintendo 3ds in the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:44:05,531][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:44:05,645][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:44:05,668][root][INFO] - Image embeddings computed.
[2025-02-09 01:44:22,366][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:44:22,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:44:22,490][root][INFO] - Image embeddings computed.
[2025-02-09 01:44:26,711][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:44:26,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:44:26,831][root][INFO] - Image embeddings computed.
[2025-02-09 01:44:31,028][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:44:31,127][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:44:31,155][root][INFO] - Image embeddings computed.
[2025-02-09 01:44:35,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:44:35,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:44:35,464][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 11
Lang Goal: pack the nintendo 3ds in the brown box
Total Reward: 0.000 | Done: False

Mean: 0.35154454022988507 | Task: packing-seen-google-objects-seq | Ckpt: steps=00120-val_loss=0.00018318.ckpt
Test: 30/50
[2025-02-09 01:46:57,203][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:46:57,300][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:46:57,321][root][INFO] - Image embeddings computed.
[2025-02-09 01:47:14,246][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:47:14,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:47:14,380][root][INFO] - Image embeddings computed.
[2025-02-09 01:47:18,580][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:47:18,684][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:47:18,711][root][INFO] - Image embeddings computed.
[2025-02-09 01:47:22,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:47:23,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:47:23,068][root][INFO] - Image embeddings computed.
[2025-02-09 01:47:27,268][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:47:27,369][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:47:27,390][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 18
Lang Goal: pack the spiderman figure in the brown box
Total Reward: 0.333 | Done: False

[2025-02-09 01:49:33,999][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:34,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:34,125][root][INFO] - Image embeddings computed.
[2025-02-09 01:49:50,751][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:50,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:50,883][root][INFO] - Image embeddings computed.
[2025-02-09 01:49:55,081][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:55,176][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:55,204][root][INFO] - Image embeddings computed.
[2025-02-09 01:49:59,417][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:59,514][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:59,535][root][INFO] - Image embeddings computed.
[2025-02-09 01:50:03,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:50:03,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:50:03,880][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 23
Lang Goal: pack the spatula with purple head in the brown box
Total Reward: 0.667 | Done: False

[2025-02-09 01:52:16,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:52:16,350][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:52:16,372][root][INFO] - Image embeddings computed.
slurmstepd: error: *** STEP 995924.0 ON gpu001 CANCELLED AT 2025-02-09T01:52:24 DUE TO TIME LIMIT ***
slurmstepd: error: *** JOB 995924 ON gpu001 CANCELLED AT 2025-02-09T01:52:24 DUE TO TIME LIMIT ***
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
