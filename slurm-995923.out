pybullet build time: Nov 28 2023 23:45:17
Save path for results: /home/a/acw799/cliport/exps_clipfit/put-block-in-bowl-seen-colors-clipfit-n10-train/checkpoints/
Evaluating: ['steps=00040-val_loss=0.00016984.ckpt', 'steps=00080-val_loss=0.00013815.ckpt', 'steps=00120-val_loss=0.00013769.ckpt', 'steps=00160-val_loss=0.00013749.ckpt', 'steps=00200-val_loss=0.00012113.ckpt']
[2025-02-08 13:32:43,163][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:32:43,680][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:32:50,671][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-08 13:33:29,710][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:33:29,874][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:33:36,614][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-08 13:33:41,983][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:33:42,136][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:33:48,642][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-08 13:33:54,196][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:33:54,348][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:34:00,850][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: put-block-in-bowl-seen-colors-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/put-block-in-bowl-seen-colors-clipfit-n10-train/checkpoints/steps=00040-val_loss=0.00016984.ckpt
Test: 1/50
[2025-02-08 13:34:46,976][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:34:47,136][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:34:48,680][root][INFO] - Image embeddings computed.
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Memory efficient kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:723.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Memory Efficient attention has been runtime disabled. (Triggered internally at ../aten/src/ATen/native/transformers/sdp_utils_cpp.h:495.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Flash attention kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:725.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Expected query, key and value to all be of dtype: {Half, BFloat16}. Got Query dtype: float, Key dtype: float, and Value dtype: float instead. (Triggered internally at ../aten/src/ATen/native/transformers/sdp_utils_cpp.h:98.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: CuDNN attention kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:727.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: The CuDNN backend needs to be enabled by setting the enviornment variable`TORCH_CUDNN_SDPA_ENABLED=1` (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:496.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/home/a/acw799/.local/lib/python3.10/site-packages/torch/nn/modules/module.py:1562: UserWarning: Flash Attention kernel failed due to: No available kernel. Aborting execution.
Falling back to all available kernels for scaled_dot_product_attention (which may have a slower speed).
  return forward_call(*args, **kwargs)
[2025-02-08 13:35:06,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:35:06,576][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:35:06,596][root][INFO] - Image embeddings computed.
[2025-02-08 13:35:10,722][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:35:10,814][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:35:10,833][root][INFO] - Image embeddings computed.
[2025-02-08 13:35:14,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:35:15,061][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:35:15,080][root][INFO] - Image embeddings computed.
[2025-02-08 13:35:19,174][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:35:19,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:35:19,286][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.000 | Done: False

[2025-02-08 13:35:30,909][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:35:30,913][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:35:30,933][root][INFO] - Image embeddings computed.
[2025-02-08 13:35:47,239][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:35:47,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:35:47,271][root][INFO] - Image embeddings computed.
[2025-02-08 13:35:51,392][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:35:51,394][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:35:51,414][root][INFO] - Image embeddings computed.
[2025-02-08 13:35:55,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:35:55,537][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:35:55,557][root][INFO] - Image embeddings computed.
[2025-02-08 13:35:59,687][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:35:59,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:35:59,710][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.000 | Done: False

[2025-02-08 13:36:08,838][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:36:08,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:36:08,862][root][INFO] - Image embeddings computed.
[2025-02-08 13:36:25,148][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:36:25,151][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:36:25,171][root][INFO] - Image embeddings computed.
[2025-02-08 13:36:29,320][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:36:29,323][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:36:29,343][root][INFO] - Image embeddings computed.
[2025-02-08 13:36:33,472][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:36:33,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:36:33,494][root][INFO] - Image embeddings computed.
[2025-02-08 13:36:37,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:36:37,634][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:36:37,654][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 7
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 2/50
[2025-02-08 13:36:53,037][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:36:53,040][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:36:53,060][root][INFO] - Image embeddings computed.
[2025-02-08 13:37:09,414][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:37:09,417][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:37:09,437][root][INFO] - Image embeddings computed.
[2025-02-08 13:37:13,590][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:37:13,599][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:37:13,619][root][INFO] - Image embeddings computed.
[2025-02-08 13:37:17,763][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:37:17,766][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:37:17,785][root][INFO] - Image embeddings computed.
[2025-02-08 13:37:21,886][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:37:21,895][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:37:21,915][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.5 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 3/50
[2025-02-08 13:37:37,993][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:37:37,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:37:38,016][root][INFO] - Image embeddings computed.
[2025-02-08 13:37:54,489][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:37:54,492][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:37:54,512][root][INFO] - Image embeddings computed.
[2025-02-08 13:37:58,647][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:37:58,650][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:37:58,694][root][INFO] - Image embeddings computed.
[2025-02-08 13:38:02,840][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:38:02,843][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:38:02,862][root][INFO] - Image embeddings computed.
[2025-02-08 13:38:06,989][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:38:06,992][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:38:07,012][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.000 | Done: False

[2025-02-08 13:38:17,128][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:38:17,132][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:38:17,152][root][INFO] - Image embeddings computed.
[2025-02-08 13:38:33,635][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:38:33,638][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:38:33,658][root][INFO] - Image embeddings computed.
[2025-02-08 13:38:37,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:38:37,804][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:38:37,824][root][INFO] - Image embeddings computed.
[2025-02-08 13:38:41,973][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:38:41,976][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:38:41,995][root][INFO] - Image embeddings computed.
[2025-02-08 13:38:46,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:38:46,130][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:38:46,149][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 15
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 13:38:56,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:38:56,509][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:38:56,529][root][INFO] - Image embeddings computed.
[2025-02-08 13:39:13,098][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:39:13,101][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:39:13,121][root][INFO] - Image embeddings computed.
[2025-02-08 13:39:17,275][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:39:17,278][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:39:17,298][root][INFO] - Image embeddings computed.
[2025-02-08 13:39:21,445][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:39:21,448][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:39:21,468][root][INFO] - Image embeddings computed.
[2025-02-08 13:39:25,610][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:39:25,613][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:39:25,633][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.6666666666666666 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 4/50
[2025-02-08 13:39:41,223][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:39:41,226][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:39:41,246][root][INFO] - Image embeddings computed.
[2025-02-08 13:39:57,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:39:57,602][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:39:57,622][root][INFO] - Image embeddings computed.
[2025-02-08 13:40:01,792][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:40:01,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:40:01,814][root][INFO] - Image embeddings computed.
[2025-02-08 13:40:05,950][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:40:05,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:40:05,973][root][INFO] - Image embeddings computed.
[2025-02-08 13:40:10,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:40:10,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:40:10,123][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.75 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 5/50
[2025-02-08 13:40:26,628][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:40:26,632][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:40:26,652][root][INFO] - Image embeddings computed.
[2025-02-08 13:40:43,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:40:43,086][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:40:43,106][root][INFO] - Image embeddings computed.
[2025-02-08 13:40:47,261][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:40:47,264][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:40:47,284][root][INFO] - Image embeddings computed.
[2025-02-08 13:40:51,435][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:40:51,438][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:40:51,458][root][INFO] - Image embeddings computed.
[2025-02-08 13:40:55,607][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:40:55,610][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:40:55,630][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 6/50
[2025-02-08 13:41:12,271][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:41:12,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:41:12,294][root][INFO] - Image embeddings computed.
[2025-02-08 13:41:28,681][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:41:28,683][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:41:28,703][root][INFO] - Image embeddings computed.
[2025-02-08 13:41:32,886][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:41:32,889][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:41:32,909][root][INFO] - Image embeddings computed.
[2025-02-08 13:41:37,054][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:41:37,056][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:41:37,076][root][INFO] - Image embeddings computed.
[2025-02-08 13:41:41,211][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:41:41,214][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:41:41,233][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 13:41:52,298][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:41:52,301][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:41:52,321][root][INFO] - Image embeddings computed.
[2025-02-08 13:42:08,701][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:42:08,804][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:42:08,823][root][INFO] - Image embeddings computed.
[2025-02-08 13:42:13,000][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:42:13,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:42:13,116][root][INFO] - Image embeddings computed.
[2025-02-08 13:42:17,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:42:17,344][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:42:17,364][root][INFO] - Image embeddings computed.
[2025-02-08 13:42:21,501][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:42:21,601][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:42:21,621][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 12
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 7/50
[2025-02-08 13:42:39,983][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:42:39,987][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:42:40,007][root][INFO] - Image embeddings computed.
[2025-02-08 13:42:56,653][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:42:56,656][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:42:56,675][root][INFO] - Image embeddings computed.
[2025-02-08 13:43:00,812][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:43:00,815][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:43:00,835][root][INFO] - Image embeddings computed.
[2025-02-08 13:43:04,972][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:43:04,974][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:43:04,994][root][INFO] - Image embeddings computed.
[2025-02-08 13:43:09,134][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:43:09,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:43:09,157][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 16
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8571428571428571 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 8/50
[2025-02-08 13:43:25,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:43:25,944][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:43:25,964][root][INFO] - Image embeddings computed.
[2025-02-08 13:43:42,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:43:42,326][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:43:42,346][root][INFO] - Image embeddings computed.
[2025-02-08 13:43:46,513][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:43:46,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:43:46,535][root][INFO] - Image embeddings computed.
[2025-02-08 13:43:50,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:43:50,709][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:43:50,728][root][INFO] - Image embeddings computed.
[2025-02-08 13:43:54,841][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:43:54,844][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:43:54,864][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 10
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 9/50
[2025-02-08 13:44:12,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:44:12,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:44:13,016][root][INFO] - Image embeddings computed.
[2025-02-08 13:44:29,814][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:44:29,818][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:44:29,837][root][INFO] - Image embeddings computed.
[2025-02-08 13:44:33,963][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:44:33,966][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:44:33,986][root][INFO] - Image embeddings computed.
[2025-02-08 13:44:38,134][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:44:38,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:44:38,156][root][INFO] - Image embeddings computed.
[2025-02-08 13:44:42,288][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:44:42,291][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:44:42,311][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: put the green blocks in a red bowl
Total Reward: 0.500 | Done: False

[2025-02-08 13:44:54,934][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:44:54,938][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:44:54,958][root][INFO] - Image embeddings computed.
[2025-02-08 13:45:11,694][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:45:11,697][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:45:11,717][root][INFO] - Image embeddings computed.
[2025-02-08 13:45:15,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:45:15,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:45:15,861][root][INFO] - Image embeddings computed.
[2025-02-08 13:45:20,007][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:45:20,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:45:20,029][root][INFO] - Image embeddings computed.
[2025-02-08 13:45:24,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:45:24,264][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:45:24,284][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 14
Lang Goal: put the green blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8888888888888888 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 10/50
[2025-02-08 13:45:46,021][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:45:46,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:45:46,045][root][INFO] - Image embeddings computed.
[2025-02-08 13:46:02,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:46:02,393][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:46:02,413][root][INFO] - Image embeddings computed.
[2025-02-08 13:46:06,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:46:06,559][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:46:06,580][root][INFO] - Image embeddings computed.
[2025-02-08 13:46:10,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:46:10,720][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:46:10,740][root][INFO] - Image embeddings computed.
[2025-02-08 13:46:14,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:46:14,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:46:14,879][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 12
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 11/50
[2025-02-08 13:46:33,994][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:46:33,998][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:46:34,018][root][INFO] - Image embeddings computed.
[2025-02-08 13:46:50,478][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:46:50,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:46:50,501][root][INFO] - Image embeddings computed.
[2025-02-08 13:46:54,660][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:46:54,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:46:54,683][root][INFO] - Image embeddings computed.
[2025-02-08 13:46:58,831][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:46:58,834][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:46:58,854][root][INFO] - Image embeddings computed.
[2025-02-08 13:47:02,975][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:47:02,978][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:47:02,997][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 11
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 13:47:16,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:47:16,145][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:47:16,165][root][INFO] - Image embeddings computed.
[2025-02-08 13:47:32,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:47:32,594][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:47:32,614][root][INFO] - Image embeddings computed.
[2025-02-08 13:47:36,773][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:47:36,776][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:47:36,796][root][INFO] - Image embeddings computed.
[2025-02-08 13:47:40,954][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:47:40,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:47:40,977][root][INFO] - Image embeddings computed.
[2025-02-08 13:47:45,105][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:47:45,108][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:47:45,128][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 10
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9090909090909091 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 12/50
[2025-02-08 13:48:04,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:48:04,585][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:48:04,604][root][INFO] - Image embeddings computed.
[2025-02-08 13:48:21,087][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:48:21,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:48:21,110][root][INFO] - Image embeddings computed.
[2025-02-08 13:48:25,243][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:48:25,246][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:48:25,266][root][INFO] - Image embeddings computed.
[2025-02-08 13:48:29,421][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:48:29,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:48:29,443][root][INFO] - Image embeddings computed.
[2025-02-08 13:48:33,569][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:48:33,572][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:48:33,591][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the brown blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.9166666666666666 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 13/50
[2025-02-08 13:48:52,439][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:48:52,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:48:52,462][root][INFO] - Image embeddings computed.
[2025-02-08 13:49:08,897][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:49:08,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:49:08,920][root][INFO] - Image embeddings computed.
[2025-02-08 13:49:13,078][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:49:13,081][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:49:13,101][root][INFO] - Image embeddings computed.
[2025-02-08 13:49:17,251][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:49:17,254][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:49:17,274][root][INFO] - Image embeddings computed.
[2025-02-08 13:49:21,393][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:49:21,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:49:21,416][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9230769230769231 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 14/50
[2025-02-08 13:49:40,526][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:49:40,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:49:40,556][root][INFO] - Image embeddings computed.
[2025-02-08 13:49:56,880][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:49:56,882][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:49:56,902][root][INFO] - Image embeddings computed.
[2025-02-08 13:50:01,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:50:01,077][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:50:01,097][root][INFO] - Image embeddings computed.
[2025-02-08 13:50:05,249][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:50:05,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:50:05,272][root][INFO] - Image embeddings computed.
[2025-02-08 13:50:09,392][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:50:09,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:50:09,415][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 10
Lang Goal: put the red blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9285714285714286 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 15/50
[2025-02-08 13:50:29,494][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:50:29,498][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:50:29,518][root][INFO] - Image embeddings computed.
[2025-02-08 13:50:45,859][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:50:45,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:50:45,882][root][INFO] - Image embeddings computed.
[2025-02-08 13:50:50,011][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:50:50,014][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:50:50,034][root][INFO] - Image embeddings computed.
[2025-02-08 13:50:54,157][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:50:54,160][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:50:54,180][root][INFO] - Image embeddings computed.
[2025-02-08 13:50:58,306][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:50:58,309][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:50:58,329][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 13:51:12,885][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:51:12,888][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:51:12,908][root][INFO] - Image embeddings computed.
[2025-02-08 13:51:29,264][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:51:29,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:51:29,287][root][INFO] - Image embeddings computed.
[2025-02-08 13:51:33,423][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:51:33,427][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:51:33,446][root][INFO] - Image embeddings computed.
[2025-02-08 13:51:37,593][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:51:37,596][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:51:37,616][root][INFO] - Image embeddings computed.
[2025-02-08 13:51:41,727][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:51:41,730][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:51:41,750][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 6
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.000 | Done: False

[2025-02-08 13:51:56,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:51:56,343][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:51:56,363][root][INFO] - Image embeddings computed.
[2025-02-08 13:52:12,783][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:52:12,786][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:52:12,807][root][INFO] - Image embeddings computed.
[2025-02-08 13:52:16,934][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:52:16,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:52:16,957][root][INFO] - Image embeddings computed.
[2025-02-08 13:52:21,101][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:52:21,104][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:52:21,124][root][INFO] - Image embeddings computed.
[2025-02-08 13:52:25,236][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:52:25,246][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:52:25,266][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 15
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

Mean: 0.9 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 16/50
[2025-02-08 13:52:46,812][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:52:46,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:52:46,836][root][INFO] - Image embeddings computed.
[2025-02-08 13:53:03,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:53:03,460][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:53:03,480][root][INFO] - Image embeddings computed.
[2025-02-08 13:53:07,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:53:07,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:53:07,647][root][INFO] - Image embeddings computed.
[2025-02-08 13:53:11,784][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:53:11,787][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:53:11,806][root][INFO] - Image embeddings computed.
[2025-02-08 13:53:15,927][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:53:15,930][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:53:15,949][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.90625 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 17/50
[2025-02-08 13:53:37,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:53:37,397][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:53:37,416][root][INFO] - Image embeddings computed.
[2025-02-08 13:53:53,725][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:53:53,733][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:53:53,753][root][INFO] - Image embeddings computed.
[2025-02-08 13:53:57,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:53:57,918][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:53:57,938][root][INFO] - Image embeddings computed.
[2025-02-08 13:54:02,087][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:02,094][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:02,114][root][INFO] - Image embeddings computed.
[2025-02-08 13:54:06,260][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:06,263][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:06,282][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9117647058823529 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 18/50
[2025-02-08 13:54:28,002][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:28,005][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:28,025][root][INFO] - Image embeddings computed.
[2025-02-08 13:54:44,403][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:44,411][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:44,430][root][INFO] - Image embeddings computed.
[2025-02-08 13:54:48,584][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:48,598][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:48,618][root][INFO] - Image embeddings computed.
[2025-02-08 13:54:52,756][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:52,762][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:52,782][root][INFO] - Image embeddings computed.
[2025-02-08 13:54:56,927][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:54:56,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:54:56,967][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 13
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 13:55:13,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:55:13,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:55:13,294][root][INFO] - Image embeddings computed.
[2025-02-08 13:55:29,559][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:55:29,562][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:55:29,582][root][INFO] - Image embeddings computed.
[2025-02-08 13:55:33,720][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:55:33,723][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:55:33,743][root][INFO] - Image embeddings computed.
[2025-02-08 13:55:37,895][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:55:37,898][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:55:37,919][root][INFO] - Image embeddings computed.
[2025-02-08 13:55:42,046][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:55:42,150][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:55:42,169][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 12
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9166666666666666 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 19/50
[2025-02-08 13:56:05,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:05,807][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:05,827][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:22,162][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:22,169][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:22,189][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:26,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:26,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:26,367][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:30,505][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:30,512][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:30,532][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:34,646][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:34,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:34,668][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 11
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9210526315789473 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 20/50
[2025-02-08 13:57:00,296][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:00,304][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:00,324][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:16,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:16,678][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:16,697][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:20,832][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:20,840][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:20,859][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:25,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:25,013][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:25,032][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:29,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:29,161][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:29,181][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.000 | Done: False

[2025-02-08 13:57:45,958][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:45,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:45,985][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:02,296][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:02,300][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:02,319][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:06,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:06,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:06,467][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:10,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:10,630][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:10,649][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:14,784][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:14,789][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:14,809][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 7
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.000 | Done: False

[2025-02-08 13:58:31,838][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:31,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:31,862][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:48,261][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:48,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:48,286][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:52,431][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:52,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:52,456][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:56,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:56,623][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:56,642][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:00,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:00,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:00,799][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 13
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.9 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 21/50
[2025-02-08 13:59:22,802][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:22,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:22,832][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:39,126][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:39,134][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:39,153][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:43,310][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:43,318][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:43,337][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:47,479][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:47,497][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:47,517][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:51,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:51,649][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:51,668][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the gray blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.9047619047619048 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 22/50
[2025-02-08 14:00:13,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:13,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:13,935][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:30,234][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:30,241][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:30,261][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:34,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:34,426][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:34,445][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:38,565][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:38,572][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:38,591][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:42,719][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:42,722][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:42,742][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 9
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9090909090909091 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 23/50
[2025-02-08 14:01:06,464][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:06,473][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:06,493][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:22,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:22,869][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:22,889][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:27,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:27,016][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:27,036][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:31,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:31,176][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:31,195][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:35,336][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:35,343][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:35,363][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: put the yellow blocks in a brown bowl
Total Reward: 0.000 | Done: False

[2025-02-08 14:01:54,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:54,836][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:54,855][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:11,435][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:11,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:11,461][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:15,572][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:15,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:15,599][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:19,732][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:19,735][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:19,754][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:23,895][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:23,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:23,923][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 6
Lang Goal: put the yellow blocks in a brown bowl
Total Reward: 0.000 | Done: False

Mean: 0.8695652173913043 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 24/50
[2025-02-08 14:02:48,956][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:49,063][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:49,083][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:05,450][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:05,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:05,571][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:09,721][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:09,819][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:09,839][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:13,966][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:14,043][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:14,062][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:18,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:18,180][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:18,200][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the green blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 25/50
[2025-02-08 14:03:43,402][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:43,409][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:43,429][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:59,824][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:59,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:59,851][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:03,987][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:04,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:04,026][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:08,135][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:08,138][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:08,158][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:12,275][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:12,282][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:12,301][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:04:33,742][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:33,839][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:33,859][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:50,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:50,273][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:50,293][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:54,421][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:54,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:54,535][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:58,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:58,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:58,780][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:02,897][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:03,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:03,029][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:05:24,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:24,700][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:24,720][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:40,971][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:40,974][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:41,006][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:45,124][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:45,127][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:45,147][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:49,268][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:49,271][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:49,291][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:53,410][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:53,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:53,438][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.86 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 26/50
[2025-02-08 14:06:21,591][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:21,598][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:21,618][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:38,278][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:38,285][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:38,305][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:42,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:42,464][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:42,484][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:46,608][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:46,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:46,640][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:50,747][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:50,753][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:50,773][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:07:10,960][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:10,969][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:10,989][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:27,487][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:27,494][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:27,513][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:31,669][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:31,683][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:31,702][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:35,844][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:35,852][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:35,872][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:39,985][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:39,992][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:40,012][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 13
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:08:00,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:00,699][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:00,719][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:17,208][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:17,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:17,236][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:21,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:21,409][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:21,428][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:25,563][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:25,571][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:25,591][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:29,708][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:29,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:29,731][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 14
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.000 | Done: False

Mean: 0.8269230769230769 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 27/50
[2025-02-08 14:08:56,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:56,578][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:56,598][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:13,048][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:13,055][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:13,075][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:17,231][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:17,234][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:17,253][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:21,374][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:21,377][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:21,397][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:25,529][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:25,537][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:25,556][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:09:51,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:51,143][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:51,163][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:07,593][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:07,696][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:07,716][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:11,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:11,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:11,984][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:16,114][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:16,209][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:16,229][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:20,346][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:20,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:20,464][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 12
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.000 | Done: False

[2025-02-08 14:10:43,677][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:43,680][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:43,700][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:00,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:00,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:00,211][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:04,375][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:04,378][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:04,398][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:08,529][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:08,537][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:08,557][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:12,692][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:12,700][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:12,730][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 13
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.500 | Done: False

Mean: 0.8148148148148148 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 28/50
[2025-02-08 14:11:39,271][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:39,279][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:39,299][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:55,636][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:55,642][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:55,662][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:59,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:59,796][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:59,816][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:03,971][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:03,979][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:03,999][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:08,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:08,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:08,123][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 13
Lang Goal: put the gray blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.8214285714285714 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 29/50
[2025-02-08 14:12:39,036][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:39,133][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:39,153][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:55,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:55,551][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:55,571][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:59,731][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:59,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:59,843][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:03,997][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:04,094][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:04,113][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:08,235][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:08,346][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:08,366][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:13:34,111][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:34,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:34,139][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:50,448][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:50,451][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:50,471][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:54,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:54,629][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:54,649][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:58,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:58,808][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:58,828][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:02,947][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:02,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:02,974][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:14:24,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:24,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:24,564][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:40,850][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:40,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:40,877][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:45,023][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:45,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:45,046][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:49,196][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:49,203][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:49,223][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:53,361][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:53,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:53,414][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

Mean: 0.8103448275862069 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 30/50
[2025-02-08 14:15:23,226][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:23,323][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:23,343][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:39,825][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:39,924][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:39,944][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:44,091][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:44,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:44,207][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:48,333][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:48,473][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:48,493][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:52,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:52,685][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:52,705][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8166666666666667 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 31/50
[2025-02-08 14:16:23,140][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:23,237][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:23,257][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:39,696][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:39,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:39,811][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:43,931][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:44,042][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:44,062][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:48,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:48,346][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:48,366][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:52,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:52,602][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:52,622][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.333 | Done: False

[2025-02-08 14:17:20,015][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:20,127][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:20,151][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:36,579][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:36,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:36,717][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:40,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:41,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:41,058][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:45,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:45,344][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:45,364][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:49,518][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:49,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:49,644][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.667 | Done: False

[2025-02-08 14:18:13,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:13,740][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:13,760][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:30,147][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:30,152][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:30,172][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:34,290][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:34,298][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:34,317][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:38,479][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:38,482][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:38,502][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:42,640][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:42,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:42,667][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8225806451612904 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 32/50
[2025-02-08 14:19:10,794][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:10,802][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:10,823][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:27,098][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:27,101][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:27,121][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:31,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:31,270][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:31,290][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:35,424][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:35,431][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:35,451][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:39,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:39,588][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:39,608][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 10
Lang Goal: put the red blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.828125 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 33/50
[2025-02-08 14:20:10,226][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:10,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:10,253][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:26,756][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:26,764][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:26,784][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:30,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:30,914][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:30,934][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:35,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:35,058][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:35,079][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:39,193][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:39,201][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:39,221][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the green blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:21:04,048][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:04,056][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:04,076][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:21,095][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:21,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:21,212][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:25,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:25,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:25,456][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:29,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:29,675][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:29,695][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:33,782][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:33,875][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:33,895][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 16
Lang Goal: put the green blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 34/50
[2025-02-08 14:22:08,648][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:08,678][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:08,698][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:24,999][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:25,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:25,025][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:29,186][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:29,193][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:29,213][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:33,336][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:33,341][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:33,360][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:37,478][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:37,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:37,501][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 0.000 | Done: False

[2025-02-08 14:23:02,668][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:02,676][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:02,696][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:19,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:19,016][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:19,036][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:23,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:23,188][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:23,208][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:27,319][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:27,322][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:27,342][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:31,491][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:31,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:31,513][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 12
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8382352941176471 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 35/50
[2025-02-08 14:24:02,395][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:02,403][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:02,423][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:19,341][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:19,346][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:19,366][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:23,501][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:23,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:23,531][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:27,652][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:27,661][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:27,680][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:31,784][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:31,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:31,811][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 17
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:24:56,929][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:56,932][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:56,952][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:13,198][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:13,207][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:13,226][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:17,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:17,361][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:17,381][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:21,515][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:21,518][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:21,538][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:25,649][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:25,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:25,672][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:25:54,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:54,870][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:54,890][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:11,184][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:11,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:11,211][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:15,345][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:15,349][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:15,368][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:19,488][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:19,491][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:19,511][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:23,627][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:23,630][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:23,650][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.8285714285714286 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 36/50
[2025-02-08 14:26:59,685][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:59,782][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:59,802][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:16,164][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:16,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:16,188][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:20,319][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:20,322][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:20,342][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:24,471][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:24,478][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:24,498][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:28,613][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:28,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:28,640][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 15
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:27:54,277][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:54,285][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:54,305][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:10,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:10,685][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:10,705][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:14,822][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:14,829][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:14,849][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:19,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:19,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:19,028][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:23,156][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:23,170][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:23,189][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 13
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 37/50
[2025-02-08 14:28:56,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:56,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:56,689][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:13,113][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:13,120][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:13,140][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:17,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:17,283][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:17,303][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:21,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:21,440][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:21,459][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:25,591][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:25,594][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:25,614][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.333 | Done: False

[2025-02-08 14:29:52,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:52,349][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:52,369][root][INFO] - Image embeddings computed.
[2025-02-08 14:30:08,815][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:08,820][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:08,840][root][INFO] - Image embeddings computed.
[2025-02-08 14:30:12,977][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:12,980][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:13,000][root][INFO] - Image embeddings computed.
[2025-02-08 14:30:17,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:17,135][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:17,155][root][INFO] - Image embeddings computed.
[2025-02-08 14:30:21,282][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:21,290][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:21,310][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 18
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.667 | Done: False

[2025-02-08 14:30:48,522][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:48,530][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:48,550][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:04,998][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:05,001][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:05,021][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:09,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:09,157][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:09,177][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:13,297][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:13,300][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:13,320][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:17,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:17,464][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:17,484][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 17
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8378378378378378 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 38/50
[2025-02-08 14:31:50,575][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:50,578][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:50,598][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:06,865][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:06,873][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:06,893][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:11,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:11,058][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:11,078][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:15,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:15,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:15,255][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:19,360][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:19,363][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:19,383][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 11
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.8421052631578947 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 39/50
[2025-02-08 14:32:51,125][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:51,129][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:51,149][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:07,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:07,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:07,464][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:11,608][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:11,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:11,635][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:15,756][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:15,764][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:15,784][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:19,924][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:19,931][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:19,951][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 10
Lang Goal: put the yellow blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8461538461538461 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 40/50
[2025-02-08 14:33:52,248][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:52,258][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:52,279][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:08,683][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:08,691][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:08,711][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:12,849][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:12,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:12,878][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:17,024][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:17,031][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:17,051][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:21,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:21,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:21,199][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 12
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.85 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 41/50
[2025-02-08 14:34:53,948][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:53,955][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:53,975][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:10,284][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:10,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:10,309][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:14,454][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:14,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:14,481][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:18,611][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:18,618][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:18,638][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:22,751][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:22,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:22,774][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8536585365853658 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 42/50
[2025-02-08 14:35:59,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:59,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:59,667][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:16,961][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:17,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:17,110][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:21,195][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:21,288][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:21,308][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:25,425][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:25,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:25,566][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:29,646][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:29,738][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:29,758][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 16
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8571428571428571 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 43/50
[2025-02-08 14:37:04,727][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:04,736][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:04,756][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:21,133][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:21,136][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:21,156][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:25,297][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:25,301][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:25,321][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:29,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:29,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:29,463][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:33,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:33,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:33,616][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 12
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.000 | Done: False

[2025-02-08 14:38:01,875][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:01,884][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:01,904][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:18,304][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:18,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:18,327][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:22,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:22,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:22,465][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:26,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:26,607][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:26,626][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:30,763][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:30,770][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:30,790][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.000 | Done: False

Mean: 0.8372093023255814 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 44/50
[2025-02-08 14:39:06,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:06,482][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:06,502][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:23,037][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:23,157][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:23,183][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:27,316][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:27,452][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:27,472][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:31,594][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:31,699][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:31,719][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:35,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:36,008][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:36,029][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 19
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:40:08,499][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:08,507][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:08,527][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:25,195][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:25,202][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:25,222][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:29,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:29,332][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:29,352][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:33,472][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:33,480][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:33,499][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:37,636][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:37,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:37,663][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 14
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.000 | Done: False

[2025-02-08 14:41:07,718][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:07,725][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:07,745][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:24,536][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:24,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:24,564][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:28,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:28,685][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:28,704][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:32,831][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:32,838][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:32,858][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:36,987][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:37,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:37,028][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 17
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

Mean: 0.8295454545454546 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 45/50
[2025-02-08 14:42:13,695][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:13,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:13,718][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:30,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:30,214][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:30,234][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:34,348][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:34,355][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:34,375][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:38,512][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:38,520][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:38,540][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:42,638][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:42,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:42,660][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 46/50
[2025-02-08 14:43:19,527][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:19,534][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:19,554][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:36,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:36,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:36,040][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:40,165][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:40,169][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:40,189][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:44,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:44,330][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:44,350][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:48,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:48,464][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:48,484][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 20
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.000 | Done: False

[2025-02-08 14:44:18,797][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:18,805][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:18,825][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:35,322][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:35,330][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:35,349][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:39,471][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:39,474][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:39,494][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:43,612][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:43,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:43,640][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:47,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:47,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:47,874][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 19
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.333 | Done: False

[2025-02-08 14:45:24,309][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:24,406][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:24,427][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:40,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:40,958][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:40,978][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:45,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:45,199][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:45,219][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:49,338][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:49,438][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:49,458][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:53,559][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:53,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:53,586][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 18
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.667 | Done: False

[2025-02-08 14:46:30,202][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:30,300][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:30,324][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:47,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:47,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:47,259][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:51,356][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:51,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:51,475][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:55,586][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:55,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:55,702][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:59,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:59,912][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:59,931][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 18
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.667 | Done: False

Mean: 0.8297101449275361 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 47/50
[2025-02-08 14:47:38,950][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:38,958][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:38,979][root][INFO] - Image embeddings computed.
[2025-02-08 14:47:55,223][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:55,230][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:55,250][root][INFO] - Image embeddings computed.
[2025-02-08 14:47:59,371][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:59,378][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:59,398][root][INFO] - Image embeddings computed.
[2025-02-08 14:48:03,512][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:03,520][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:03,540][root][INFO] - Image embeddings computed.
[2025-02-08 14:48:07,673][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:07,680][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:07,699][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:48:40,372][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:40,379][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:40,399][root][INFO] - Image embeddings computed.
[2025-02-08 14:48:56,563][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:56,570][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:56,590][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:00,707][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:00,713][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:00,733][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:04,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:04,856][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:04,875][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:09,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:09,016][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:09,036][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 13
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:49:39,644][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:39,650][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:39,670][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:55,840][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:55,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:55,866][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:59,998][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:00,000][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:00,020][root][INFO] - Image embeddings computed.
[2025-02-08 14:50:04,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:04,142][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:04,162][root][INFO] - Image embeddings computed.
[2025-02-08 14:50:08,297][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:08,300][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:08,321][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.8226950354609929 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 48/50
[2025-02-08 14:50:45,477][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:45,482][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:45,502][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:01,810][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:01,815][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:01,835][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:05,964][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:05,967][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:05,986][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:10,105][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:10,108][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:10,128][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:14,237][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:14,240][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:14,260][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the brown blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:51:45,952][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:45,960][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:45,980][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:02,453][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:02,460][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:02,480][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:06,616][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:06,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:06,639][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:10,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:10,777][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:10,797][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:14,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:14,921][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:14,941][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 12
Lang Goal: put the brown blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.826388888888889 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 49/50
[2025-02-08 14:52:53,272][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:53,279][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:53,299][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:09,640][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:09,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:09,667][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:13,803][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:13,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:13,829][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:17,948][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:17,955][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:17,975][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:22,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:22,071][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:22,090][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:53:54,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:54,401][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:54,421][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:10,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:10,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:10,928][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:15,071][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:15,078][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:15,097][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:19,225][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:19,232][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:19,252][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:23,341][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:23,344][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:23,363][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 12
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8299319727891158 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
Test: 50/50
[2025-02-08 14:55:01,185][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:01,193][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:01,213][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:17,499][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:17,507][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:17,526][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:21,643][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:21,646][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:21,666][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:25,796][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:25,799][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:25,818][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:29,922][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:29,929][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:29,949][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 13
Lang Goal: put the blue blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.8333333333333335 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00040-val_loss=0.00016984.ckpt
[2025-02-08 14:56:07,819][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 14:56:07,957][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 14:56:14,560][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-08 14:56:21,792][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 14:56:21,920][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 14:56:38,251][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-08 14:56:43,596][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 14:56:43,747][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 14:56:50,463][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-08 14:56:58,170][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 14:56:58,324][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 14:57:04,712][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: put-block-in-bowl-seen-colors-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/put-block-in-bowl-seen-colors-clipfit-n10-train/checkpoints/steps=00080-val_loss=0.00013815.ckpt
Test: 1/50
[2025-02-08 14:57:44,564][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:57:44,573][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:57:44,595][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:01,680][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:01,687][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:01,706][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:05,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:05,941][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:05,961][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:10,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:10,178][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:10,198][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:14,388][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:14,405][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:14,425][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 14:58:49,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:49,852][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:49,872][root][INFO] - Image embeddings computed.
[2025-02-08 14:59:06,466][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:06,473][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:06,493][root][INFO] - Image embeddings computed.
[2025-02-08 14:59:10,706][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:10,713][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:10,733][root][INFO] - Image embeddings computed.
[2025-02-08 14:59:14,944][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:14,960][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:14,980][root][INFO] - Image embeddings computed.
[2025-02-08 14:59:19,194][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:19,197][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:19,217][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 2/50
[2025-02-08 14:59:58,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:58,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:58,879][root][INFO] - Image embeddings computed.
[2025-02-08 15:00:15,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:00:15,578][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:00:15,597][root][INFO] - Image embeddings computed.
[2025-02-08 15:00:19,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:00:19,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:00:19,850][root][INFO] - Image embeddings computed.
[2025-02-08 15:00:24,070][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:00:24,073][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:00:24,093][root][INFO] - Image embeddings computed.
[2025-02-08 15:00:28,265][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:00:28,272][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:00:28,292][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 3/50
[2025-02-08 15:01:11,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:11,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:11,728][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:28,458][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:28,466][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:28,486][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:32,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:32,699][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:32,719][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:36,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:36,946][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:36,966][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:41,168][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:41,175][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:41,195][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:02:15,295][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:15,298][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:15,318][root][INFO] - Image embeddings computed.
[2025-02-08 15:02:32,066][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:32,074][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:32,094][root][INFO] - Image embeddings computed.
[2025-02-08 15:02:36,298][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:36,305][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:36,325][root][INFO] - Image embeddings computed.
[2025-02-08 15:02:40,525][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:40,532][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:40,552][root][INFO] - Image embeddings computed.
[2025-02-08 15:02:44,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:44,759][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:44,778][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 4/50
[2025-02-08 15:03:24,177][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:24,185][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:24,205][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:40,825][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:40,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:40,851][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:45,090][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:45,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:45,117][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:49,322][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:49,330][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:49,349][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:53,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:53,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:53,572][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.000 | Done: False

[2025-02-08 15:04:28,123][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:28,131][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:28,151][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:44,837][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:44,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:44,861][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:49,087][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:49,095][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:49,116][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:53,326][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:53,423][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:53,443][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:57,668][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:57,764][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:57,784][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.000 | Done: False

Mean: 0.75 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 5/50
[2025-02-08 15:05:41,208][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:05:41,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:05:41,236][root][INFO] - Image embeddings computed.
[2025-02-08 15:05:57,913][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:05:57,921][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:05:57,940][root][INFO] - Image embeddings computed.
[2025-02-08 15:06:02,168][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:02,170][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:02,190][root][INFO] - Image embeddings computed.
[2025-02-08 15:06:06,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:06,423][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:06,443][root][INFO] - Image embeddings computed.
[2025-02-08 15:06:10,663][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:10,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:10,689][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 0.000 | Done: False

[2025-02-08 15:06:46,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:46,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:46,113][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:02,880][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:02,888][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:02,908][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:07,113][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:07,120][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:07,140][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:11,404][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:11,412][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:11,432][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:15,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:15,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:15,689][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 12
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 6/50
[2025-02-08 15:08:01,242][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:01,340][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:01,359][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:17,997][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:18,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:18,115][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:22,366][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:22,458][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:22,477][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:26,694][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:26,785][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:26,805][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:31,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:31,125][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:31,150][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:09:11,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:11,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:11,199][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:27,937][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:28,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:28,050][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:32,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:32,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:32,396][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:36,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:36,697][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:36,717][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:40,910][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:41,012][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:41,032][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 11
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 7/50
[2025-02-08 15:10:26,135][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:26,142][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:26,162][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:43,125][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:43,133][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:43,153][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:47,361][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:47,366][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:47,385][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:51,597][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:51,604][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:51,623][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:55,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:55,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:55,861][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 16
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8571428571428571 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 8/50
[2025-02-08 15:11:36,913][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:36,917][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:36,937][root][INFO] - Image embeddings computed.
[2025-02-08 15:11:53,609][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:53,616][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:53,635][root][INFO] - Image embeddings computed.
[2025-02-08 15:11:57,866][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:57,873][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:57,893][root][INFO] - Image embeddings computed.
[2025-02-08 15:12:02,123][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:02,126][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:02,147][root][INFO] - Image embeddings computed.
[2025-02-08 15:12:06,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:06,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:06,467][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 10
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 9/50
[2025-02-08 15:12:52,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:53,027][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:53,047][root][INFO] - Image embeddings computed.
[2025-02-08 15:13:10,120][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:10,212][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:10,232][root][INFO] - Image embeddings computed.
[2025-02-08 15:13:14,427][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:14,522][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:14,542][root][INFO] - Image embeddings computed.
[2025-02-08 15:13:18,760][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:18,827][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:18,847][root][INFO] - Image embeddings computed.
[2025-02-08 15:13:23,050][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:23,056][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:23,076][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: put the green blocks in a red bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:13:59,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:59,944][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:59,964][root][INFO] - Image embeddings computed.
[2025-02-08 15:14:18,227][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:18,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:18,255][root][INFO] - Image embeddings computed.
[2025-02-08 15:14:22,445][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:22,462][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:22,482][root][INFO] - Image embeddings computed.
[2025-02-08 15:14:26,697][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:26,706][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:26,726][root][INFO] - Image embeddings computed.
[2025-02-08 15:14:30,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:30,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:30,967][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 14
Lang Goal: put the green blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8888888888888888 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 10/50
[2025-02-08 15:15:13,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:13,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:13,663][root][INFO] - Image embeddings computed.
[2025-02-08 15:15:30,294][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:30,301][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:30,321][root][INFO] - Image embeddings computed.
[2025-02-08 15:15:34,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:34,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:34,565][root][INFO] - Image embeddings computed.
[2025-02-08 15:15:38,780][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:38,783][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:38,802][root][INFO] - Image embeddings computed.
[2025-02-08 15:15:42,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:42,994][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:43,014][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 12
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 11/50
[2025-02-08 15:16:30,362][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:30,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:30,495][root][INFO] - Image embeddings computed.
[2025-02-08 15:16:47,210][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:47,304][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:47,330][root][INFO] - Image embeddings computed.
[2025-02-08 15:16:51,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:51,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:51,685][root][INFO] - Image embeddings computed.
[2025-02-08 15:16:55,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:56,014][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:56,034][root][INFO] - Image embeddings computed.
[2025-02-08 15:17:00,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:17:00,328][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:17:00,348][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 11
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:17:41,741][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:17:41,748][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:17:41,768][root][INFO] - Image embeddings computed.
[2025-02-08 15:17:58,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:17:58,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:17:58,467][root][INFO] - Image embeddings computed.
[2025-02-08 15:18:02,692][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:02,695][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:02,715][root][INFO] - Image embeddings computed.
[2025-02-08 15:18:06,933][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:06,939][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:06,959][root][INFO] - Image embeddings computed.
[2025-02-08 15:18:11,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:11,160][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:11,180][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 11
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9090909090909091 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 12/50
[2025-02-08 15:18:54,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:54,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:54,845][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:11,598][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:11,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:11,625][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:15,832][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:15,835][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:15,855][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:20,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:20,091][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:20,110][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:24,307][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:24,315][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:24,335][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the brown blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.9166666666666666 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 13/50
[2025-02-08 15:20:07,299][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:07,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:07,326][root][INFO] - Image embeddings computed.
[2025-02-08 15:20:24,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:24,047][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:24,067][root][INFO] - Image embeddings computed.
[2025-02-08 15:20:28,295][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:28,304][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:28,323][root][INFO] - Image embeddings computed.
[2025-02-08 15:20:32,548][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:32,551][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:32,571][root][INFO] - Image embeddings computed.
[2025-02-08 15:20:36,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:36,769][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:36,789][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9230769230769231 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 14/50
[2025-02-08 15:21:20,060][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:20,157][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:20,177][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:36,778][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:36,886][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:36,906][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:41,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:41,237][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:41,257][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:45,479][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:45,601][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:45,621][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:49,811][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:49,933][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:49,952][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 10
Lang Goal: put the red blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9285714285714286 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 15/50
[2025-02-08 15:22:36,881][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:22:36,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:22:36,910][root][INFO] - Image embeddings computed.
[2025-02-08 15:22:53,526][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:22:53,533][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:22:53,553][root][INFO] - Image embeddings computed.
[2025-02-08 15:22:57,756][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:22:57,764][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:22:57,784][root][INFO] - Image embeddings computed.
[2025-02-08 15:23:01,978][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:23:01,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:23:02,006][root][INFO] - Image embeddings computed.
[2025-02-08 15:23:06,203][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:23:06,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:23:06,230][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:23:45,012][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:23:45,015][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:23:45,035][root][INFO] - Image embeddings computed.
[2025-02-08 15:24:01,666][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:01,676][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:01,696][root][INFO] - Image embeddings computed.
[2025-02-08 15:24:05,893][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:05,901][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:05,921][root][INFO] - Image embeddings computed.
[2025-02-08 15:24:10,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:10,134][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:10,154][root][INFO] - Image embeddings computed.
[2025-02-08 15:24:14,338][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:14,346][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:14,365][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:24:52,808][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:52,815][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:52,835][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:09,383][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:09,390][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:09,410][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:13,614][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:13,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:13,641][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:17,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:17,867][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:17,887][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:22,084][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:22,091][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:22,118][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 12
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

Mean: 0.9 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 16/50
[2025-02-08 15:26:06,825][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:06,829][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:06,849][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:23,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:23,752][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:23,772][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:27,988][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:27,995][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:28,014][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:32,223][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:32,226][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:32,246][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:36,439][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:36,446][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:36,466][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.90625 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 17/50
[2025-02-08 15:27:24,096][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:24,111][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:24,131][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:40,755][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:40,758][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:40,778][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:45,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:45,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:45,026][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:49,246][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:49,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:49,272][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:53,491][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:53,497][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:53,517][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9117647058823529 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 18/50
[2025-02-08 15:28:38,917][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:28:39,043][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:28:39,063][root][INFO] - Image embeddings computed.
[2025-02-08 15:28:55,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:28:55,822][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:28:55,842][root][INFO] - Image embeddings computed.
[2025-02-08 15:29:00,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:29:00,172][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:29:00,192][root][INFO] - Image embeddings computed.
[2025-02-08 15:29:04,404][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:29:04,499][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:29:04,518][root][INFO] - Image embeddings computed.
[2025-02-08 15:29:08,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:29:08,834][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:29:08,854][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 13
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 0.000 | Done: False

[2025-02-08 15:29:49,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:29:49,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:29:49,465][root][INFO] - Image embeddings computed.
[2025-02-08 15:30:06,108][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:06,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:06,134][root][INFO] - Image embeddings computed.
[2025-02-08 15:30:10,351][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:10,358][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:10,378][root][INFO] - Image embeddings computed.
[2025-02-08 15:30:14,606][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:14,613][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:14,633][root][INFO] - Image embeddings computed.
[2025-02-08 15:30:18,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:18,849][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:18,869][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 13
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:30:59,235][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:59,242][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:59,263][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:15,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:15,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:15,831][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:20,041][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:20,047][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:20,067][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:24,287][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:24,290][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:24,310][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:28,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:28,533][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:28,558][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 7
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 0.000 | Done: False

Mean: 0.8611111111111112 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 19/50
[2025-02-08 15:32:14,963][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:14,972][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:14,992][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:31,638][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:31,645][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:31,665][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:35,900][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:35,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:35,923][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:40,140][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:40,143][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:40,163][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:44,355][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:44,363][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:44,384][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 11
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.868421052631579 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 20/50
[2025-02-08 15:33:33,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:33,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:33,644][root][INFO] - Image embeddings computed.
[2025-02-08 15:33:50,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:50,292][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:50,312][root][INFO] - Image embeddings computed.
[2025-02-08 15:33:54,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:54,630][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:54,650][root][INFO] - Image embeddings computed.
[2025-02-08 15:33:58,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:58,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:59,001][root][INFO] - Image embeddings computed.
[2025-02-08 15:34:03,199][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:34:03,295][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:34:03,315][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:34:45,203][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:34:45,213][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:34:45,233][root][INFO] - Image embeddings computed.
[2025-02-08 15:35:01,815][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:01,818][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:01,837][root][INFO] - Image embeddings computed.
[2025-02-08 15:35:06,045][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:06,048][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:06,067][root][INFO] - Image embeddings computed.
[2025-02-08 15:35:10,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:10,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:10,308][root][INFO] - Image embeddings computed.
[2025-02-08 15:35:14,516][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:14,524][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:14,544][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 12
Lang Goal: put the green blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 21/50
[2025-02-08 15:36:01,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:01,499][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:01,519][root][INFO] - Image embeddings computed.
[2025-02-08 15:36:18,122][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:18,125][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:18,145][root][INFO] - Image embeddings computed.
[2025-02-08 15:36:22,373][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:22,379][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:22,399][root][INFO] - Image embeddings computed.
[2025-02-08 15:36:26,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:26,621][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:26,641][root][INFO] - Image embeddings computed.
[2025-02-08 15:36:30,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:30,852][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:30,872][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the gray blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8809523809523809 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 22/50
[2025-02-08 15:37:20,409][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:20,501][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:20,527][root][INFO] - Image embeddings computed.
[2025-02-08 15:37:37,131][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:37,228][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:37,247][root][INFO] - Image embeddings computed.
[2025-02-08 15:37:41,480][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:41,584][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:41,615][root][INFO] - Image embeddings computed.
[2025-02-08 15:37:45,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:45,904][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:45,924][root][INFO] - Image embeddings computed.
[2025-02-08 15:37:50,126][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:50,224][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:50,244][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 9
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8863636363636364 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 23/50
[2025-02-08 15:38:38,156][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:38:38,164][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:38:38,184][root][INFO] - Image embeddings computed.
[2025-02-08 15:38:54,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:38:54,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:38:54,862][root][INFO] - Image embeddings computed.
[2025-02-08 15:38:59,060][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:38:59,069][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:38:59,089][root][INFO] - Image embeddings computed.
[2025-02-08 15:39:03,303][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:03,311][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:03,331][root][INFO] - Image embeddings computed.
[2025-02-08 15:39:07,544][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:07,551][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:07,571][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: put the yellow blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.8913043478260869 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 24/50
[2025-02-08 15:39:56,488][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:56,492][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:56,512][root][INFO] - Image embeddings computed.
[2025-02-08 15:40:13,174][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:40:13,180][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:40:13,200][root][INFO] - Image embeddings computed.
[2025-02-08 15:40:17,433][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:40:17,440][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:40:17,460][root][INFO] - Image embeddings computed.
[2025-02-08 15:40:21,664][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:40:21,671][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:40:21,691][root][INFO] - Image embeddings computed.
[2025-02-08 15:40:25,877][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:40:25,884][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:40:25,903][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the green blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8958333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 25/50
[2025-02-08 15:41:17,666][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:17,674][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:17,694][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:34,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:34,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:34,462][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:38,681][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:38,684][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:38,704][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:42,892][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:42,895][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:42,915][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:47,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:47,124][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:47,144][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:42:33,073][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:33,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:33,194][root][INFO] - Image embeddings computed.
[2025-02-08 15:42:49,853][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:49,949][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:49,969][root][INFO] - Image embeddings computed.
[2025-02-08 15:42:54,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:54,248][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:54,267][root][INFO] - Image embeddings computed.
[2025-02-08 15:42:58,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:58,562][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:58,582][root][INFO] - Image embeddings computed.
[2025-02-08 15:43:02,780][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:02,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:02,897][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 15
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 26/50
[2025-02-08 15:43:55,489][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:55,496][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:55,516][root][INFO] - Image embeddings computed.
[2025-02-08 15:44:12,549][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:44:12,656][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:44:12,675][root][INFO] - Image embeddings computed.
[2025-02-08 15:44:16,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:44:17,012][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:44:17,031][root][INFO] - Image embeddings computed.
[2025-02-08 15:44:21,233][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:44:21,329][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:44:21,349][root][INFO] - Image embeddings computed.
[2025-02-08 15:44:25,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:44:25,630][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:44:25,650][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:45:09,166][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:09,170][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:09,190][root][INFO] - Image embeddings computed.
[2025-02-08 15:45:26,192][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:26,200][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:26,220][root][INFO] - Image embeddings computed.
[2025-02-08 15:45:30,453][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:30,555][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:30,575][root][INFO] - Image embeddings computed.
[2025-02-08 15:45:34,794][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:34,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:34,882][root][INFO] - Image embeddings computed.
[2025-02-08 15:45:39,073][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:39,077][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:39,096][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 16
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.9038461538461539 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 27/50
[2025-02-08 15:46:31,326][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:31,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:31,438][root][INFO] - Image embeddings computed.
[2025-02-08 15:46:48,187][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:48,286][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:48,306][root][INFO] - Image embeddings computed.
[2025-02-08 15:46:52,546][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:52,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:52,668][root][INFO] - Image embeddings computed.
[2025-02-08 15:46:56,873][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:56,979][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:56,999][root][INFO] - Image embeddings computed.
[2025-02-08 15:47:01,210][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:47:01,329][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:47:01,349][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:47:46,696][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:47:46,789][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:47:46,809][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:03,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:03,650][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:03,670][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:07,898][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:08,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:08,030][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:12,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:12,329][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:12,365][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:16,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:16,656][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:16,676][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 13
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:49:05,833][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:49:05,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:49:05,957][root][INFO] - Image embeddings computed.
[2025-02-08 15:49:22,783][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:49:22,879][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:49:22,899][root][INFO] - Image embeddings computed.
[2025-02-08 15:49:27,143][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:49:27,243][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:49:27,263][root][INFO] - Image embeddings computed.
[2025-02-08 15:49:31,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:49:31,573][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:49:31,593][root][INFO] - Image embeddings computed.
[2025-02-08 15:49:35,807][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:49:35,905][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:49:35,924][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 4
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.500 | Done: False

Mean: 0.8888888888888888 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 28/50
[2025-02-08 15:50:28,666][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:28,764][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:28,784][root][INFO] - Image embeddings computed.
[2025-02-08 15:50:45,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:45,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:45,557][root][INFO] - Image embeddings computed.
[2025-02-08 15:50:49,768][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:49,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:49,879][root][INFO] - Image embeddings computed.
[2025-02-08 15:50:54,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:54,205][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:54,225][root][INFO] - Image embeddings computed.
[2025-02-08 15:50:58,406][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:58,504][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:58,524][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 13
Lang Goal: put the gray blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.8928571428571429 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 29/50
[2025-02-08 15:51:54,108][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:51:54,212][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:51:54,232][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:10,923][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:11,019][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:11,039][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:15,283][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:15,379][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:15,398][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:19,632][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:19,733][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:19,753][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:23,953][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:24,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:24,065][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 15:53:13,711][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:53:13,820][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:53:13,872][root][INFO] - Image embeddings computed.
[2025-02-08 15:53:30,582][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:53:30,678][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:53:30,698][root][INFO] - Image embeddings computed.
[2025-02-08 15:53:34,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:53:35,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:53:35,050][root][INFO] - Image embeddings computed.
[2025-02-08 15:53:39,277][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:53:39,375][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:53:39,395][root][INFO] - Image embeddings computed.
[2025-02-08 15:53:43,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:53:43,697][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:53:43,717][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.896551724137931 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 30/50
[2025-02-08 15:54:39,396][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:54:39,507][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:54:39,541][root][INFO] - Image embeddings computed.
[2025-02-08 15:54:56,376][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:54:56,483][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:54:56,510][root][INFO] - Image embeddings computed.
[2025-02-08 15:55:00,740][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:00,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:00,883][root][INFO] - Image embeddings computed.
[2025-02-08 15:55:05,091][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:05,197][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:05,217][root][INFO] - Image embeddings computed.
[2025-02-08 15:55:09,387][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:09,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:09,501][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.000 | Done: False

[2025-02-08 15:55:59,470][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:59,534][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:59,554][root][INFO] - Image embeddings computed.
[2025-02-08 15:56:16,259][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:16,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:16,287][root][INFO] - Image embeddings computed.
[2025-02-08 15:56:20,490][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:20,498][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:20,518][root][INFO] - Image embeddings computed.
[2025-02-08 15:56:24,737][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:24,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:24,763][root][INFO] - Image embeddings computed.
[2025-02-08 15:56:28,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:28,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:28,967][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 3
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.000 | Done: False

Mean: 0.8666666666666667 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 31/50
[2025-02-08 15:57:24,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:57:24,485][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:57:24,505][root][INFO] - Image embeddings computed.
[2025-02-08 15:57:41,288][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:57:41,404][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:57:41,424][root][INFO] - Image embeddings computed.
[2025-02-08 15:57:45,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:57:45,734][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:57:45,754][root][INFO] - Image embeddings computed.
[2025-02-08 15:57:49,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:57:50,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:57:50,116][root][INFO] - Image embeddings computed.
[2025-02-08 15:57:54,342][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:57:54,434][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:57:54,454][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.333 | Done: False

[2025-02-08 15:58:44,210][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:58:44,218][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:58:44,238][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:01,037][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:01,062][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:01,081][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:05,291][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:05,294][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:05,314][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:09,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:09,548][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:09,568][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:13,782][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:13,785][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:13,804][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.667 | Done: False

[2025-02-08 16:00:02,166][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:02,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:02,194][root][INFO] - Image embeddings computed.
[2025-02-08 16:00:18,892][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:18,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:18,920][root][INFO] - Image embeddings computed.
[2025-02-08 16:00:23,120][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:23,123][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:23,143][root][INFO] - Image embeddings computed.
[2025-02-08 16:00:27,348][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:27,351][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:27,370][root][INFO] - Image embeddings computed.
[2025-02-08 16:00:31,606][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:31,608][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:31,628][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8709677419354839 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 32/50
[2025-02-08 16:01:23,840][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:23,848][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:23,868][root][INFO] - Image embeddings computed.
[2025-02-08 16:01:40,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:40,513][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:40,533][root][INFO] - Image embeddings computed.
[2025-02-08 16:01:44,761][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:44,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:44,788][root][INFO] - Image embeddings computed.
[2025-02-08 16:01:49,007][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:49,015][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:49,035][root][INFO] - Image embeddings computed.
[2025-02-08 16:01:53,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:53,257][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:53,276][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 10
Lang Goal: put the red blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 33/50
[2025-02-08 16:02:46,553][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:02:46,564][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:02:46,584][root][INFO] - Image embeddings computed.
[2025-02-08 16:03:03,434][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:03,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:03,461][root][INFO] - Image embeddings computed.
[2025-02-08 16:03:07,667][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:07,675][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:07,694][root][INFO] - Image embeddings computed.
[2025-02-08 16:03:11,900][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:11,906][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:11,926][root][INFO] - Image embeddings computed.
[2025-02-08 16:03:16,122][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:16,129][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:16,149][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the green blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:04:03,105][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:03,113][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:03,133][root][INFO] - Image embeddings computed.
[2025-02-08 16:04:20,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:20,731][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:20,751][root][INFO] - Image embeddings computed.
[2025-02-08 16:04:24,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:24,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:24,984][root][INFO] - Image embeddings computed.
[2025-02-08 16:04:29,201][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:29,209][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:29,228][root][INFO] - Image embeddings computed.
[2025-02-08 16:04:33,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:33,429][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:33,448][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the green blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.8787878787878788 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 34/50
[2025-02-08 16:05:26,178][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:26,186][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:26,205][root][INFO] - Image embeddings computed.
[2025-02-08 16:05:42,830][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:42,839][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:42,858][root][INFO] - Image embeddings computed.
[2025-02-08 16:05:47,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:47,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:47,139][root][INFO] - Image embeddings computed.
[2025-02-08 16:05:51,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:51,433][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:51,453][root][INFO] - Image embeddings computed.
[2025-02-08 16:05:55,653][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:55,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:55,764][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8823529411764706 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 35/50
[2025-02-08 16:06:54,616][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:06:54,731][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:06:54,751][root][INFO] - Image embeddings computed.
[2025-02-08 16:07:12,035][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:07:12,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:07:12,178][root][INFO] - Image embeddings computed.
[2025-02-08 16:07:16,397][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:07:16,502][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:07:16,522][root][INFO] - Image embeddings computed.
[2025-02-08 16:07:20,722][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:07:20,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:07:20,851][root][INFO] - Image embeddings computed.
[2025-02-08 16:07:25,035][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:07:25,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:07:25,157][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 17
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:08:13,945][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:08:13,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:08:13,974][root][INFO] - Image embeddings computed.
[2025-02-08 16:08:30,653][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:08:30,662][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:08:30,682][root][INFO] - Image embeddings computed.
[2025-02-08 16:08:34,891][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:08:34,897][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:08:34,917][root][INFO] - Image embeddings computed.
[2025-02-08 16:08:39,135][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:08:39,143][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:08:39,162][root][INFO] - Image embeddings computed.
[2025-02-08 16:08:43,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:08:43,364][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:08:43,384][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:09:31,519][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:09:31,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:09:31,565][root][INFO] - Image embeddings computed.
[2025-02-08 16:09:48,172][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:09:48,180][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:09:48,199][root][INFO] - Image embeddings computed.
[2025-02-08 16:09:52,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:09:52,412][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:09:52,432][root][INFO] - Image embeddings computed.
[2025-02-08 16:09:56,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:09:56,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:09:56,668][root][INFO] - Image embeddings computed.
[2025-02-08 16:10:00,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:00,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:00,880][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.8714285714285714 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 36/50
[2025-02-08 16:10:54,783][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:54,791][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:54,811][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:11,504][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:11,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:11,531][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:15,748][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:15,755][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:15,775][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:19,990][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:19,993][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:20,013][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:24,213][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:24,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:24,236][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 15
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:12:13,852][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:12:13,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:12:13,879][root][INFO] - Image embeddings computed.
[2025-02-08 16:12:30,561][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:12:30,568][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:12:30,588][root][INFO] - Image embeddings computed.
[2025-02-08 16:12:34,787][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:12:34,794][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:12:34,813][root][INFO] - Image embeddings computed.
[2025-02-08 16:12:39,042][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:12:39,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:12:39,065][root][INFO] - Image embeddings computed.
[2025-02-08 16:12:43,277][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:12:43,280][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:12:43,300][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 14
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:13:31,981][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:31,990][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:32,010][root][INFO] - Image embeddings computed.
[2025-02-08 16:13:48,663][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:48,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:48,690][root][INFO] - Image embeddings computed.
[2025-02-08 16:13:52,896][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:52,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:52,923][root][INFO] - Image embeddings computed.
[2025-02-08 16:13:57,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:57,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:57,175][root][INFO] - Image embeddings computed.
[2025-02-08 16:14:01,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:01,394][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:01,413][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 14
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.500 | Done: False

Mean: 0.8611111111111112 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 37/50
[2025-02-08 16:14:57,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:57,020][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:57,040][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:13,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:13,817][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:13,837][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:18,055][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:18,146][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:18,166][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:22,377][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:22,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:22,488][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:26,699][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:26,794][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:26,814][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.333 | Done: False

[2025-02-08 16:16:20,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:16:20,238][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:16:20,258][root][INFO] - Image embeddings computed.
[2025-02-08 16:16:37,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:16:37,074][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:16:37,093][root][INFO] - Image embeddings computed.
[2025-02-08 16:16:41,313][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:16:41,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:16:41,341][root][INFO] - Image embeddings computed.
[2025-02-08 16:16:45,561][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:16:45,564][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:16:45,584][root][INFO] - Image embeddings computed.
[2025-02-08 16:16:49,781][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:16:49,789][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:16:49,809][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 18
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.667 | Done: False

[2025-02-08 16:17:41,609][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:17:41,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:17:41,636][root][INFO] - Image embeddings computed.
[2025-02-08 16:17:58,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:17:58,388][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:17:58,408][root][INFO] - Image embeddings computed.
[2025-02-08 16:18:02,613][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:02,616][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:02,636][root][INFO] - Image embeddings computed.
[2025-02-08 16:18:06,841][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:06,844][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:06,863][root][INFO] - Image embeddings computed.
[2025-02-08 16:18:11,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:11,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:11,100][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 18
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8648648648648649 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 38/50
[2025-02-08 16:19:06,594][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:06,601][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:06,621][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:23,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:23,236][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:23,256][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:27,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:27,595][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:27,614][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:31,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:31,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:31,957][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:36,142][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:36,234][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:36,254][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 11
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.868421052631579 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 39/50
[2025-02-08 16:20:34,973][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:20:34,979][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:20:35,000][root][INFO] - Image embeddings computed.
[2025-02-08 16:20:51,632][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:20:51,635][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:20:51,654][root][INFO] - Image embeddings computed.
[2025-02-08 16:20:55,881][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:20:55,884][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:20:55,903][root][INFO] - Image embeddings computed.
[2025-02-08 16:21:00,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:21:00,111][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:21:00,130][root][INFO] - Image embeddings computed.
[2025-02-08 16:21:04,352][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:21:04,360][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:21:04,379][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 10
Lang Goal: put the yellow blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8717948717948718 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 40/50
[2025-02-08 16:22:00,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:00,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:00,586][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:17,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:17,340][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:17,360][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:21,584][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:21,590][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:21,610][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:25,838][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:25,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:25,865][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:30,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:30,079][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:30,099][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 12
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 41/50
[2025-02-08 16:23:30,461][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:30,559][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:30,579][root][INFO] - Image embeddings computed.
[2025-02-08 16:23:47,231][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:47,302][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:47,322][root][INFO] - Image embeddings computed.
[2025-02-08 16:23:51,549][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:51,556][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:51,576][root][INFO] - Image embeddings computed.
[2025-02-08 16:23:55,780][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:55,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:55,808][root][INFO] - Image embeddings computed.
[2025-02-08 16:24:00,002][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:24:00,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:24:00,028][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.000 | Done: False

[2025-02-08 16:24:52,308][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:24:52,316][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:24:52,336][root][INFO] - Image embeddings computed.
[2025-02-08 16:25:09,064][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:25:09,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:25:09,092][root][INFO] - Image embeddings computed.
[2025-02-08 16:25:13,309][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:25:13,317][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:25:13,337][root][INFO] - Image embeddings computed.
[2025-02-08 16:25:17,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:25:17,567][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:25:17,586][root][INFO] - Image embeddings computed.
[2025-02-08 16:25:21,798][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:25:21,810][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:25:21,829][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8780487804878049 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 42/50
[2025-02-08 16:26:19,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:19,426][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:19,446][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:37,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:37,212][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:37,232][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:41,406][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:41,498][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:41,518][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:45,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:45,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:45,851][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:50,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:50,202][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:50,221][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 16
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.000 | Done: False

[2025-02-08 16:27:45,943][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:27:45,951][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:27:45,971][root][INFO] - Image embeddings computed.
[2025-02-08 16:28:04,915][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:28:04,919][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:28:04,939][root][INFO] - Image embeddings computed.
[2025-02-08 16:28:09,119][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:28:09,122][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:28:09,142][root][INFO] - Image embeddings computed.
[2025-02-08 16:28:13,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:28:13,350][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:28:13,371][root][INFO] - Image embeddings computed.
[2025-02-08 16:28:17,544][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:28:17,547][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:28:17,567][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 17
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.000 | Done: False

Mean: 0.8571428571428571 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 43/50
[2025-02-08 16:29:15,385][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:29:15,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:29:15,408][root][INFO] - Image embeddings computed.
[2025-02-08 16:29:32,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:29:32,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:29:32,134][root][INFO] - Image embeddings computed.
[2025-02-08 16:29:36,368][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:29:36,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:29:36,390][root][INFO] - Image embeddings computed.
[2025-02-08 16:29:40,597][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:29:40,600][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:29:40,619][root][INFO] - Image embeddings computed.
[2025-02-08 16:29:44,831][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:29:44,835][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:29:44,854][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 12
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8604651162790697 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 44/50
[2025-02-08 16:30:43,488][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:30:43,492][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:30:43,511][root][INFO] - Image embeddings computed.
[2025-02-08 16:31:00,368][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:00,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:00,391][root][INFO] - Image embeddings computed.
[2025-02-08 16:31:04,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:04,618][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:04,638][root][INFO] - Image embeddings computed.
[2025-02-08 16:31:08,844][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:08,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:08,878][root][INFO] - Image embeddings computed.
[2025-02-08 16:31:13,101][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:13,104][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:13,123][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 19
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:32:05,715][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:05,723][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:05,743][root][INFO] - Image embeddings computed.
[2025-02-08 16:32:22,912][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:22,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:22,935][root][INFO] - Image embeddings computed.
[2025-02-08 16:32:27,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:27,139][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:27,159][root][INFO] - Image embeddings computed.
[2025-02-08 16:32:31,368][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:31,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:31,390][root][INFO] - Image embeddings computed.
[2025-02-08 16:32:35,608][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:35,616][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:35,636][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 11
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8636363636363636 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 45/50
[2025-02-08 16:33:34,634][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:33:34,638][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:33:34,658][root][INFO] - Image embeddings computed.
[2025-02-08 16:33:51,483][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:33:51,486][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:33:51,505][root][INFO] - Image embeddings computed.
[2025-02-08 16:33:55,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:33:55,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:33:55,732][root][INFO] - Image embeddings computed.
[2025-02-08 16:33:59,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:33:59,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:33:59,978][root][INFO] - Image embeddings computed.
[2025-02-08 16:34:04,160][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:34:04,167][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:34:04,187][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8666666666666667 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 46/50
[2025-02-08 16:35:04,398][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:35:04,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:35:04,422][root][INFO] - Image embeddings computed.
[2025-02-08 16:35:21,215][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:35:21,223][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:35:21,243][root][INFO] - Image embeddings computed.
[2025-02-08 16:35:25,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:35:25,458][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:35:25,478][root][INFO] - Image embeddings computed.
[2025-02-08 16:35:29,695][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:35:29,702][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:35:29,722][root][INFO] - Image embeddings computed.
[2025-02-08 16:35:33,905][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:35:33,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:35:33,929][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 20
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.333 | Done: False

[2025-02-08 16:36:27,713][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:27,716][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:27,736][root][INFO] - Image embeddings computed.
[2025-02-08 16:36:44,582][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:44,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:44,609][root][INFO] - Image embeddings computed.
[2025-02-08 16:36:48,817][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:48,824][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:48,844][root][INFO] - Image embeddings computed.
[2025-02-08 16:36:53,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:53,062][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:53,082][root][INFO] - Image embeddings computed.
[2025-02-08 16:36:57,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:57,275][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:57,295][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.333 | Done: False

[2025-02-08 16:37:52,107][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:37:52,111][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:37:52,131][root][INFO] - Image embeddings computed.
[2025-02-08 16:38:09,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:38:09,397][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:38:09,417][root][INFO] - Image embeddings computed.
[2025-02-08 16:38:13,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:38:13,610][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:38:13,630][root][INFO] - Image embeddings computed.
[2025-02-08 16:38:17,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:38:17,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:38:17,862][root][INFO] - Image embeddings computed.
[2025-02-08 16:38:22,058][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:38:22,077][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:38:22,113][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 18
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.667 | Done: False

[2025-02-08 16:39:17,923][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:17,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:17,946][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:35,204][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:35,212][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:35,231][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:39,418][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:39,426][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:39,446][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:43,645][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:43,653][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:43,672][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:47,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:47,875][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:47,894][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 16
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.8695652173913043 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 47/50
[2025-02-08 16:40:48,010][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:40:48,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:40:48,038][root][INFO] - Image embeddings computed.
[2025-02-08 16:41:04,625][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:41:04,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:41:04,653][root][INFO] - Image embeddings computed.
[2025-02-08 16:41:08,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:41:08,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:41:08,887][root][INFO] - Image embeddings computed.
[2025-02-08 16:41:13,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:41:13,086][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:41:13,106][root][INFO] - Image embeddings computed.
[2025-02-08 16:41:17,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:41:17,335][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:41:17,354][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:42:11,233][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:11,240][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:11,261][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:27,824][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:27,827][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:27,847][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:32,064][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:32,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:32,092][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:36,287][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:36,290][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:36,310][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:40,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:40,537][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:40,557][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 13
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:43:34,687][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:34,696][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:34,715][root][INFO] - Image embeddings computed.
[2025-02-08 16:43:51,278][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:51,282][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:51,302][root][INFO] - Image embeddings computed.
[2025-02-08 16:43:55,517][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:55,525][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:55,545][root][INFO] - Image embeddings computed.
[2025-02-08 16:43:59,749][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:59,756][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:59,776][root][INFO] - Image embeddings computed.
[2025-02-08 16:44:03,990][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:44:04,001][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:44:04,020][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 14
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.8617021276595744 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 48/50
[2025-02-08 16:45:04,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:04,686][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:04,706][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:21,348][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:21,351][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:21,371][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:25,588][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:25,591][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:25,611][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:29,815][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:29,822][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:29,842][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:34,038][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:34,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:34,065][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the brown blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:46:29,155][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:29,163][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:29,183][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:46,237][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:46,243][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:46,262][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:50,482][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:50,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:50,508][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:54,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:54,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:54,730][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:58,929][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:58,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:58,956][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 13
Lang Goal: put the brown blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.8645833333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 49/50
[2025-02-08 16:48:05,014][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:48:05,113][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:48:05,133][root][INFO] - Image embeddings computed.
[2025-02-08 16:48:21,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:48:21,923][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:48:21,943][root][INFO] - Image embeddings computed.
[2025-02-08 16:48:26,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:48:26,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:48:26,301][root][INFO] - Image embeddings computed.
[2025-02-08 16:48:30,500][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:48:30,592][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:48:30,612][root][INFO] - Image embeddings computed.
[2025-02-08 16:48:34,791][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:48:34,888][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:48:34,908][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:49:32,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:32,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:32,728][root][INFO] - Image embeddings computed.
[2025-02-08 16:49:49,605][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:49,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:49,630][root][INFO] - Image embeddings computed.
[2025-02-08 16:49:53,864][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:53,867][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:53,887][root][INFO] - Image embeddings computed.
[2025-02-08 16:49:58,091][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:58,094][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:58,113][root][INFO] - Image embeddings computed.
[2025-02-08 16:50:02,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:50:02,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:50:02,309][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 14
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8673469387755102 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
Test: 50/50
[2025-02-08 16:51:04,348][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:51:04,453][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:51:04,473][root][INFO] - Image embeddings computed.
[2025-02-08 16:51:21,105][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:51:21,197][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:51:21,231][root][INFO] - Image embeddings computed.
[2025-02-08 16:51:25,431][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:51:25,529][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:51:25,549][root][INFO] - Image embeddings computed.
[2025-02-08 16:51:29,751][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:51:29,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:51:29,875][root][INFO] - Image embeddings computed.
[2025-02-08 16:51:34,057][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:51:34,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:51:34,176][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 13
Lang Goal: put the blue blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.87 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00080-val_loss=0.00013815.ckpt
[2025-02-08 16:52:33,275][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 16:52:33,421][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 16:52:39,831][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-08 16:52:43,150][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 16:52:43,277][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 16:52:49,847][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-08 16:52:55,658][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 16:52:55,800][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 16:53:02,201][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-08 16:53:07,748][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 16:53:07,894][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 16:53:14,324][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: put-block-in-bowl-seen-colors-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/put-block-in-bowl-seen-colors-clipfit-n10-train/checkpoints/steps=00120-val_loss=0.00013769.ckpt
Test: 1/50
[2025-02-08 16:53:59,899][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:00,019][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:00,041][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:16,594][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:16,691][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:16,710][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:20,921][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:21,032][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:21,052][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:25,249][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:25,351][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:25,371][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:29,549][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:29,640][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:29,671][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:55:26,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:55:26,465][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:55:26,485][root][INFO] - Image embeddings computed.
[2025-02-08 16:55:43,105][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:55:43,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:55:43,132][root][INFO] - Image embeddings computed.
[2025-02-08 16:55:47,336][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:55:47,339][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:55:47,359][root][INFO] - Image embeddings computed.
[2025-02-08 16:55:51,538][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:55:51,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:55:51,561][root][INFO] - Image embeddings computed.
[2025-02-08 16:55:55,763][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:55:55,766][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:55:55,786][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 2/50
[2025-02-08 16:56:58,756][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:56:58,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:56:58,780][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:15,408][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:15,411][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:15,431][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:19,644][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:19,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:19,667][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:23,872][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:23,875][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:23,895][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:28,058][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:28,066][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:28,086][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 3/50
[2025-02-08 16:58:31,532][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:58:31,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:58:31,561][root][INFO] - Image embeddings computed.
[2025-02-08 16:58:48,246][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:58:48,249][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:58:48,269][root][INFO] - Image embeddings computed.
[2025-02-08 16:58:52,458][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:58:52,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:58:52,481][root][INFO] - Image embeddings computed.
[2025-02-08 16:58:56,683][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:58:56,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:58:56,710][root][INFO] - Image embeddings computed.
[2025-02-08 16:59:00,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:59:00,923][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:59:00,943][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 16:59:58,108][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:59:58,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:59:58,132][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:15,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:15,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:15,045][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:19,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:19,231][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:19,251][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:23,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:23,454][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:23,474][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:27,658][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:27,753][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:27,774][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 12
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 4/50
[2025-02-08 17:01:30,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:30,294][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:30,315][root][INFO] - Image embeddings computed.
[2025-02-08 17:01:46,852][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:46,950][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:46,970][root][INFO] - Image embeddings computed.
[2025-02-08 17:01:51,191][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:51,283][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:51,303][root][INFO] - Image embeddings computed.
[2025-02-08 17:01:55,491][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:55,587][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:55,626][root][INFO] - Image embeddings computed.
[2025-02-08 17:01:59,808][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:59,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:59,879][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 5/50
[2025-02-08 17:03:04,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:04,722][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:04,742][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:21,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:21,478][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:21,498][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:25,707][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:25,799][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:25,819][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:30,026][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:30,118][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:30,138][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:34,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:34,432][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:34,458][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 6/50
[2025-02-08 17:04:38,443][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:04:38,451][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:04:38,472][root][INFO] - Image embeddings computed.
[2025-02-08 17:04:55,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:04:55,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:04:55,077][root][INFO] - Image embeddings computed.
[2025-02-08 17:04:59,313][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:04:59,320][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:04:59,340][root][INFO] - Image embeddings computed.
[2025-02-08 17:05:03,536][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:05:03,543][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:05:03,563][root][INFO] - Image embeddings computed.
[2025-02-08 17:05:07,753][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:05:07,761][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:05:07,781][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:06:06,279][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:06,288][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:06,317][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:22,933][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:22,941][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:22,961][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:27,184][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:27,275][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:27,295][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:31,493][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:31,584][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:31,604][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:35,791][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:35,892][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:35,912][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 12
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 7/50
[2025-02-08 17:07:43,447][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:07:43,558][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:07:43,579][root][INFO] - Image embeddings computed.
[2025-02-08 17:08:00,462][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:08:00,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:08:00,574][root][INFO] - Image embeddings computed.
[2025-02-08 17:08:04,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:08:04,869][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:08:04,889][root][INFO] - Image embeddings computed.
[2025-02-08 17:08:09,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:08:09,188][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:08:09,208][root][INFO] - Image embeddings computed.
[2025-02-08 17:08:13,402][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:08:13,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:08:13,521][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 16
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 8/50
[2025-02-08 17:09:18,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:18,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:18,212][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:34,805][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:34,810][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:34,830][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:39,052][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:39,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:39,077][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:43,300][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:43,308][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:43,328][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:47,500][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:47,509][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:47,529][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 10
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 9/50
[2025-02-08 17:10:55,201][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:10:55,208][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:10:55,228][root][INFO] - Image embeddings computed.
[2025-02-08 17:11:12,235][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:11:12,241][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:11:12,261][root][INFO] - Image embeddings computed.
[2025-02-08 17:11:16,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:11:16,450][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:11:16,470][root][INFO] - Image embeddings computed.
[2025-02-08 17:11:20,680][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:11:20,683][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:11:20,703][root][INFO] - Image embeddings computed.
[2025-02-08 17:11:24,891][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:11:24,894][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:11:24,914][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: put the green blocks in a red bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:12:24,827][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:24,931][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:24,951][root][INFO] - Image embeddings computed.
[2025-02-08 17:12:42,830][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:42,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:42,947][root][INFO] - Image embeddings computed.
[2025-02-08 17:12:47,128][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:47,219][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:47,239][root][INFO] - Image embeddings computed.
[2025-02-08 17:12:51,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:51,531][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:51,552][root][INFO] - Image embeddings computed.
[2025-02-08 17:12:55,736][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:55,832][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:55,852][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: put the green blocks in a red bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:14:00,634][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:14:00,720][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:14:00,741][root][INFO] - Image embeddings computed.
[2025-02-08 17:14:17,837][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:14:17,840][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:14:17,860][root][INFO] - Image embeddings computed.
[2025-02-08 17:14:22,021][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:14:22,028][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:14:22,048][root][INFO] - Image embeddings computed.
[2025-02-08 17:14:26,248][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:14:26,255][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:14:26,275][root][INFO] - Image embeddings computed.
[2025-02-08 17:14:30,482][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:14:30,490][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:14:30,510][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: put the green blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 10/50
[2025-02-08 17:15:36,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:15:36,430][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:15:36,450][root][INFO] - Image embeddings computed.
[2025-02-08 17:15:53,026][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:15:53,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:15:53,055][root][INFO] - Image embeddings computed.
[2025-02-08 17:15:57,261][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:15:57,357][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:15:57,377][root][INFO] - Image embeddings computed.
[2025-02-08 17:16:01,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:16:01,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:16:01,685][root][INFO] - Image embeddings computed.
[2025-02-08 17:16:05,859][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:16:05,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:16:05,888][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 12
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 11/50
[2025-02-08 17:17:15,255][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:17:15,378][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:17:15,398][root][INFO] - Image embeddings computed.
[2025-02-08 17:17:32,080][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:17:32,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:17:32,194][root][INFO] - Image embeddings computed.
[2025-02-08 17:17:36,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:17:36,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:17:36,535][root][INFO] - Image embeddings computed.
[2025-02-08 17:17:40,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:17:40,837][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:17:40,857][root][INFO] - Image embeddings computed.
[2025-02-08 17:17:45,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:17:45,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:17:45,157][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 11
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:18:45,582][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:18:45,590][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:18:45,610][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:02,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:02,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:02,194][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:06,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:06,410][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:06,430][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:10,640][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:10,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:10,663][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:14,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:14,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:14,862][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 11
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 12/50
[2025-02-08 17:20:23,714][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:20:23,722][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:20:23,742][root][INFO] - Image embeddings computed.
[2025-02-08 17:20:40,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:20:40,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:20:40,463][root][INFO] - Image embeddings computed.
[2025-02-08 17:20:44,650][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:20:44,658][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:20:44,678][root][INFO] - Image embeddings computed.
[2025-02-08 17:20:48,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:20:48,892][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:20:48,912][root][INFO] - Image embeddings computed.
[2025-02-08 17:20:53,093][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:20:53,096][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:20:53,127][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the brown blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 13/50
[2025-02-08 17:21:59,848][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:21:59,853][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:21:59,874][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:16,524][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:16,532][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:16,552][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:20,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:20,765][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:20,785][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:24,995][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:24,998][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:25,018][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:29,198][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:29,205][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:29,225][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 14/50
[2025-02-08 17:23:37,918][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:23:38,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:23:38,041][root][INFO] - Image embeddings computed.
[2025-02-08 17:23:54,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:23:54,678][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:23:54,698][root][INFO] - Image embeddings computed.
[2025-02-08 17:23:58,920][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:23:59,015][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:23:59,036][root][INFO] - Image embeddings computed.
[2025-02-08 17:24:03,243][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:24:03,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:24:03,376][root][INFO] - Image embeddings computed.
[2025-02-08 17:24:07,552][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:24:07,668][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:24:07,688][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 10
Lang Goal: put the red blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 1.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 15/50
[2025-02-08 17:25:19,117][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:19,208][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:19,229][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:35,777][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:35,869][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:35,889][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:40,073][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:40,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:40,194][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:44,381][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:44,502][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:44,522][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:48,707][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:48,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:48,845][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:26:51,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:26:51,222][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:26:51,243][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:07,802][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:07,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:07,919][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:12,093][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:12,232][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:12,265][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:16,464][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:16,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:16,586][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:20,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:20,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:20,880][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 12
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:28:25,086][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:25,089][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:25,109][root][INFO] - Image embeddings computed.
[2025-02-08 17:28:44,106][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:44,109][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:44,129][root][INFO] - Image embeddings computed.
[2025-02-08 17:28:48,257][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:48,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:48,280][root][INFO] - Image embeddings computed.
[2025-02-08 17:28:52,464][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:52,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:52,487][root][INFO] - Image embeddings computed.
[2025-02-08 17:28:56,654][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:56,662][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:56,682][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 12
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

Mean: 0.9666666666666667 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 16/50
[2025-02-08 17:30:08,349][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:08,360][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:08,380][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:25,201][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:25,209][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:25,229][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:29,429][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:29,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:29,456][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:33,652][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:33,659][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:33,679][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:37,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:37,869][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:37,890][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.96875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 17/50
[2025-02-08 17:31:45,720][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:31:45,729][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:31:45,749][root][INFO] - Image embeddings computed.
[2025-02-08 17:32:02,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:32:02,286][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:32:02,307][root][INFO] - Image embeddings computed.
[2025-02-08 17:32:06,514][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:32:06,520][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:32:06,540][root][INFO] - Image embeddings computed.
[2025-02-08 17:32:10,748][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:32:10,751][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:32:10,771][root][INFO] - Image embeddings computed.
[2025-02-08 17:32:14,973][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:32:14,976][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:32:14,996][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9705882352941176 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 18/50
[2025-02-08 17:33:24,787][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:24,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:24,832][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:41,436][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:41,446][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:41,466][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:45,684][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:45,687][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:45,708][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:49,907][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:49,999][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:50,019][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:54,227][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:54,325][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:54,345][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 13
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:34:57,888][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:34:57,896][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:34:57,916][root][INFO] - Image embeddings computed.
[2025-02-08 17:35:14,435][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:35:14,438][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:35:14,458][root][INFO] - Image embeddings computed.
[2025-02-08 17:35:18,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:35:18,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:35:18,684][root][INFO] - Image embeddings computed.
[2025-02-08 17:35:22,893][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:35:22,896][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:35:22,916][root][INFO] - Image embeddings computed.
[2025-02-08 17:35:27,102][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:35:27,105][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:35:27,126][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 10
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 0.000 | Done: False

[2025-02-08 17:36:31,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:31,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:31,775][root][INFO] - Image embeddings computed.
[2025-02-08 17:36:48,393][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:48,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:48,416][root][INFO] - Image embeddings computed.
[2025-02-08 17:36:52,618][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:52,621][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:52,641][root][INFO] - Image embeddings computed.
[2025-02-08 17:36:56,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:56,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:56,891][root][INFO] - Image embeddings computed.
[2025-02-08 17:37:01,086][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:37:01,089][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:37:01,109][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 13
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 0.500 | Done: False

Mean: 0.9444444444444444 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 19/50
[2025-02-08 17:38:14,204][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:14,301][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:14,321][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:30,884][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:30,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:31,002][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:35,215][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:35,344][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:35,364][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:39,563][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:39,749][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:39,769][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:43,937][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:44,056][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:44,076][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 11
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9473684210526315 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 20/50
[2025-02-08 17:39:55,431][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:39:55,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:39:55,456][root][INFO] - Image embeddings computed.
[2025-02-08 17:40:12,042][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:40:12,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:40:12,065][root][INFO] - Image embeddings computed.
[2025-02-08 17:40:16,265][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:40:16,268][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:40:16,288][root][INFO] - Image embeddings computed.
[2025-02-08 17:40:20,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:40:20,507][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:40:20,527][root][INFO] - Image embeddings computed.
[2025-02-08 17:40:24,715][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:40:24,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:40:24,846][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:41:29,807][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:29,810][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:29,831][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:46,377][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:46,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:46,401][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:50,588][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:50,591][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:50,611][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:54,816][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:54,819][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:54,839][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:59,043][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:59,139][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:59,160][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 13
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:43:06,119][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:43:06,123][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:43:06,143][root][INFO] - Image embeddings computed.
[2025-02-08 17:43:22,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:43:22,662][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:43:22,682][root][INFO] - Image embeddings computed.
[2025-02-08 17:43:26,875][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:43:26,878][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:43:26,898][root][INFO] - Image embeddings computed.
[2025-02-08 17:43:31,114][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:43:31,117][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:43:31,137][root][INFO] - Image embeddings computed.
[2025-02-08 17:43:35,324][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:43:35,327][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:43:35,347][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 13
Lang Goal: put the green blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.95 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 21/50
[2025-02-08 17:44:44,868][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:44:44,871][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:44:44,892][root][INFO] - Image embeddings computed.
[2025-02-08 17:45:01,443][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:45:01,446][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:45:01,466][root][INFO] - Image embeddings computed.
[2025-02-08 17:45:05,679][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:45:05,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:45:05,702][root][INFO] - Image embeddings computed.
[2025-02-08 17:45:09,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:45:09,904][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:45:09,924][root][INFO] - Image embeddings computed.
[2025-02-08 17:45:14,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:45:14,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:45:14,132][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the gray blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.9523809523809523 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 22/50
[2025-02-08 17:46:24,806][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:46:24,912][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:46:24,932][root][INFO] - Image embeddings computed.
[2025-02-08 17:46:41,509][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:46:41,600][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:46:41,621][root][INFO] - Image embeddings computed.
[2025-02-08 17:46:45,841][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:46:45,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:46:45,974][root][INFO] - Image embeddings computed.
[2025-02-08 17:46:50,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:46:50,247][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:46:50,267][root][INFO] - Image embeddings computed.
[2025-02-08 17:46:54,456][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:46:54,560][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:46:54,581][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 9
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9545454545454546 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 23/50
[2025-02-08 17:48:05,987][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:06,099][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:06,119][root][INFO] - Image embeddings computed.
[2025-02-08 17:48:22,713][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:22,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:22,829][root][INFO] - Image embeddings computed.
[2025-02-08 17:48:27,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:27,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:27,123][root][INFO] - Image embeddings computed.
[2025-02-08 17:48:31,320][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:31,416][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:31,436][root][INFO] - Image embeddings computed.
[2025-02-08 17:48:35,633][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:35,725][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:35,744][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: put the yellow blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9565217391304348 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 24/50
[2025-02-08 17:49:47,573][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:49:47,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:49:47,685][root][INFO] - Image embeddings computed.
[2025-02-08 17:50:04,277][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:50:04,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:50:04,307][root][INFO] - Image embeddings computed.
[2025-02-08 17:50:08,523][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:50:08,526][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:50:08,546][root][INFO] - Image embeddings computed.
[2025-02-08 17:50:12,737][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:50:12,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:50:12,764][root][INFO] - Image embeddings computed.
[2025-02-08 17:50:16,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:50:16,949][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:50:16,978][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the green blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9583333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 25/50
[2025-02-08 17:51:28,993][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:51:28,997][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:51:29,017][root][INFO] - Image embeddings computed.
[2025-02-08 17:51:45,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:51:45,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:51:45,703][root][INFO] - Image embeddings computed.
[2025-02-08 17:51:49,906][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:51:49,914][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:51:49,934][root][INFO] - Image embeddings computed.
[2025-02-08 17:51:54,107][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:51:54,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:51:54,135][root][INFO] - Image embeddings computed.
[2025-02-08 17:51:58,315][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:51:58,322][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:51:58,342][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:53:04,239][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:04,243][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:04,263][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:20,896][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:20,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:20,923][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:25,081][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:25,089][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:25,109][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:29,300][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:29,303][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:29,323][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:33,515][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:33,523][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:33,543][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 16
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.96 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 26/50
[2025-02-08 17:54:46,313][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:54:46,427][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:54:46,447][root][INFO] - Image embeddings computed.
[2025-02-08 17:55:03,415][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:55:03,528][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:55:03,549][root][INFO] - Image embeddings computed.
[2025-02-08 17:55:07,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:55:07,883][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:55:07,913][root][INFO] - Image embeddings computed.
[2025-02-08 17:55:12,102][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:55:12,198][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:55:12,218][root][INFO] - Image embeddings computed.
[2025-02-08 17:55:16,392][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:55:16,516][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:55:16,536][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:56:23,808][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:23,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:23,832][root][INFO] - Image embeddings computed.
[2025-02-08 17:56:40,702][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:40,709][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:40,729][root][INFO] - Image embeddings computed.
[2025-02-08 17:56:44,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:44,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:44,985][root][INFO] - Image embeddings computed.
[2025-02-08 17:56:49,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:49,180][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:49,200][root][INFO] - Image embeddings computed.
[2025-02-08 17:56:53,374][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:53,386][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:53,406][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.9615384615384616 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 27/50
[2025-02-08 17:58:07,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:07,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:07,565][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:24,275][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:24,283][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:24,303][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:28,529][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:28,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:28,556][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:32,744][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:32,752][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:32,771][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:36,971][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:36,978][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:36,998][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 17:59:44,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:59:44,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:59:44,391][root][INFO] - Image embeddings computed.
[2025-02-08 18:00:01,094][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:00:01,099][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:00:01,119][root][INFO] - Image embeddings computed.
[2025-02-08 18:00:05,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:00:05,349][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:00:05,369][root][INFO] - Image embeddings computed.
[2025-02-08 18:00:09,561][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:00:09,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:00:09,586][root][INFO] - Image embeddings computed.
[2025-02-08 18:00:13,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:00:13,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:00:13,792][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 13
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 18:01:21,422][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:21,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:21,531][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:38,277][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:38,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:38,400][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:42,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:42,727][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:42,748][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:46,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:47,049][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:47,069][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:51,269][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:51,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:51,396][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 4
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.000 | Done: False

Mean: 0.9259259259259259 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 28/50
[2025-02-08 18:03:05,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:05,781][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:05,801][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:22,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:22,394][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:22,414][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:26,605][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:26,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:26,632][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:30,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:30,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:30,875][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:35,042][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:35,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:35,065][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 13
Lang Goal: put the gray blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.9285714285714286 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 29/50
[2025-02-08 18:04:49,427][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:04:49,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:04:49,455][root][INFO] - Image embeddings computed.
[2025-02-08 18:05:06,036][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:05:06,042][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:05:06,062][root][INFO] - Image embeddings computed.
[2025-02-08 18:05:10,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:05:10,293][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:05:10,313][root][INFO] - Image embeddings computed.
[2025-02-08 18:05:14,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:05:14,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:05:14,561][root][INFO] - Image embeddings computed.
[2025-02-08 18:05:18,747][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:05:18,750][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:05:18,770][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 18:06:26,850][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:26,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:26,879][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:43,456][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:43,471][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:43,491][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:47,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:47,724][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:47,744][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:51,964][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:51,971][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:51,991][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:56,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:56,186][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:56,206][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 18:08:07,807][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:07,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:07,836][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:24,422][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:24,425][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:24,445][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:28,619][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:28,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:28,642][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:32,852][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:32,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:32,875][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:37,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:37,102][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:37,122][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9310344827586207 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 30/50
[2025-02-08 18:09:51,379][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:09:51,432][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:09:51,452][root][INFO] - Image embeddings computed.
[2025-02-08 18:10:08,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:10:08,221][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:10:08,242][root][INFO] - Image embeddings computed.
[2025-02-08 18:10:12,451][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:10:12,454][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:10:12,485][root][INFO] - Image embeddings computed.
[2025-02-08 18:10:16,675][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:10:16,678][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:10:16,698][root][INFO] - Image embeddings computed.
[2025-02-08 18:10:20,854][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:10:20,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:10:20,877][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9333333333333333 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 31/50
[2025-02-08 18:11:38,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:38,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:38,967][root][INFO] - Image embeddings computed.
[2025-02-08 18:11:55,696][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:55,699][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:55,719][root][INFO] - Image embeddings computed.
[2025-02-08 18:11:59,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:59,907][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:59,927][root][INFO] - Image embeddings computed.
[2025-02-08 18:12:04,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:12:04,152][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:12:04,172][root][INFO] - Image embeddings computed.
[2025-02-08 18:12:08,379][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:12:08,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:12:08,401][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.333 | Done: False

[2025-02-08 18:13:18,062][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:18,071][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:18,091][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:34,749][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:34,764][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:34,784][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:38,975][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:38,978][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:38,998][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:43,211][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:43,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:43,235][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:47,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:47,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:47,462][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.667 | Done: False

[2025-02-08 18:14:57,135][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:14:57,138][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:14:57,158][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:13,840][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:13,843][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:13,863][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:18,045][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:18,048][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:18,068][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:22,264][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:22,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:22,287][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:26,510][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:26,513][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:26,533][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9354838709677419 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 32/50
[2025-02-08 18:16:41,623][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:16:41,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:16:41,770][root][INFO] - Image embeddings computed.
[2025-02-08 18:16:58,326][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:16:58,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:16:58,456][root][INFO] - Image embeddings computed.
[2025-02-08 18:17:02,668][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:17:02,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:17:02,780][root][INFO] - Image embeddings computed.
[2025-02-08 18:17:06,984][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:17:07,102][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:17:07,124][root][INFO] - Image embeddings computed.
[2025-02-08 18:17:11,318][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:17:11,410][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:17:11,430][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 10
Lang Goal: put the red blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.9375 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 33/50
[2025-02-08 18:18:28,235][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:28,244][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:28,264][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:45,097][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:45,100][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:45,120][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:49,308][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:49,312][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:49,332][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:53,517][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:53,520][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:53,540][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:57,720][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:57,723][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:57,743][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the green blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 18:20:08,763][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:08,772][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:08,792][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:26,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:26,152][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:26,172][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:30,354][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:30,357][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:30,378][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:34,574][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:34,577][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:34,597][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:38,765][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:38,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:38,788][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the green blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.9393939393939394 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 34/50
[2025-02-08 18:21:55,527][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:21:55,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:21:55,556][root][INFO] - Image embeddings computed.
[2025-02-08 18:22:12,156][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:22:12,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:22:12,179][root][INFO] - Image embeddings computed.
[2025-02-08 18:22:16,410][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:22:16,413][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:22:16,433][root][INFO] - Image embeddings computed.
[2025-02-08 18:22:20,623][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:22:20,626][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:22:20,646][root][INFO] - Image embeddings computed.
[2025-02-08 18:22:24,832][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:22:24,835][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:22:24,855][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9411764705882353 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 35/50
[2025-02-08 18:23:42,870][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:23:42,873][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:23:42,894][root][INFO] - Image embeddings computed.
[2025-02-08 18:24:00,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:24:00,102][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:24:00,122][root][INFO] - Image embeddings computed.
[2025-02-08 18:24:04,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:24:04,328][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:24:04,348][root][INFO] - Image embeddings computed.
[2025-02-08 18:24:08,538][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:24:08,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:24:08,561][root][INFO] - Image embeddings computed.
[2025-02-08 18:24:12,730][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:24:12,733][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:24:12,753][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 17
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 18:25:23,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:23,543][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:23,563][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:40,113][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:40,116][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:40,136][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:44,333][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:44,336][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:44,356][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:48,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:48,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:48,581][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:52,763][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:52,766][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:52,786][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 18:27:03,887][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:27:03,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:27:03,910][root][INFO] - Image embeddings computed.
[2025-02-08 18:27:20,466][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:27:20,469][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:27:20,489][root][INFO] - Image embeddings computed.
[2025-02-08 18:27:24,685][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:27:24,688][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:27:24,708][root][INFO] - Image embeddings computed.
[2025-02-08 18:27:28,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:27:28,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:27:28,931][root][INFO] - Image embeddings computed.
[2025-02-08 18:27:33,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:27:33,116][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:27:33,136][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 16
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.9285714285714286 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 36/50
[2025-02-08 18:28:50,242][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:28:50,248][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:28:50,269][root][INFO] - Image embeddings computed.
[2025-02-08 18:29:06,900][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:29:06,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:29:06,923][root][INFO] - Image embeddings computed.
[2025-02-08 18:29:11,120][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:29:11,123][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:29:11,143][root][INFO] - Image embeddings computed.
[2025-02-08 18:29:15,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:29:15,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:29:15,367][root][INFO] - Image embeddings computed.
[2025-02-08 18:29:19,549][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:29:19,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:29:19,572][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 15
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 18:30:31,461][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:31,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:31,487][root][INFO] - Image embeddings computed.
[2025-02-08 18:30:48,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:48,144][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:48,164][root][INFO] - Image embeddings computed.
[2025-02-08 18:30:52,349][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:52,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:52,372][root][INFO] - Image embeddings computed.
[2025-02-08 18:30:56,590][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:56,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:56,613][root][INFO] - Image embeddings computed.
[2025-02-08 18:31:00,807][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:31:00,810][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:31:00,830][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 13
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.9305555555555556 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 37/50
[2025-02-08 18:32:20,021][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:20,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:20,045][root][INFO] - Image embeddings computed.
[2025-02-08 18:32:36,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:36,765][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:36,785][root][INFO] - Image embeddings computed.
[2025-02-08 18:32:40,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:40,994][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:41,014][root][INFO] - Image embeddings computed.
[2025-02-08 18:32:45,213][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:45,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:45,236][root][INFO] - Image embeddings computed.
[2025-02-08 18:32:49,435][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:49,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:49,463][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.333 | Done: False

[2025-02-08 18:34:04,318][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:34:04,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:34:04,436][root][INFO] - Image embeddings computed.
[2025-02-08 18:34:21,186][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:34:21,296][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:34:21,316][root][INFO] - Image embeddings computed.
[2025-02-08 18:34:25,526][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:34:25,618][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:34:25,638][root][INFO] - Image embeddings computed.
[2025-02-08 18:34:29,841][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:34:29,933][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:34:29,953][root][INFO] - Image embeddings computed.
[2025-02-08 18:34:34,142][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:34:34,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:34:34,258][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 17
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.667 | Done: False

[2025-02-08 18:35:52,426][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:35:52,524][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:35:52,544][root][INFO] - Image embeddings computed.
[2025-02-08 18:36:09,296][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:36:09,417][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:36:09,437][root][INFO] - Image embeddings computed.
[2025-02-08 18:36:13,625][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:36:13,734][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:36:13,755][root][INFO] - Image embeddings computed.
[2025-02-08 18:36:17,945][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:36:18,060][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:36:18,097][root][INFO] - Image embeddings computed.
[2025-02-08 18:36:22,295][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:36:22,387][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:36:22,413][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 17
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.9324324324324325 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 38/50
[2025-02-08 18:37:46,027][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:37:46,129][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:37:46,149][root][INFO] - Image embeddings computed.
[2025-02-08 18:38:02,721][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:38:02,814][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:38:02,835][root][INFO] - Image embeddings computed.
[2025-02-08 18:38:07,058][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:38:07,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:38:07,176][root][INFO] - Image embeddings computed.
[2025-02-08 18:38:11,392][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:38:11,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:38:11,509][root][INFO] - Image embeddings computed.
[2025-02-08 18:38:15,684][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:38:15,791][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:38:15,811][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 11
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9342105263157895 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 39/50
[2025-02-08 18:39:37,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:39:37,301][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:39:37,321][root][INFO] - Image embeddings computed.
[2025-02-08 18:39:53,881][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:39:53,973][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:39:53,993][root][INFO] - Image embeddings computed.
[2025-02-08 18:39:58,202][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:39:58,309][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:39:58,330][root][INFO] - Image embeddings computed.
[2025-02-08 18:40:02,515][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:40:02,614][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:40:02,639][root][INFO] - Image embeddings computed.
[2025-02-08 18:40:06,843][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:40:06,940][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:40:06,960][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 10
Lang Goal: put the yellow blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.9358974358974359 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 40/50
[2025-02-08 18:41:26,303][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:41:26,311][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:41:26,331][root][INFO] - Image embeddings computed.
[2025-02-08 18:41:42,981][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:41:42,988][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:41:43,008][root][INFO] - Image embeddings computed.
[2025-02-08 18:41:47,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:41:47,224][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:41:47,244][root][INFO] - Image embeddings computed.
[2025-02-08 18:41:51,459][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:41:51,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:41:51,487][root][INFO] - Image embeddings computed.
[2025-02-08 18:41:55,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:41:55,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:41:55,710][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 12
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9375 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 41/50
[2025-02-08 18:43:15,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:43:15,735][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:43:15,755][root][INFO] - Image embeddings computed.
[2025-02-08 18:43:32,398][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:43:32,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:43:32,520][root][INFO] - Image embeddings computed.
[2025-02-08 18:43:36,732][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:43:36,851][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:43:36,870][root][INFO] - Image embeddings computed.
[2025-02-08 18:43:41,059][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:43:41,165][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:43:41,185][root][INFO] - Image embeddings computed.
[2025-02-08 18:43:45,364][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:43:45,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:43:45,476][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9390243902439024 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 42/50
[2025-02-08 18:45:05,951][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:45:06,048][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:45:06,068][root][INFO] - Image embeddings computed.
[2025-02-08 18:45:23,634][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:45:23,750][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:45:23,770][root][INFO] - Image embeddings computed.
[2025-02-08 18:45:27,933][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:45:28,042][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:45:28,081][root][INFO] - Image embeddings computed.
[2025-02-08 18:45:32,270][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:45:32,362][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:45:32,382][root][INFO] - Image embeddings computed.
[2025-02-08 18:45:36,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:45:36,644][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:45:36,664][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 16
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9404761904761905 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 43/50
[2025-02-08 18:46:57,054][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:46:57,058][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:46:57,078][root][INFO] - Image embeddings computed.
[2025-02-08 18:47:13,774][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:47:13,779][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:47:13,799][root][INFO] - Image embeddings computed.
[2025-02-08 18:47:18,014][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:47:18,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:47:18,037][root][INFO] - Image embeddings computed.
[2025-02-08 18:47:22,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:47:22,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:47:22,253][root][INFO] - Image embeddings computed.
[2025-02-08 18:47:26,456][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:47:26,459][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:47:26,478][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 12
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9418604651162791 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 44/50
[2025-02-08 18:48:47,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:48:47,564][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:48:47,585][root][INFO] - Image embeddings computed.
[2025-02-08 18:49:04,348][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:49:04,354][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:49:04,374][root][INFO] - Image embeddings computed.
[2025-02-08 18:49:08,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:49:08,588][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:49:08,608][root][INFO] - Image embeddings computed.
[2025-02-08 18:49:12,810][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:49:12,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:49:12,833][root][INFO] - Image embeddings computed.
[2025-02-08 18:49:17,044][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:49:17,047][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:49:17,067][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 19
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 18:50:32,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:50:32,240][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:50:32,260][root][INFO] - Image embeddings computed.
[2025-02-08 18:50:49,715][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:50:49,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:50:49,738][root][INFO] - Image embeddings computed.
[2025-02-08 18:50:53,921][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:50:53,924][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:50:53,944][root][INFO] - Image embeddings computed.
[2025-02-08 18:50:58,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:50:58,148][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:50:58,168][root][INFO] - Image embeddings computed.
[2025-02-08 18:51:02,373][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:51:02,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:51:02,396][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 3
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.000 | Done: False

[2025-02-08 18:52:17,963][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:52:17,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:52:17,990][root][INFO] - Image embeddings computed.
[2025-02-08 18:52:35,513][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:52:35,516][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:52:35,537][root][INFO] - Image embeddings computed.
[2025-02-08 18:52:39,744][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:52:39,746][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:52:39,767][root][INFO] - Image embeddings computed.
[2025-02-08 18:52:43,961][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:52:43,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:52:43,984][root][INFO] - Image embeddings computed.
[2025-02-08 18:52:48,179][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:52:48,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:52:48,203][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 19
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.000 | Done: False

Mean: 0.9204545454545454 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 45/50
[2025-02-08 18:54:11,146][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:54:11,150][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:54:11,170][root][INFO] - Image embeddings computed.
[2025-02-08 18:54:27,946][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:54:27,949][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:54:27,969][root][INFO] - Image embeddings computed.
[2025-02-08 18:54:32,151][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:54:32,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:54:32,174][root][INFO] - Image embeddings computed.
[2025-02-08 18:54:36,383][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:54:36,386][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:54:36,406][root][INFO] - Image embeddings computed.
[2025-02-08 18:54:40,572][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:54:40,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:54:40,695][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.000 | Done: False

[2025-02-08 18:55:57,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:55:57,586][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:55:57,606][root][INFO] - Image embeddings computed.
[2025-02-08 18:56:14,439][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:56:14,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:56:14,462][root][INFO] - Image embeddings computed.
[2025-02-08 18:56:18,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:56:18,640][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:56:18,661][root][INFO] - Image embeddings computed.
[2025-02-08 18:56:22,877][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:56:22,969][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:56:22,989][root][INFO] - Image embeddings computed.
[2025-02-08 18:56:27,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:56:27,262][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:56:27,283][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 19
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9222222222222223 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 46/50
[2025-02-08 18:57:50,933][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:57:51,044][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:57:51,064][root][INFO] - Image embeddings computed.
[2025-02-08 18:58:07,816][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:58:07,908][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:58:07,927][root][INFO] - Image embeddings computed.
[2025-02-08 18:58:12,125][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:58:12,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:58:12,236][root][INFO] - Image embeddings computed.
[2025-02-08 18:58:16,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:58:16,543][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:58:16,563][root][INFO] - Image embeddings computed.
[2025-02-08 18:58:20,733][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:58:20,845][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:58:20,864][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 20
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.333 | Done: False

[2025-02-08 18:59:39,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:59:39,102][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:59:39,122][root][INFO] - Image embeddings computed.
[2025-02-08 18:59:55,921][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:59:55,924][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:59:55,944][root][INFO] - Image embeddings computed.
[2025-02-08 19:00:00,139][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:00:00,143][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:00:00,163][root][INFO] - Image embeddings computed.
[2025-02-08 19:00:04,350][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:00:04,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:00:04,373][root][INFO] - Image embeddings computed.
[2025-02-08 19:00:08,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:00:08,557][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:00:08,577][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 18
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.667 | Done: False

[2025-02-08 19:01:25,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:01:25,479][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:01:25,499][root][INFO] - Image embeddings computed.
[2025-02-08 19:01:42,823][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:01:42,827][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:01:42,847][root][INFO] - Image embeddings computed.
[2025-02-08 19:01:47,025][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:01:47,028][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:01:47,048][root][INFO] - Image embeddings computed.
[2025-02-08 19:01:51,236][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:01:51,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:01:51,259][root][INFO] - Image embeddings computed.
[2025-02-08 19:01:55,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:01:55,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:01:55,455][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 17
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9239130434782609 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 47/50
[2025-02-08 19:03:19,666][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:03:19,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:03:19,690][root][INFO] - Image embeddings computed.
[2025-02-08 19:03:36,219][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:03:36,222][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:03:36,242][root][INFO] - Image embeddings computed.
[2025-02-08 19:03:40,435][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:03:40,437][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:03:40,458][root][INFO] - Image embeddings computed.
[2025-02-08 19:03:44,647][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:03:44,650][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:03:44,670][root][INFO] - Image embeddings computed.
[2025-02-08 19:03:48,877][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:03:48,880][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:03:48,900][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 19:05:05,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:05:05,866][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:05:05,886][root][INFO] - Image embeddings computed.
[2025-02-08 19:05:22,426][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:05:22,429][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:05:22,449][root][INFO] - Image embeddings computed.
[2025-02-08 19:05:26,647][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:05:26,650][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:05:26,670][root][INFO] - Image embeddings computed.
[2025-02-08 19:05:30,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:05:30,867][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:05:30,887][root][INFO] - Image embeddings computed.
[2025-02-08 19:05:35,095][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:05:35,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:05:35,118][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 11
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 19:06:52,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:06:52,104][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:06:52,124][root][INFO] - Image embeddings computed.
[2025-02-08 19:07:08,573][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:07:08,576][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:07:08,596][root][INFO] - Image embeddings computed.
[2025-02-08 19:07:12,793][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:07:12,796][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:07:12,816][root][INFO] - Image embeddings computed.
[2025-02-08 19:07:17,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:07:17,012][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:07:17,032][root][INFO] - Image embeddings computed.
[2025-02-08 19:07:21,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:07:21,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:07:21,255][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 12
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.9148936170212766 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 48/50
[2025-02-08 19:08:49,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:08:49,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:08:49,341][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:05,949][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:05,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:05,974][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:10,176][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:10,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:10,199][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:14,389][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:14,392][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:14,412][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:18,593][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:18,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:18,617][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the brown blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 19:10:36,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:10:36,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:10:36,843][root][INFO] - Image embeddings computed.
[2025-02-08 19:10:53,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:10:53,882][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:10:53,902][root][INFO] - Image embeddings computed.
[2025-02-08 19:10:58,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:10:58,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:10:58,132][root][INFO] - Image embeddings computed.
[2025-02-08 19:11:02,315][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:11:02,318][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:11:02,338][root][INFO] - Image embeddings computed.
[2025-02-08 19:11:06,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:11:06,531][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:11:06,551][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 13
Lang Goal: put the brown blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.9166666666666666 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 49/50
[2025-02-08 19:12:31,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:12:31,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:12:31,046][root][INFO] - Image embeddings computed.
[2025-02-08 19:12:47,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:12:47,694][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:12:47,714][root][INFO] - Image embeddings computed.
[2025-02-08 19:12:51,923][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:12:51,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:12:51,946][root][INFO] - Image embeddings computed.
[2025-02-08 19:12:56,140][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:12:56,144][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:12:56,164][root][INFO] - Image embeddings computed.
[2025-02-08 19:13:00,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:13:00,335][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:13:00,355][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 19:14:19,499][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:14:19,503][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:14:19,523][root][INFO] - Image embeddings computed.
[2025-02-08 19:14:36,177][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:14:36,180][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:14:36,201][root][INFO] - Image embeddings computed.
[2025-02-08 19:14:40,411][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:14:40,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:14:40,435][root][INFO] - Image embeddings computed.
[2025-02-08 19:14:44,618][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:14:44,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:14:44,645][root][INFO] - Image embeddings computed.
[2025-02-08 19:14:48,817][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:14:48,820][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:14:48,840][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 14
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9183673469387755 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
Test: 50/50
[2025-02-08 19:16:13,563][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:13,567][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:13,587][root][INFO] - Image embeddings computed.
[2025-02-08 19:16:30,168][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:30,171][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:30,191][root][INFO] - Image embeddings computed.
[2025-02-08 19:16:34,377][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:34,385][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:34,405][root][INFO] - Image embeddings computed.
[2025-02-08 19:16:38,609][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:38,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:38,632][root][INFO] - Image embeddings computed.
[2025-02-08 19:16:42,807][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:42,834][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:42,854][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 13
Lang Goal: put the blue blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.92 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00120-val_loss=0.00013769.ckpt
[2025-02-08 19:18:09,866][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 19:18:09,993][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 19:18:16,453][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-08 19:18:25,321][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 19:18:25,452][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 19:18:31,891][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-08 19:18:40,829][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 19:18:40,960][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 19:18:47,371][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-08 19:18:52,814][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 19:18:52,944][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 19:18:59,358][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: put-block-in-bowl-seen-colors-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/put-block-in-bowl-seen-colors-clipfit-n10-train/checkpoints/steps=00160-val_loss=0.00013749.ckpt
Test: 1/50
[2025-02-08 19:19:41,674][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:19:41,680][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:19:41,702][root][INFO] - Image embeddings computed.
[2025-02-08 19:19:58,246][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:19:58,249][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:19:58,269][root][INFO] - Image embeddings computed.
[2025-02-08 19:20:02,477][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:02,480][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:02,500][root][INFO] - Image embeddings computed.
[2025-02-08 19:20:06,696][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:06,699][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:06,719][root][INFO] - Image embeddings computed.
[2025-02-08 19:20:10,897][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:10,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:10,920][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 19:21:32,244][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:21:32,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:21:32,362][root][INFO] - Image embeddings computed.
[2025-02-08 19:21:48,946][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:21:49,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:21:49,077][root][INFO] - Image embeddings computed.
[2025-02-08 19:21:53,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:21:53,372][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:21:53,392][root][INFO] - Image embeddings computed.
[2025-02-08 19:21:57,579][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:21:57,677][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:21:57,698][root][INFO] - Image embeddings computed.
[2025-02-08 19:22:01,873][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:22:01,969][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:22:01,989][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 19:23:22,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:23:22,450][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:23:22,470][root][INFO] - Image embeddings computed.
[2025-02-08 19:23:39,048][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:23:39,051][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:23:39,071][root][INFO] - Image embeddings computed.
[2025-02-08 19:23:43,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:23:43,261][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:23:43,281][root][INFO] - Image embeddings computed.
[2025-02-08 19:23:47,459][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:23:47,462][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:23:47,482][root][INFO] - Image embeddings computed.
[2025-02-08 19:23:51,676][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:23:51,679][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:23:51,699][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.000 | Done: False

Mean: 0.0 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 2/50
[2025-02-08 19:25:22,034][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:25:22,158][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:25:22,178][root][INFO] - Image embeddings computed.
[2025-02-08 19:25:38,771][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:25:38,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:25:38,897][root][INFO] - Image embeddings computed.
[2025-02-08 19:25:43,108][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:25:43,203][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:25:43,223][root][INFO] - Image embeddings computed.
[2025-02-08 19:25:47,425][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:25:47,522][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:25:47,542][root][INFO] - Image embeddings computed.
[2025-02-08 19:25:51,699][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:25:51,810][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:25:51,830][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.5 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 3/50
[2025-02-08 19:27:22,255][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:22,278][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:22,298][root][INFO] - Image embeddings computed.
[2025-02-08 19:27:38,980][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:38,988][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:39,008][root][INFO] - Image embeddings computed.
[2025-02-08 19:27:43,194][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:43,197][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:43,218][root][INFO] - Image embeddings computed.
[2025-02-08 19:27:47,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:47,419][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:47,439][root][INFO] - Image embeddings computed.
[2025-02-08 19:27:51,623][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:51,630][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:51,650][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.000 | Done: False

[2025-02-08 19:29:11,651][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:11,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:11,686][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:28,343][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:28,346][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:28,366][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:32,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:32,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:32,581][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:36,797][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:36,800][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:36,820][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:41,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:41,016][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:41,036][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 8
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.000 | Done: False

[2025-02-08 19:31:04,756][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:04,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:04,877][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:21,632][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:21,741][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:21,761][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:25,952][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:26,049][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:26,069][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:30,273][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:30,381][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:30,401][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:34,576][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:34,686][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:34,706][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 14
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.500 | Done: False

Mean: 0.5 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 4/50
[2025-02-08 19:33:03,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:03,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:03,132][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:19,686][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:19,694][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:19,714][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:23,936][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:23,944][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:23,964][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:28,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:28,161][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:28,181][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:32,363][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:32,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:32,390][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.625 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 5/50
[2025-02-08 19:34:59,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:34:59,416][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:34:59,436][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:16,028][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:16,125][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:16,145][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:20,349][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:20,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:20,464][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:24,671][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:24,742][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:24,762][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:28,965][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:28,973][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:28,993][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.7 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 6/50
[2025-02-08 19:36:56,208][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:36:56,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:36:56,257][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:12,822][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:12,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:12,845][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:17,078][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:17,086][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:17,105][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:21,299][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:21,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:21,326][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:25,512][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:25,520][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:25,540][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 19:38:46,974][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:38:46,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:38:47,003][root][INFO] - Image embeddings computed.
[2025-02-08 19:39:03,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:03,623][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:03,674][root][INFO] - Image embeddings computed.
[2025-02-08 19:39:07,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:07,912][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:07,931][root][INFO] - Image embeddings computed.
[2025-02-08 19:39:12,114][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:12,117][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:12,137][root][INFO] - Image embeddings computed.
[2025-02-08 19:39:16,312][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:16,320][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:16,340][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 12
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.75 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 7/50
[2025-02-08 19:40:43,565][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:40:43,573][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:40:43,593][root][INFO] - Image embeddings computed.
[2025-02-08 19:41:00,444][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:41:00,452][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:41:00,472][root][INFO] - Image embeddings computed.
[2025-02-08 19:41:04,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:41:04,667][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:41:04,687][root][INFO] - Image embeddings computed.
[2025-02-08 19:41:08,881][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:41:08,888][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:41:08,908][root][INFO] - Image embeddings computed.
[2025-02-08 19:41:13,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:41:13,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:41:13,123][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 16
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.7857142857142857 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 8/50
[2025-02-08 19:42:41,016][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:42:41,023][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:42:41,044][root][INFO] - Image embeddings computed.
[2025-02-08 19:42:57,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:42:57,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:42:57,617][root][INFO] - Image embeddings computed.
[2025-02-08 19:43:01,833][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:43:01,840][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:43:01,860][root][INFO] - Image embeddings computed.
[2025-02-08 19:43:06,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:43:06,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:43:06,100][root][INFO] - Image embeddings computed.
[2025-02-08 19:43:10,269][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:43:10,272][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:43:10,292][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 10
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8125 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 9/50
[2025-02-08 19:44:42,449][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:44:42,559][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:44:42,579][root][INFO] - Image embeddings computed.
[2025-02-08 19:44:59,582][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:44:59,686][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:44:59,706][root][INFO] - Image embeddings computed.
[2025-02-08 19:45:03,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:45:03,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:45:04,016][root][INFO] - Image embeddings computed.
[2025-02-08 19:45:08,215][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:45:08,319][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:45:08,339][root][INFO] - Image embeddings computed.
[2025-02-08 19:45:12,524][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:45:12,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:45:12,663][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: put the green blocks in a red bowl
Total Reward: 0.500 | Done: False

[2025-02-08 19:46:38,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:46:38,427][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:46:38,447][root][INFO] - Image embeddings computed.
[2025-02-08 19:46:55,146][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:46:55,149][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:46:55,169][root][INFO] - Image embeddings computed.
[2025-02-08 19:46:59,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:46:59,343][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:46:59,363][root][INFO] - Image embeddings computed.
[2025-02-08 19:47:03,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:47:03,559][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:47:03,579][root][INFO] - Image embeddings computed.
[2025-02-08 19:47:07,788][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:47:07,791][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:47:07,811][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 14
Lang Goal: put the green blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 10/50
[2025-02-08 19:48:40,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:48:40,683][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:48:40,704][root][INFO] - Image embeddings computed.
[2025-02-08 19:48:57,283][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:48:57,286][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:48:57,308][root][INFO] - Image embeddings computed.
[2025-02-08 19:49:01,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:49:01,509][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:49:01,529][root][INFO] - Image embeddings computed.
[2025-02-08 19:49:05,722][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:49:05,725][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:49:05,745][root][INFO] - Image embeddings computed.
[2025-02-08 19:49:09,920][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:49:09,923][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:49:09,943][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 12
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.85 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 11/50
[2025-02-08 19:50:38,943][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:50:39,035][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:50:39,055][root][INFO] - Image embeddings computed.
[2025-02-08 19:50:55,725][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:50:55,728][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:50:55,748][root][INFO] - Image embeddings computed.
[2025-02-08 19:50:59,962][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:50:59,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:50:59,985][root][INFO] - Image embeddings computed.
[2025-02-08 19:51:04,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:51:04,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:51:04,211][root][INFO] - Image embeddings computed.
[2025-02-08 19:51:08,393][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:51:08,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:51:08,417][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 11
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 19:52:31,696][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:52:31,703][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:52:31,723][root][INFO] - Image embeddings computed.
[2025-02-08 19:52:48,290][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:52:48,398][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:52:48,418][root][INFO] - Image embeddings computed.
[2025-02-08 19:52:52,626][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:52:52,723][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:52:52,743][root][INFO] - Image embeddings computed.
[2025-02-08 19:52:56,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:52:57,031][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:52:57,051][root][INFO] - Image embeddings computed.
[2025-02-08 19:53:01,229][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:53:01,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:53:01,344][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 19:54:24,876][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:54:24,882][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:54:24,902][root][INFO] - Image embeddings computed.
[2025-02-08 19:54:41,461][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:54:41,464][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:54:41,484][root][INFO] - Image embeddings computed.
[2025-02-08 19:54:45,692][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:54:45,695][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:54:45,715][root][INFO] - Image embeddings computed.
[2025-02-08 19:54:49,904][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:54:49,907][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:54:49,927][root][INFO] - Image embeddings computed.
[2025-02-08 19:54:54,108][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:54:54,111][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:54:54,131][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 9
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.500 | Done: False

Mean: 0.8181818181818182 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 12/50
[2025-02-08 19:56:24,120][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:56:24,226][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:56:24,246][root][INFO] - Image embeddings computed.
[2025-02-08 19:56:40,924][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:56:41,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:56:41,044][root][INFO] - Image embeddings computed.
[2025-02-08 19:56:45,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:56:45,319][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:56:45,339][root][INFO] - Image embeddings computed.
[2025-02-08 19:56:49,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:56:49,642][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:56:49,662][root][INFO] - Image embeddings computed.
[2025-02-08 19:56:53,842][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:56:53,933][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:56:53,953][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the brown blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 13/50
[2025-02-08 19:58:23,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:23,381][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:23,401][root][INFO] - Image embeddings computed.
[2025-02-08 19:58:40,029][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:40,125][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:40,145][root][INFO] - Image embeddings computed.
[2025-02-08 19:58:44,355][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:44,453][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:44,473][root][INFO] - Image embeddings computed.
[2025-02-08 19:58:48,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:48,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:48,798][root][INFO] - Image embeddings computed.
[2025-02-08 19:58:52,976][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:53,068][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:53,088][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.8461538461538461 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 14/50
[2025-02-08 20:00:26,288][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:00:26,293][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:00:26,314][root][INFO] - Image embeddings computed.
[2025-02-08 20:00:42,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:00:42,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:00:42,843][root][INFO] - Image embeddings computed.
[2025-02-08 20:00:47,063][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:00:47,066][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:00:47,087][root][INFO] - Image embeddings computed.
[2025-02-08 20:00:51,296][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:00:51,299][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:00:51,319][root][INFO] - Image embeddings computed.
[2025-02-08 20:00:55,493][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:00:55,496][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:00:55,516][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 10
Lang Goal: put the red blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8571428571428571 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 15/50
[2025-02-08 20:02:28,237][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:02:28,249][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:02:28,269][root][INFO] - Image embeddings computed.
[2025-02-08 20:02:44,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:02:44,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:02:44,874][root][INFO] - Image embeddings computed.
[2025-02-08 20:02:49,060][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:02:49,063][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:02:49,083][root][INFO] - Image embeddings computed.
[2025-02-08 20:02:53,263][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:02:53,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:02:53,286][root][INFO] - Image embeddings computed.
[2025-02-08 20:02:57,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:02:57,471][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:02:57,492][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 20:04:22,588][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:04:22,594][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:04:22,614][root][INFO] - Image embeddings computed.
[2025-02-08 20:04:39,164][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:04:39,167][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:04:39,188][root][INFO] - Image embeddings computed.
[2025-02-08 20:04:43,365][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:04:43,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:04:43,388][root][INFO] - Image embeddings computed.
[2025-02-08 20:04:47,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:04:47,592][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:04:47,612][root][INFO] - Image embeddings computed.
[2025-02-08 20:04:51,782][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:04:51,785][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:04:51,805][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 10
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.000 | Done: False

[2025-02-08 20:06:19,664][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:06:19,671][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:06:19,692][root][INFO] - Image embeddings computed.
[2025-02-08 20:06:36,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:06:36,333][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:06:36,353][root][INFO] - Image embeddings computed.
[2025-02-08 20:06:40,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:06:40,537][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:06:40,557][root][INFO] - Image embeddings computed.
[2025-02-08 20:06:44,741][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:06:44,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:06:44,764][root][INFO] - Image embeddings computed.
[2025-02-08 20:06:48,953][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:06:48,962][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:06:48,982][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 14
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 16/50
[2025-02-08 20:08:20,264][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:08:20,270][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:08:20,291][root][INFO] - Image embeddings computed.
[2025-02-08 20:08:37,075][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:08:37,078][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:08:37,098][root][INFO] - Image embeddings computed.
[2025-02-08 20:08:41,295][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:08:41,298][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:08:41,318][root][INFO] - Image embeddings computed.
[2025-02-08 20:08:45,516][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:08:45,520][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:08:45,540][root][INFO] - Image embeddings computed.
[2025-02-08 20:08:49,713][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:08:49,716][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:08:49,736][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.84375 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 17/50
[2025-02-08 20:10:20,470][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:10:20,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:10:20,589][root][INFO] - Image embeddings computed.
[2025-02-08 20:10:37,129][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:10:37,228][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:10:37,249][root][INFO] - Image embeddings computed.
[2025-02-08 20:10:41,456][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:10:41,562][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:10:41,582][root][INFO] - Image embeddings computed.
[2025-02-08 20:10:45,784][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:10:45,912][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:10:45,932][root][INFO] - Image embeddings computed.
[2025-02-08 20:10:50,131][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:10:50,293][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:10:50,314][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8529411764705882 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 18/50
[2025-02-08 20:12:27,150][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:12:27,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:12:27,294][root][INFO] - Image embeddings computed.
[2025-02-08 20:12:43,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:12:43,981][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:12:44,001][root][INFO] - Image embeddings computed.
[2025-02-08 20:12:48,213][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:12:48,305][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:12:48,325][root][INFO] - Image embeddings computed.
[2025-02-08 20:12:52,523][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:12:52,621][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:12:52,650][root][INFO] - Image embeddings computed.
[2025-02-08 20:12:56,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:12:56,958][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:12:56,978][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 13
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 20:14:23,990][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:14:23,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:14:24,016][root][INFO] - Image embeddings computed.
[2025-02-08 20:14:40,577][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:14:40,584][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:14:40,604][root][INFO] - Image embeddings computed.
[2025-02-08 20:14:44,803][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:14:44,806][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:14:44,826][root][INFO] - Image embeddings computed.
[2025-02-08 20:14:49,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:14:49,138][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:14:49,158][root][INFO] - Image embeddings computed.
[2025-02-08 20:14:53,342][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:14:53,439][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:14:53,460][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 12
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8611111111111112 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 19/50
[2025-02-08 20:16:27,692][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:16:27,793][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:16:27,820][root][INFO] - Image embeddings computed.
[2025-02-08 20:16:44,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:16:44,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:16:44,504][root][INFO] - Image embeddings computed.
[2025-02-08 20:16:48,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:16:48,815][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:16:48,835][root][INFO] - Image embeddings computed.
[2025-02-08 20:16:53,032][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:16:53,152][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:16:53,173][root][INFO] - Image embeddings computed.
[2025-02-08 20:16:57,346][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:16:57,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:16:57,464][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 11
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.868421052631579 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 20/50
[2025-02-08 20:18:30,393][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:18:30,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:18:30,422][root][INFO] - Image embeddings computed.
[2025-02-08 20:18:47,027][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:18:47,036][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:18:47,056][root][INFO] - Image embeddings computed.
[2025-02-08 20:18:51,252][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:18:51,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:18:51,280][root][INFO] - Image embeddings computed.
[2025-02-08 20:18:55,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:18:55,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:18:55,520][root][INFO] - Image embeddings computed.
[2025-02-08 20:18:59,702][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:18:59,794][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:18:59,814][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 20:20:27,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:20:27,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:20:27,535][root][INFO] - Image embeddings computed.
[2025-02-08 20:20:44,144][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:20:44,152][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:20:44,172][root][INFO] - Image embeddings computed.
[2025-02-08 20:20:48,355][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:20:48,364][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:20:48,384][root][INFO] - Image embeddings computed.
[2025-02-08 20:20:52,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:20:52,587][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:20:52,606][root][INFO] - Image embeddings computed.
[2025-02-08 20:20:56,810][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:20:56,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:20:56,836][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 12
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 20:22:24,070][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:22:24,078][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:22:24,098][root][INFO] - Image embeddings computed.
[2025-02-08 20:22:40,674][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:22:40,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:22:40,701][root][INFO] - Image embeddings computed.
[2025-02-08 20:22:44,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:22:44,898][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:22:44,917][root][INFO] - Image embeddings computed.
[2025-02-08 20:22:49,120][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:22:49,128][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:22:49,148][root][INFO] - Image embeddings computed.
[2025-02-08 20:22:53,337][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:22:53,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:22:53,369][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 10
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.85 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 21/50
[2025-02-08 20:24:29,204][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:24:29,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:24:29,230][root][INFO] - Image embeddings computed.
[2025-02-08 20:24:45,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:24:45,764][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:24:45,784][root][INFO] - Image embeddings computed.
[2025-02-08 20:24:49,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:24:50,002][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:24:50,022][root][INFO] - Image embeddings computed.
[2025-02-08 20:24:54,221][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:24:54,228][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:24:54,248][root][INFO] - Image embeddings computed.
[2025-02-08 20:24:58,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:24:58,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:24:58,464][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the gray blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8571428571428571 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 22/50
[2025-02-08 20:26:34,453][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:26:34,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:26:34,481][root][INFO] - Image embeddings computed.
[2025-02-08 20:26:50,999][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:26:51,007][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:26:51,027][root][INFO] - Image embeddings computed.
[2025-02-08 20:26:55,244][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:26:55,251][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:26:55,271][root][INFO] - Image embeddings computed.
[2025-02-08 20:26:59,449][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:26:59,457][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:26:59,477][root][INFO] - Image embeddings computed.
[2025-02-08 20:27:03,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:27:03,681][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:27:03,701][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 9
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8636363636363636 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 23/50
[2025-02-08 20:28:37,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:28:37,646][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:28:37,666][root][INFO] - Image embeddings computed.
[2025-02-08 20:28:54,257][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:28:54,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:28:54,286][root][INFO] - Image embeddings computed.
[2025-02-08 20:28:58,461][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:28:58,469][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:28:58,489][root][INFO] - Image embeddings computed.
[2025-02-08 20:29:02,683][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:02,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:02,800][root][INFO] - Image embeddings computed.
[2025-02-08 20:29:07,002][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:07,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:07,135][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: put the yellow blocks in a brown bowl
Total Reward: 0.000 | Done: False

[2025-02-08 20:30:39,646][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:39,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:39,764][root][INFO] - Image embeddings computed.
[2025-02-08 20:30:56,395][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:30:56,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:30:56,509][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:00,674][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:00,830][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:00,850][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:05,025][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:05,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:05,157][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:09,342][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:09,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:09,462][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the yellow blocks in a brown bowl
Total Reward: 0.000 | Done: False

Mean: 0.8260869565217391 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 24/50
[2025-02-08 20:32:47,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:32:48,041][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:32:48,062][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:04,656][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:04,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:04,774][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:08,982][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:09,086][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:09,106][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:13,290][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:13,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:13,402][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:17,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:17,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:17,684][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the green blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 25/50
[2025-02-08 20:34:54,102][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:34:54,199][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:34:54,219][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:10,823][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:10,921][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:10,941][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:15,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:15,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:15,259][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:19,427][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:19,524][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:19,544][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:23,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:23,817][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:23,837][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 20:36:54,851][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:36:54,948][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:36:54,969][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:11,524][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:11,532][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:11,552][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:15,748][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:15,758][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:15,778][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:19,961][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:19,969][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:19,989][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:24,167][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:24,175][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:24,195][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 16
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.000 | Done: False

[2025-02-08 20:38:54,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:38:54,481][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:38:54,501][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:11,119][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:11,127][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:11,147][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:15,319][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:15,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:15,344][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:19,524][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:19,532][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:19,552][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:23,736][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:23,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:23,764][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 16
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.82 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 26/50
[2025-02-08 20:41:00,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:00,872][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:00,892][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:17,841][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:17,850][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:17,869][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:22,079][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:22,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:22,107][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:26,292][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:26,298][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:26,317][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:30,489][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:30,497][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:30,517][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 20:43:02,495][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:02,592][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:02,613][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:19,672][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:19,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:19,789][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:24,002][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:24,099][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:24,119][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:28,305][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:28,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:28,416][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:32,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:32,685][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:32,706][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.000 | Done: False

[2025-02-08 20:45:04,020][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:04,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:04,046][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:20,898][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:20,907][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:20,927][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:25,140][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:25,149][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:25,169][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:29,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:29,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:29,402][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:33,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:33,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:33,599][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 7
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.000 | Done: False

Mean: 0.7884615384615384 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 27/50
[2025-02-08 20:47:11,060][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:11,064][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:11,084][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:27,749][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:27,759][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:27,779][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:32,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:32,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:32,029][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:36,212][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:36,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:36,235][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:40,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:40,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:40,461][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 20:49:12,039][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:12,042][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:12,063][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:28,759][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:28,766][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:28,787][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:33,011][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:33,038][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:33,058][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:37,242][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:37,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:37,272][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:41,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:41,474][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:41,494][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 13
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.000 | Done: False

[2025-02-08 20:51:17,544][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:17,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:17,662][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:34,341][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:34,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:34,465][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:38,671][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:38,763][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:38,783][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:42,963][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:43,055][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:43,075][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:47,244][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:47,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:47,358][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 5
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.000 | Done: False

Mean: 0.7592592592592593 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 28/50
[2025-02-08 20:53:28,058][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:28,155][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:28,176][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:44,761][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:44,879][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:44,904][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:49,095][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:49,204][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:49,224][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:53,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:53,535][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:53,561][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:57,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:57,824][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:57,844][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 13
Lang Goal: put the gray blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.7678571428571429 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 29/50
[2025-02-08 20:55:40,045][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:40,150][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:40,176][root][INFO] - Image embeddings computed.
[2025-02-08 20:55:56,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:56,864][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:56,884][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:01,108][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:01,208][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:01,227][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:05,444][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:05,560][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:05,580][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:09,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:09,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:09,888][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 20:57:46,978][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:47,076][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:47,096][root][INFO] - Image embeddings computed.
[2025-02-08 20:58:03,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:03,819][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:03,839][root][INFO] - Image embeddings computed.
[2025-02-08 20:58:08,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:08,148][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:08,168][root][INFO] - Image embeddings computed.
[2025-02-08 20:58:12,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:12,496][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:12,516][root][INFO] - Image embeddings computed.
[2025-02-08 20:58:16,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:16,840][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:16,865][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 20:59:54,042][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:59:54,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:59:54,175][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:10,767][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:10,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:10,897][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:15,073][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:15,177][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:15,197][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:19,398][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:19,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:19,520][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:23,733][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:23,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:23,887][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 11
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.000 | Done: False

Mean: 0.7413793103448276 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 30/50
[2025-02-08 21:02:05,142][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:05,253][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:05,273][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:22,017][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:22,116][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:22,136][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:26,352][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:26,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:26,464][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:30,654][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:30,745][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:30,765][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:34,922][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:35,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:35,038][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.75 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 31/50
[2025-02-08 21:04:16,063][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:16,073][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:16,093][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:32,835][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:32,843][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:32,863][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:37,047][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:37,149][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:37,169][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:41,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:41,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:41,520][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:45,725][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:45,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:45,843][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.333 | Done: False

[2025-02-08 21:06:20,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:20,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:20,531][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:37,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:37,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:37,199][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:41,395][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:41,404][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:41,424][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:45,646][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:45,649][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:45,669][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:49,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:49,885][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:49,905][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.667 | Done: False

[2025-02-08 21:08:24,896][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:25,009][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:25,029][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:41,703][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:41,799][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:41,818][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:45,994][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:46,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:46,110][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:50,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:50,422][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:50,442][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:54,669][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:54,766][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:54,786][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 12
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.667 | Done: False

[2025-02-08 21:10:28,160][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:28,169][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:28,189][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:44,844][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:44,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:44,867][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:49,043][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:49,048][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:49,068][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:53,262][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:53,265][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:53,285][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:57,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:57,514][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:57,534][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.333 | Done: False

Mean: 0.7365591397849462 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 32/50
[2025-02-08 21:12:36,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:36,392][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:36,412][root][INFO] - Image embeddings computed.
[2025-02-08 21:12:52,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:52,950][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:52,969][root][INFO] - Image embeddings computed.
[2025-02-08 21:12:57,175][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:57,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:57,309][root][INFO] - Image embeddings computed.
[2025-02-08 21:13:01,510][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:01,601][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:01,621][root][INFO] - Image embeddings computed.
[2025-02-08 21:13:05,818][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:05,917][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:05,936][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 10
Lang Goal: put the red blocks in a gray bowl
Total Reward: 0.000 | Done: False

[2025-02-08 21:14:43,265][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:43,362][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:14:43,382][root][INFO] - Image embeddings computed.
[2025-02-08 21:14:59,918][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:00,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:00,046][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:04,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:04,314][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:04,335][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:08,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:08,638][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:08,658][root][INFO] - Image embeddings computed.
[2025-02-08 21:15:12,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:12,961][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:12,981][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 10
Lang Goal: put the red blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.7447916666666666 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 33/50
[2025-02-08 21:16:53,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:16:53,691][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:16:53,711][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:10,501][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:10,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:10,532][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:14,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:14,824][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:14,845][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:19,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:19,142][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:19,162][root][INFO] - Image embeddings computed.
[2025-02-08 21:17:23,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:17:23,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:17:23,456][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the green blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 21:19:01,739][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:01,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:01,874][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:19,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:19,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:19,888][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:24,079][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:24,183][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:24,208][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:28,395][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:28,507][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:28,527][root][INFO] - Image embeddings computed.
[2025-02-08 21:19:32,685][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:19:32,782][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:19:32,802][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 16
Lang Goal: put the green blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 21:21:12,345][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:12,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:12,372][root][INFO] - Image embeddings computed.
[2025-02-08 21:21:30,826][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:30,929][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:30,954][root][INFO] - Image embeddings computed.
[2025-02-08 21:21:35,144][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:35,250][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:35,277][root][INFO] - Image embeddings computed.
[2025-02-08 21:21:39,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:39,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:39,580][root][INFO] - Image embeddings computed.
[2025-02-08 21:21:43,735][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:21:43,836][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:21:43,856][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 17
Lang Goal: put the green blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.7525252525252525 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 34/50
[2025-02-08 21:23:29,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:23:29,440][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:23:29,465][root][INFO] - Image embeddings computed.
[2025-02-08 21:23:46,065][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:23:46,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:23:46,188][root][INFO] - Image embeddings computed.
[2025-02-08 21:23:50,415][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:23:50,507][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:23:50,527][root][INFO] - Image embeddings computed.
[2025-02-08 21:23:54,712][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:23:54,836][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:23:54,856][root][INFO] - Image embeddings computed.
[2025-02-08 21:23:59,041][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:23:59,145][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:23:59,165][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.7598039215686274 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 35/50
[2025-02-08 21:25:45,377][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:25:45,491][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:25:45,511][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:02,719][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:02,818][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:02,838][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:07,042][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:07,140][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:07,160][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:11,345][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:11,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:11,463][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:15,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:15,741][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:15,762][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 17
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 21:27:55,697][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:27:55,817][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:27:55,838][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:12,542][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:12,640][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:12,661][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:16,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:16,955][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:16,975][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:21,180][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:21,283][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:21,303][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:25,473][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:25,574][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:25,594][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 14
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.000 | Done: False

[2025-02-08 21:30:07,049][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:07,153][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:07,173][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:23,837][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:23,941][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:23,961][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:28,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:28,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:28,300][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:32,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:32,608][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:32,628][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:36,794][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:36,892][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:36,912][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 18
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.7523809523809524 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 36/50
[2025-02-08 21:32:19,574][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:19,674][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:19,694][root][INFO] - Image embeddings computed.
[2025-02-08 21:32:36,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:36,422][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:36,442][root][INFO] - Image embeddings computed.
[2025-02-08 21:32:40,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:40,751][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:40,777][root][INFO] - Image embeddings computed.
[2025-02-08 21:32:44,972][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:45,085][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:45,105][root][INFO] - Image embeddings computed.
[2025-02-08 21:32:49,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:49,378][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:49,398][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 15
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 21:34:27,493][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:27,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:27,520][root][INFO] - Image embeddings computed.
[2025-02-08 21:34:44,184][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:44,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:44,212][root][INFO] - Image embeddings computed.
[2025-02-08 21:34:48,392][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:48,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:48,415][root][INFO] - Image embeddings computed.
[2025-02-08 21:34:52,633][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:52,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:52,674][root][INFO] - Image embeddings computed.
[2025-02-08 21:34:56,868][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:56,880][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:56,900][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 13
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 21:36:34,016][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:36:34,024][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:36:34,044][root][INFO] - Image embeddings computed.
[2025-02-08 21:36:50,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:36:50,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:36:50,728][root][INFO] - Image embeddings computed.
[2025-02-08 21:36:54,912][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:36:54,920][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:36:54,940][root][INFO] - Image embeddings computed.
[2025-02-08 21:36:59,159][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:36:59,164][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:36:59,184][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:03,381][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:03,390][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:03,409][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 15
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.500 | Done: False

Mean: 0.7453703703703703 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 37/50
[2025-02-08 21:38:47,906][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:38:48,005][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:38:48,031][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:04,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:04,798][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:04,818][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:09,017][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:09,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:09,135][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:13,333][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:13,430][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:13,450][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:17,643][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:17,737][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:17,757][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.333 | Done: False

[2025-02-08 21:40:57,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:40:57,411][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:40:57,432][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:14,131][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:14,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:14,157][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:18,357][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:18,365][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:18,385][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:22,580][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:22,672][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:22,692][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:26,881][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:26,979][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:26,999][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 12
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.667 | Done: False

[2025-02-08 21:43:06,349][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:06,451][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:06,472][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:23,542][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:23,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:23,672][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:27,854][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:27,952][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:27,972][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:32,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:32,248][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:32,269][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:36,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:36,559][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:36,579][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 12
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.667 | Done: False

[2025-02-08 21:45:17,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:17,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:17,140][root][INFO] - Image embeddings computed.
[2025-02-08 21:45:33,890][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:34,014][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:34,034][root][INFO] - Image embeddings computed.
[2025-02-08 21:45:38,224][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:38,332][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:38,352][root][INFO] - Image embeddings computed.
[2025-02-08 21:45:42,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:42,649][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:42,669][root][INFO] - Image embeddings computed.
[2025-02-08 21:45:46,866][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:46,961][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:47,007][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.7522522522522522 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 38/50
[2025-02-08 21:47:30,602][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:30,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:30,632][root][INFO] - Image embeddings computed.
[2025-02-08 21:47:47,160][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:47,171][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:47,191][root][INFO] - Image embeddings computed.
[2025-02-08 21:47:51,408][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:51,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:51,438][root][INFO] - Image embeddings computed.
[2025-02-08 21:47:55,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:55,660][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:55,680][root][INFO] - Image embeddings computed.
[2025-02-08 21:47:59,847][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:59,856][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:59,876][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 11
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.7587719298245613 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 39/50
[2025-02-08 21:49:45,290][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:49:45,298][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:49:45,319][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:01,870][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:01,879][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:01,898][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:06,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:06,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:06,127][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:10,314][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:10,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:10,344][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:14,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:14,555][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:14,575][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 10
Lang Goal: put the yellow blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.7649572649572649 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 40/50
[2025-02-08 21:52:02,047][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:02,155][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:02,175][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:18,836][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:18,945][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:18,965][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:23,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:23,279][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:23,299][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:27,513][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:27,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:27,643][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:31,833][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:31,936][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:31,956][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 12
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.7708333333333333 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 41/50
[2025-02-08 21:54:16,488][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:16,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:16,514][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:33,128][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:33,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:33,156][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:37,365][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:37,374][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:37,394][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:41,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:41,594][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:41,614][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:45,795][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:45,797][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:45,817][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.7764227642276422 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 42/50
[2025-02-08 21:56:33,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:33,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:33,815][root][INFO] - Image embeddings computed.
[2025-02-08 21:56:51,395][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:51,492][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:51,512][root][INFO] - Image embeddings computed.
[2025-02-08 21:56:55,668][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:55,764][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:55,784][root][INFO] - Image embeddings computed.
[2025-02-08 21:56:59,970][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:57:00,077][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:57:00,102][root][INFO] - Image embeddings computed.
[2025-02-08 21:57:04,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:57:04,358][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:57:04,383][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 16
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.7817460317460316 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 43/50
[2025-02-08 21:58:51,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:58:51,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:58:51,295][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:07,928][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:07,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:07,957][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:12,172][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:12,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:12,301][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:16,490][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:16,594][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:16,614][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:20,811][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:20,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:20,923][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 12
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.7868217054263564 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 44/50
[2025-02-08 22:01:11,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:11,200][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:11,221][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:28,018][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:28,116][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:28,136][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:32,342][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:32,433][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:32,453][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:36,650][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:36,667][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:36,700][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:40,905][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:40,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:40,935][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 19
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 22:03:24,681][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:24,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:24,800][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:41,872][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:41,973][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:41,993][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:46,167][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:46,265][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:46,285][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:50,485][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:50,583][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:50,603][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:54,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:54,901][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:54,921][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 2
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.000 | Done: False

[2025-02-08 22:05:35,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:35,777][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:35,798][root][INFO] - Image embeddings computed.
[2025-02-08 22:05:52,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:52,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:52,539][root][INFO] - Image embeddings computed.
[2025-02-08 22:05:56,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:56,726][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:56,746][root][INFO] - Image embeddings computed.
[2025-02-08 22:06:00,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:00,950][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:00,970][root][INFO] - Image embeddings computed.
[2025-02-08 22:06:05,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:06:05,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:06:05,199][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 3
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.000 | Done: False

Mean: 0.7689393939393938 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 45/50
[2025-02-08 22:07:55,248][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:07:55,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:07:55,376][root][INFO] - Image embeddings computed.
[2025-02-08 22:08:12,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:12,241][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:12,268][root][INFO] - Image embeddings computed.
[2025-02-08 22:08:16,450][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:16,547][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:16,572][root][INFO] - Image embeddings computed.
[2025-02-08 22:08:20,778][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:20,875][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:20,895][root][INFO] - Image embeddings computed.
[2025-02-08 22:08:25,056][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:25,148][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:25,168][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 19
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.7740740740740739 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 46/50
[2025-02-08 22:10:13,979][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:13,988][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:14,008][root][INFO] - Image embeddings computed.
[2025-02-08 22:10:30,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:30,746][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:30,766][root][INFO] - Image embeddings computed.
[2025-02-08 22:10:34,959][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:34,968][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:34,988][root][INFO] - Image embeddings computed.
[2025-02-08 22:10:39,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:39,194][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:39,214][root][INFO] - Image embeddings computed.
[2025-02-08 22:10:43,378][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:43,381][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:43,401][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 20
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.333 | Done: False

[2025-02-08 22:12:24,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:24,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:24,920][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:41,663][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:41,671][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:41,691][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:45,900][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:45,907][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:45,927][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:50,113][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:50,122][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:50,142][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:54,314][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:54,323][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:54,343][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 17
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.667 | Done: False

[2025-02-08 22:14:36,415][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:36,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:36,444][root][INFO] - Image embeddings computed.
[2025-02-08 22:14:53,923][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:53,931][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:53,951][root][INFO] - Image embeddings computed.
[2025-02-08 22:14:58,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:58,135][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:58,155][root][INFO] - Image embeddings computed.
[2025-02-08 22:15:02,335][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:02,339][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:02,359][root][INFO] - Image embeddings computed.
[2025-02-08 22:15:06,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:15:06,543][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:15:06,563][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 20
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.7789855072463767 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 47/50
[2025-02-08 22:16:57,920][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:16:58,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:16:58,051][root][INFO] - Image embeddings computed.
[2025-02-08 22:17:14,560][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:17:14,654][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:17:14,674][root][INFO] - Image embeddings computed.
[2025-02-08 22:17:18,865][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:17:18,956][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:17:18,976][root][INFO] - Image embeddings computed.
[2025-02-08 22:17:23,160][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:17:23,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:17:23,272][root][INFO] - Image embeddings computed.
[2025-02-08 22:17:27,479][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:17:27,590][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:17:27,611][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 22:19:12,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:19:12,286][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:19:12,307][root][INFO] - Image embeddings computed.
[2025-02-08 22:19:28,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:19:28,777][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:19:28,797][root][INFO] - Image embeddings computed.
[2025-02-08 22:19:32,986][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:19:32,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:19:33,009][root][INFO] - Image embeddings computed.
[2025-02-08 22:19:37,192][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:19:37,195][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:19:37,215][root][INFO] - Image embeddings computed.
[2025-02-08 22:19:41,439][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:19:41,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:19:41,462][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 13
Lang Goal: put the red blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.7836879432624112 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 48/50
[2025-02-08 22:21:30,569][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:30,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:30,600][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:47,202][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:47,209][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:47,229][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:51,429][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:51,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:51,454][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:55,647][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:55,655][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:55,675][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:59,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:59,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:59,879][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the brown blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-08 22:23:46,604][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:23:46,710][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:23:46,730][root][INFO] - Image embeddings computed.
[2025-02-08 22:24:03,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:24:03,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:24:03,609][root][INFO] - Image embeddings computed.
[2025-02-08 22:24:07,805][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:24:08,003][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:24:08,023][root][INFO] - Image embeddings computed.
[2025-02-08 22:24:12,201][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:24:12,343][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:24:12,363][root][INFO] - Image embeddings computed.
[2025-02-08 22:24:16,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:24:16,668][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:24:16,688][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 13
Lang Goal: put the brown blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.7881944444444443 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 49/50
[2025-02-08 22:26:09,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:26:09,336][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:26:09,356][root][INFO] - Image embeddings computed.
[2025-02-08 22:26:25,987][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:26:25,994][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:26:26,014][root][INFO] - Image embeddings computed.
[2025-02-08 22:26:30,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:26:30,227][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:26:30,247][root][INFO] - Image embeddings computed.
[2025-02-08 22:26:34,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:26:34,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:26:34,461][root][INFO] - Image embeddings computed.
[2025-02-08 22:26:38,618][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:26:38,626][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:26:38,646][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 15
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 22:28:21,777][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:28:21,783][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:28:21,804][root][INFO] - Image embeddings computed.
[2025-02-08 22:28:38,459][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:28:38,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:28:38,486][root][INFO] - Image embeddings computed.
[2025-02-08 22:28:42,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:28:42,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:28:42,718][root][INFO] - Image embeddings computed.
[2025-02-08 22:28:46,899][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:28:46,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:28:46,929][root][INFO] - Image embeddings computed.
[2025-02-08 22:28:51,094][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:28:51,102][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:28:51,122][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 14
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 22:30:34,802][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:30:34,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:30:34,955][root][INFO] - Image embeddings computed.
[2025-02-08 22:30:51,785][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:30:51,883][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:30:51,903][root][INFO] - Image embeddings computed.
[2025-02-08 22:30:56,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:30:56,201][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:30:56,221][root][INFO] - Image embeddings computed.
[2025-02-08 22:31:00,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:00,503][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:00,523][root][INFO] - Image embeddings computed.
[2025-02-08 22:31:04,677][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:31:04,775][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:31:04,796][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 14
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.792517006802721 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
Test: 50/50
[2025-02-08 22:32:56,928][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:32:56,938][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:32:56,959][root][INFO] - Image embeddings computed.
[2025-02-08 22:33:13,527][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:33:13,535][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:33:13,555][root][INFO] - Image embeddings computed.
[2025-02-08 22:33:17,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:33:17,747][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:33:17,767][root][INFO] - Image embeddings computed.
[2025-02-08 22:33:21,963][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:33:21,971][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:33:21,991][root][INFO] - Image embeddings computed.
[2025-02-08 22:33:26,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:33:26,170][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:33:26,190][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 13
Lang Goal: put the blue blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.7966666666666665 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00160-val_loss=0.00013749.ckpt
[2025-02-08 22:35:12,231][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 22:35:12,363][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 22:35:20,150][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-08 22:35:25,549][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 22:35:25,678][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 22:35:32,111][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-08 22:35:40,778][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 22:35:40,905][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 22:35:47,332][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-08 22:35:56,026][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 22:35:56,151][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 22:36:02,595][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: put-block-in-bowl-seen-colors-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/put-block-in-bowl-seen-colors-clipfit-n10-train/checkpoints/steps=00200-val_loss=0.00012113.ckpt
Test: 1/50
[2025-02-08 22:36:44,722][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:44,843][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:44,865][root][INFO] - Image embeddings computed.
[2025-02-08 22:37:01,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:37:01,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:37:01,631][root][INFO] - Image embeddings computed.
[2025-02-08 22:37:05,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:37:05,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:37:05,979][root][INFO] - Image embeddings computed.
[2025-02-08 22:37:10,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:37:10,290][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:37:10,310][root][INFO] - Image embeddings computed.
[2025-02-08 22:37:14,502][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:37:14,636][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:37:14,656][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-08 22:39:02,108][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:39:02,117][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:39:02,137][root][INFO] - Image embeddings computed.
[2025-02-08 22:39:18,788][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:39:18,796][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:39:18,816][root][INFO] - Image embeddings computed.
[2025-02-08 22:39:23,037][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:39:23,040][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:39:23,060][root][INFO] - Image embeddings computed.
[2025-02-08 22:39:27,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:39:27,261][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:39:27,281][root][INFO] - Image embeddings computed.
[2025-02-08 22:39:31,495][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:39:31,502][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:39:31,522][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 6
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.000 | Done: False

[2025-02-08 22:41:19,189][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:19,292][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:19,313][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:36,007][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:36,105][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:36,125][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:40,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:40,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:40,465][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:44,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:44,757][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:44,777][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:48,971][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:49,068][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:49,088][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 0.500 | Done: False

Mean: 0.5 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 2/50
[2025-02-08 22:43:44,219][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:44,228][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:44,248][root][INFO] - Image embeddings computed.
[2025-02-08 22:44:00,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:44:00,869][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:44:00,889][root][INFO] - Image embeddings computed.
[2025-02-08 22:44:05,113][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:44:05,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:44:05,145][root][INFO] - Image embeddings computed.
[2025-02-08 22:44:09,362][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:44:09,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:44:09,387][root][INFO] - Image embeddings computed.
[2025-02-08 22:44:13,555][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:44:13,558][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:44:13,578][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.75 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 3/50
[2025-02-08 22:46:05,144][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:46:05,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:46:05,176][root][INFO] - Image embeddings computed.
[2025-02-08 22:46:21,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:46:21,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:46:21,947][root][INFO] - Image embeddings computed.
[2025-02-08 22:46:26,152][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:46:26,161][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:46:26,181][root][INFO] - Image embeddings computed.
[2025-02-08 22:46:30,396][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:46:30,405][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:46:30,425][root][INFO] - Image embeddings computed.
[2025-02-08 22:46:34,627][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:46:34,636][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:46:34,656][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 15
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 22:48:19,968][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:19,978][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:19,999][root][INFO] - Image embeddings computed.
[2025-02-08 22:48:36,761][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:36,770][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:36,790][root][INFO] - Image embeddings computed.
[2025-02-08 22:48:41,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:41,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:41,037][root][INFO] - Image embeddings computed.
[2025-02-08 22:48:45,241][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:45,244][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:45,264][root][INFO] - Image embeddings computed.
[2025-02-08 22:48:49,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:49,451][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:49,471][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 17
Lang Goal: put the blue blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 22:50:35,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:35,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:35,878][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:52,654][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:52,661][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:52,681][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:56,876][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:56,878][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:56,899][root][INFO] - Image embeddings computed.
[2025-02-08 22:51:01,090][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:51:01,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:51:01,118][root][INFO] - Image embeddings computed.
[2025-02-08 22:51:05,313][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:51:05,322][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:51:05,342][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 15
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 4/50
[2025-02-08 22:52:57,779][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:57,878][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:57,898][root][INFO] - Image embeddings computed.
[2025-02-08 22:53:14,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:53:14,604][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:53:14,624][root][INFO] - Image embeddings computed.
[2025-02-08 22:53:18,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:53:18,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:53:18,979][root][INFO] - Image embeddings computed.
[2025-02-08 22:53:23,180][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:53:23,283][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:53:23,303][root][INFO] - Image embeddings computed.
[2025-02-08 22:53:27,495][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:53:27,591][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:53:27,612][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.000 | Done: False

[2025-02-08 22:55:16,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:16,082][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:16,102][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:32,772][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:32,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:32,800][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:36,999][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:37,008][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:37,028][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:41,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:41,236][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:41,256][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:45,487][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:45,495][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:45,515][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 4
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 0.000 | Done: False

Mean: 0.625 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 5/50
[2025-02-08 22:57:38,838][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:38,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:38,867][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:55,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:55,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:55,565][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:59,783][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:59,790][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:59,810][root][INFO] - Image embeddings computed.
[2025-02-08 22:58:04,030][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:58:04,037][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:58:04,057][root][INFO] - Image embeddings computed.
[2025-02-08 22:58:08,272][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:58:08,275][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:58:08,295][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.7 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 6/50
[2025-02-08 23:00:00,980][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:00:01,077][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:00:01,098][root][INFO] - Image embeddings computed.
[2025-02-08 23:00:17,754][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:00:17,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:00:17,833][root][INFO] - Image embeddings computed.
[2025-02-08 23:00:22,082][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:00:22,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:00:22,111][root][INFO] - Image embeddings computed.
[2025-02-08 23:00:26,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:00:26,426][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:00:26,446][root][INFO] - Image embeddings computed.
[2025-02-08 23:00:30,650][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:00:30,656][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:00:30,676][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 23:02:17,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:17,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:17,510][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:34,184][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:34,190][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:34,210][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:38,447][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:38,450][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:38,470][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:42,675][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:42,678][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:42,697][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:46,895][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:46,898][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:46,918][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 12
Lang Goal: put the yellow blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.75 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 7/50
[2025-02-08 23:04:40,102][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:40,205][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:40,225][root][INFO] - Image embeddings computed.
[2025-02-08 23:04:57,168][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:57,278][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:57,298][root][INFO] - Image embeddings computed.
[2025-02-08 23:05:01,502][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:05:01,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:05:01,635][root][INFO] - Image embeddings computed.
[2025-02-08 23:05:05,840][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:05:05,951][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:05:05,970][root][INFO] - Image embeddings computed.
[2025-02-08 23:05:10,178][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:05:10,275][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:05:10,295][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 16
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.7857142857142857 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 8/50
[2025-02-08 23:07:04,133][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:07:04,236][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:07:04,256][root][INFO] - Image embeddings computed.
[2025-02-08 23:07:20,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:07:20,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:07:20,973][root][INFO] - Image embeddings computed.
[2025-02-08 23:07:25,200][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:07:25,314][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:07:25,335][root][INFO] - Image embeddings computed.
[2025-02-08 23:07:29,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:07:29,666][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:07:29,686][root][INFO] - Image embeddings computed.
[2025-02-08 23:07:33,866][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:07:33,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:07:34,006][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 10
Lang Goal: put the brown blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8125 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 9/50
[2025-02-08 23:09:31,662][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:31,765][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:31,785][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:48,876][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:48,973][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:48,994][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:53,188][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:53,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:53,313][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:57,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:57,631][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:57,651][root][INFO] - Image embeddings computed.
[2025-02-08 23:10:01,851][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:10:01,963][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:10:01,983][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 15
Lang Goal: put the green blocks in a red bowl
Total Reward: 0.500 | Done: False

[2025-02-08 23:11:54,304][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:54,308][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:54,328][root][INFO] - Image embeddings computed.
[2025-02-08 23:12:11,155][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:12:11,165][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:12:11,185][root][INFO] - Image embeddings computed.
[2025-02-08 23:12:15,371][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:12:15,374][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:12:15,394][root][INFO] - Image embeddings computed.
[2025-02-08 23:12:19,619][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:12:19,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:12:19,642][root][INFO] - Image embeddings computed.
[2025-02-08 23:12:23,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:12:23,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:12:23,887][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 13
Lang Goal: put the green blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8333333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 10/50
[2025-02-08 23:14:18,150][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:18,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:18,190][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:34,848][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:34,853][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:34,873][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:39,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:39,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:39,111][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:43,318][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:43,329][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:43,349][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:47,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:47,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:47,566][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 12
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.85 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 11/50
[2025-02-08 23:16:42,369][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:42,378][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:42,398][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:59,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:59,100][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:59,120][root][INFO] - Image embeddings computed.
[2025-02-08 23:17:03,348][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:17:03,350][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:17:03,371][root][INFO] - Image embeddings computed.
[2025-02-08 23:17:07,595][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:17:07,603][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:17:07,623][root][INFO] - Image embeddings computed.
[2025-02-08 23:17:11,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:17:11,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:17:11,843][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 11
Lang Goal: put the brown blocks in a green bowl
Total Reward: 0.500 | Done: False

[2025-02-08 23:18:59,988][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:19:00,001][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:19:00,022][root][INFO] - Image embeddings computed.
[2025-02-08 23:19:16,721][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:19:16,726][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:19:16,747][root][INFO] - Image embeddings computed.
[2025-02-08 23:19:20,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:19:20,970][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:19:20,990][root][INFO] - Image embeddings computed.
[2025-02-08 23:19:25,224][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:19:25,227][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:19:25,247][root][INFO] - Image embeddings computed.
[2025-02-08 23:19:29,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:19:29,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:19:29,461][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 11
Lang Goal: put the brown blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8636363636363636 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 12/50
[2025-02-08 23:21:28,272][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:28,374][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:28,394][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:45,122][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:45,219][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:45,245][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:49,445][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:49,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:49,566][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:53,792][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:53,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:53,910][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:58,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:58,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:58,235][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the brown blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 13/50
[2025-02-08 23:23:57,533][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:57,537][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:57,557][root][INFO] - Image embeddings computed.
[2025-02-08 23:24:14,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:24:14,357][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:24:14,377][root][INFO] - Image embeddings computed.
[2025-02-08 23:24:18,883][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:24:18,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:24:19,007][root][INFO] - Image embeddings computed.
[2025-02-08 23:24:23,229][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:24:23,327][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:24:23,347][root][INFO] - Image embeddings computed.
[2025-02-08 23:24:27,535][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:24:27,638][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:24:27,658][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.8846153846153846 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 14/50
[2025-02-08 23:26:27,126][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:26:27,230][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:26:27,251][root][INFO] - Image embeddings computed.
[2025-02-08 23:26:43,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:26:43,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:26:43,954][root][INFO] - Image embeddings computed.
[2025-02-08 23:26:48,186][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:26:48,300][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:26:48,320][root][INFO] - Image embeddings computed.
[2025-02-08 23:26:52,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:26:52,666][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:26:52,686][root][INFO] - Image embeddings computed.
[2025-02-08 23:26:56,873][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:26:56,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:26:56,997][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 10
Lang Goal: put the red blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8928571428571429 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 15/50
[2025-02-08 23:28:55,711][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:55,815][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:55,836][root][INFO] - Image embeddings computed.
[2025-02-08 23:29:12,448][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:29:12,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:29:12,600][root][INFO] - Image embeddings computed.
[2025-02-08 23:29:16,795][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:29:16,906][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:29:16,926][root][INFO] - Image embeddings computed.
[2025-02-08 23:29:21,128][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:29:21,231][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:29:21,251][root][INFO] - Image embeddings computed.
[2025-02-08 23:29:25,447][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:29:25,551][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:29:25,571][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 23:31:19,107][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:31:19,240][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:31:19,260][root][INFO] - Image embeddings computed.
[2025-02-08 23:31:35,874][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:31:35,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:31:35,997][root][INFO] - Image embeddings computed.
[2025-02-08 23:31:40,187][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:31:40,322][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:31:40,342][root][INFO] - Image embeddings computed.
[2025-02-08 23:31:44,557][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:31:44,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:31:44,673][root][INFO] - Image embeddings computed.
[2025-02-08 23:31:48,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:31:48,956][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:31:48,976][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 13
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-08 23:33:43,865][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:33:43,876][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:33:43,896][root][INFO] - Image embeddings computed.
[2025-02-08 23:34:00,418][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:34:00,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:34:00,539][root][INFO] - Image embeddings computed.
[2025-02-08 23:34:04,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:34:04,830][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:34:04,851][root][INFO] - Image embeddings computed.
[2025-02-08 23:34:09,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:34:09,158][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:34:09,178][root][INFO] - Image embeddings computed.
[2025-02-08 23:34:13,365][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:34:13,462][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:34:13,482][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 0.500 | Done: False

Mean: 0.8666666666666667 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 16/50
[2025-02-08 23:36:11,986][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:36:11,994][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:36:12,014][root][INFO] - Image embeddings computed.
[2025-02-08 23:36:28,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:36:28,897][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:36:28,918][root][INFO] - Image embeddings computed.
[2025-02-08 23:36:33,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:36:33,136][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:36:33,156][root][INFO] - Image embeddings computed.
[2025-02-08 23:36:37,364][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:36:37,373][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:36:37,393][root][INFO] - Image embeddings computed.
[2025-02-08 23:36:41,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:36:41,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:36:41,613][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the blue blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 17/50
[2025-02-08 23:38:38,229][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:38,333][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:38,353][root][INFO] - Image embeddings computed.
[2025-02-08 23:38:54,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:55,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:55,046][root][INFO] - Image embeddings computed.
[2025-02-08 23:38:59,264][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:38:59,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:38:59,402][root][INFO] - Image embeddings computed.
[2025-02-08 23:39:03,621][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:39:03,758][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:39:03,778][root][INFO] - Image embeddings computed.
[2025-02-08 23:39:07,993][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:39:08,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:39:08,123][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 12
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8823529411764706 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 18/50
[2025-02-08 23:41:07,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:41:07,864][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:41:07,884][root][INFO] - Image embeddings computed.
[2025-02-08 23:41:24,510][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:41:24,518][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:41:24,538][root][INFO] - Image embeddings computed.
[2025-02-08 23:41:28,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:41:28,776][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:41:28,796][root][INFO] - Image embeddings computed.
[2025-02-08 23:41:33,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:41:33,016][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:41:33,036][root][INFO] - Image embeddings computed.
[2025-02-08 23:41:37,251][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:41:37,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:41:37,280][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 13
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 23:43:30,403][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:30,507][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:30,528][root][INFO] - Image embeddings computed.
[2025-02-08 23:43:47,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:47,272][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:47,292][root][INFO] - Image embeddings computed.
[2025-02-08 23:43:51,508][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:51,605][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:51,625][root][INFO] - Image embeddings computed.
[2025-02-08 23:43:55,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:43:55,930][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:43:55,951][root][INFO] - Image embeddings computed.
[2025-02-08 23:44:00,152][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:44:00,255][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:44:00,275][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 11
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-08 23:45:51,577][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:45:51,585][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:45:51,605][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:08,124][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:08,131][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:08,161][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:12,374][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:12,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:12,403][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:16,628][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:16,636][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:16,656][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:20,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:20,864][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:20,884][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 12
Lang Goal: put the brown blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8888888888888888 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 19/50
[2025-02-08 23:48:18,098][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:48:18,109][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:48:18,129][root][INFO] - Image embeddings computed.
[2025-02-08 23:48:34,754][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:48:34,762][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:48:34,781][root][INFO] - Image embeddings computed.
[2025-02-08 23:48:39,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:48:39,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:48:39,038][root][INFO] - Image embeddings computed.
[2025-02-08 23:48:43,249][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:48:43,258][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:48:43,278][root][INFO] - Image embeddings computed.
[2025-02-08 23:48:47,466][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:48:47,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:48:47,513][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 11
Lang Goal: put the green blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8947368421052632 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 20/50
[2025-02-08 23:50:45,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:50:45,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:50:45,626][root][INFO] - Image embeddings computed.
[2025-02-08 23:51:02,255][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:51:02,262][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:51:02,282][root][INFO] - Image embeddings computed.
[2025-02-08 23:51:06,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:51:06,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:51:06,520][root][INFO] - Image embeddings computed.
[2025-02-08 23:51:10,743][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:51:10,751][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:51:10,771][root][INFO] - Image embeddings computed.
[2025-02-08 23:51:14,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:51:14,975][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:51:14,995][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 23:53:07,580][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:07,710][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:07,730][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:24,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:24,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:24,487][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:28,677][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:28,774][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:28,794][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:33,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:33,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:33,138][root][INFO] - Image embeddings computed.
[2025-02-08 23:53:37,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:37,438][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:37,458][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 12
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-08 23:55:32,482][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:32,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:32,599][root][INFO] - Image embeddings computed.
[2025-02-08 23:55:49,231][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:49,326][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:49,346][root][INFO] - Image embeddings computed.
[2025-02-08 23:55:53,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:53,637][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:53,657][root][INFO] - Image embeddings computed.
[2025-02-08 23:55:57,861][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:55:57,958][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:55:57,978][root][INFO] - Image embeddings computed.
[2025-02-08 23:56:02,190][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:56:02,293][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:56:02,313][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 12
Lang Goal: put the green blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 21/50
[2025-02-08 23:58:01,741][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:01,856][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:01,882][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:18,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:18,572][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:18,592][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:22,816][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:22,921][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:22,941][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:27,159][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:27,258][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:27,283][root][INFO] - Image embeddings computed.
[2025-02-08 23:58:31,479][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:31,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:31,649][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 11
Lang Goal: put the gray blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8809523809523809 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 22/50
[2025-02-09 00:00:33,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:00:33,601][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:00:33,622][root][INFO] - Image embeddings computed.
[2025-02-09 00:00:50,210][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:00:50,331][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:00:50,351][root][INFO] - Image embeddings computed.
[2025-02-09 00:00:54,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:00:54,679][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:00:54,699][root][INFO] - Image embeddings computed.
[2025-02-09 00:00:58,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:00:59,013][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:00:59,033][root][INFO] - Image embeddings computed.
[2025-02-09 00:01:03,236][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:03,351][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:03,371][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 9
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8863636363636364 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 23/50
[2025-02-09 00:03:03,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:03,220][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:03,241][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:19,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:20,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:20,041][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:24,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:24,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:24,341][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:28,550][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:28,644][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:28,664][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:32,879][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:32,971][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:32,991][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 16
Lang Goal: put the yellow blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.8913043478260869 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 24/50
[2025-02-09 00:05:35,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:05:36,095][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:05:36,115][root][INFO] - Image embeddings computed.
[2025-02-09 00:05:52,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:05:52,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:05:52,793][root][INFO] - Image embeddings computed.
[2025-02-09 00:05:57,021][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:05:57,032][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:05:57,052][root][INFO] - Image embeddings computed.
[2025-02-09 00:06:01,253][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:06:01,261][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:06:01,281][root][INFO] - Image embeddings computed.
[2025-02-09 00:06:05,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:06:05,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:06:05,488][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the green blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8958333333333334 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 25/50
[2025-02-09 00:08:10,016][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:10,019][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:10,040][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:26,748][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:26,751][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:26,771][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:30,988][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:30,991][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:31,011][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:35,196][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:35,199][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:35,219][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:39,411][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:39,508][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:39,528][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 16
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-09 00:10:35,203][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:35,211][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:35,232][root][INFO] - Image embeddings computed.
[2025-02-09 00:10:51,888][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:51,979][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:51,999][root][INFO] - Image embeddings computed.
[2025-02-09 00:10:56,177][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:56,272][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:56,292][root][INFO] - Image embeddings computed.
[2025-02-09 00:11:00,483][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:11:00,574][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:11:00,594][root][INFO] - Image embeddings computed.
[2025-02-09 00:11:04,804][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:11:04,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:11:04,921][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.9 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 26/50
[2025-02-09 00:13:06,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:07,071][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:07,091][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:24,089][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:24,180][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:24,200][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:28,425][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:28,521][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:28,541][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:32,740][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:32,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:32,866][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:37,052][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:37,149][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:37,169][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 16
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-09 00:15:32,959][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:32,962][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:32,982][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:50,029][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:50,035][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:50,056][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:54,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:54,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:54,309][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:58,529][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:58,532][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:58,552][root][INFO] - Image embeddings computed.
[2025-02-09 00:16:02,742][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:16:02,745][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:16:02,765][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 7
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-09 00:17:58,268][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:17:58,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:17:58,295][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:15,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:15,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:15,574][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:19,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:19,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:19,836][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:24,046][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:24,054][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:24,074][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:28,273][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:28,280][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:28,300][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 14
Lang Goal: put the blue blocks in a cyan bowl
Total Reward: 0.500 | Done: False

Mean: 0.8846153846153846 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 27/50
[2025-02-09 00:20:31,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:31,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:31,139][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:47,899][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:48,013][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:48,033][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:52,269][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:52,370][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:52,391][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:56,590][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:56,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:56,702][root][INFO] - Image embeddings computed.
[2025-02-09 00:21:00,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:21:01,005][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:21:01,026][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-09 00:22:57,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:22:57,354][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:22:57,374][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:14,097][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:14,106][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:14,126][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:18,352][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:18,361][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:18,381][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:22,590][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:22,595][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:22,615][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:26,808][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:26,810][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:26,830][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 11
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.500 | Done: False

[2025-02-09 00:25:23,312][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:23,416][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:23,436][root][INFO] - Image embeddings computed.
[2025-02-09 00:25:40,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:40,344][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:40,364][root][INFO] - Image embeddings computed.
[2025-02-09 00:25:44,607][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:44,722][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:44,742][root][INFO] - Image embeddings computed.
[2025-02-09 00:25:48,945][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:49,053][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:49,073][root][INFO] - Image embeddings computed.
[2025-02-09 00:25:53,281][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:53,379][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:53,399][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 12
Lang Goal: put the gray blocks in a yellow bowl
Total Reward: 0.500 | Done: False

Mean: 0.8703703703703703 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 28/50
[2025-02-09 00:27:56,698][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:27:56,707][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:27:56,728][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:13,320][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:13,329][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:13,349][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:17,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:17,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:17,581][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:21,804][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:21,807][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:21,827][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:26,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:26,014][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:26,034][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 13
Lang Goal: put the gray blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.875 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 29/50
[2025-02-09 00:30:29,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:29,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:29,031][root][INFO] - Image embeddings computed.
[2025-02-09 00:30:45,685][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:45,691][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:45,711][root][INFO] - Image embeddings computed.
[2025-02-09 00:30:49,950][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:49,953][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:49,973][root][INFO] - Image embeddings computed.
[2025-02-09 00:30:54,211][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:54,213][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:54,234][root][INFO] - Image embeddings computed.
[2025-02-09 00:30:58,433][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:58,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:58,463][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-09 00:32:54,892][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:32:54,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:32:54,923][root][INFO] - Image embeddings computed.
[2025-02-09 00:33:11,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:33:11,596][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:33:11,616][root][INFO] - Image embeddings computed.
[2025-02-09 00:33:15,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:33:15,848][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:33:15,868][root][INFO] - Image embeddings computed.
[2025-02-09 00:33:20,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:33:20,102][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:33:20,122][root][INFO] - Image embeddings computed.
[2025-02-09 00:33:24,316][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:33:24,319][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:33:24,339][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 14
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 0.500 | Done: False

[2025-02-09 00:35:23,533][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:35:23,543][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:35:23,575][root][INFO] - Image embeddings computed.
[2025-02-09 00:35:40,204][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:35:40,209][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:35:40,229][root][INFO] - Image embeddings computed.
[2025-02-09 00:35:44,436][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:35:44,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:35:44,463][root][INFO] - Image embeddings computed.
[2025-02-09 00:35:48,699][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:35:48,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:35:48,731][root][INFO] - Image embeddings computed.
[2025-02-09 00:35:52,948][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:35:52,951][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:35:52,971][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 15
Lang Goal: put the gray blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8793103448275862 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 30/50
[2025-02-09 00:37:56,880][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:37:56,888][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:37:56,909][root][INFO] - Image embeddings computed.
[2025-02-09 00:38:13,702][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:38:13,716][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:38:13,736][root][INFO] - Image embeddings computed.
[2025-02-09 00:38:17,959][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:38:17,962][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:38:17,984][root][INFO] - Image embeddings computed.
[2025-02-09 00:38:22,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:38:22,277][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:38:22,297][root][INFO] - Image embeddings computed.
[2025-02-09 00:38:26,466][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:38:26,558][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:38:26,578][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 14
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.8833333333333333 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 31/50
[2025-02-09 00:40:32,411][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:40:32,420][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:40:32,440][root][INFO] - Image embeddings computed.
[2025-02-09 00:40:49,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:40:49,214][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:40:49,234][root][INFO] - Image embeddings computed.
[2025-02-09 00:40:53,436][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:40:53,449][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:40:53,469][root][INFO] - Image embeddings computed.
[2025-02-09 00:40:57,702][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:40:57,705][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:40:57,725][root][INFO] - Image embeddings computed.
[2025-02-09 00:41:01,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:41:01,945][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:41:01,965][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.333 | Done: False

[2025-02-09 00:43:00,208][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:43:00,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:43:00,236][root][INFO] - Image embeddings computed.
[2025-02-09 00:43:16,954][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:43:16,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:43:16,977][root][INFO] - Image embeddings computed.
[2025-02-09 00:43:21,180][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:43:21,183][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:43:21,203][root][INFO] - Image embeddings computed.
[2025-02-09 00:43:25,430][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:43:25,433][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:43:25,453][root][INFO] - Image embeddings computed.
[2025-02-09 00:43:29,680][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:43:29,688][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:43:29,708][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 0.667 | Done: False

[2025-02-09 00:45:28,190][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:45:28,198][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:45:28,218][root][INFO] - Image embeddings computed.
[2025-02-09 00:45:44,949][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:45:44,960][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:45:44,980][root][INFO] - Image embeddings computed.
[2025-02-09 00:45:49,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:45:49,181][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:45:49,201][root][INFO] - Image embeddings computed.
[2025-02-09 00:45:53,417][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:45:53,420][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:45:53,440][root][INFO] - Image embeddings computed.
[2025-02-09 00:45:57,671][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:45:57,674][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:45:57,693][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 14
Lang Goal: put the cyan blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.8870967741935484 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 32/50
[2025-02-09 00:48:00,804][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:48:00,811][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:48:00,831][root][INFO] - Image embeddings computed.
[2025-02-09 00:48:17,431][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:48:17,434][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:48:17,454][root][INFO] - Image embeddings computed.
[2025-02-09 00:48:21,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:48:21,684][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:48:21,704][root][INFO] - Image embeddings computed.
[2025-02-09 00:48:25,917][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:48:25,919][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:48:25,940][root][INFO] - Image embeddings computed.
[2025-02-09 00:48:30,148][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:48:30,151][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:48:30,171][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 10
Lang Goal: put the red blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.890625 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 33/50
[2025-02-09 00:50:39,811][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:50:39,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:50:39,932][root][INFO] - Image embeddings computed.
[2025-02-09 00:50:56,774][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:50:56,870][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:50:56,897][root][INFO] - Image embeddings computed.
[2025-02-09 00:51:01,098][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:01,194][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:01,214][root][INFO] - Image embeddings computed.
[2025-02-09 00:51:05,410][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:05,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:05,540][root][INFO] - Image embeddings computed.
[2025-02-09 00:51:09,732][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:51:09,832][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:51:09,853][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the green blocks in a gray bowl
Total Reward: 0.500 | Done: False

[2025-02-09 00:53:09,884][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:53:09,901][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:53:09,922][root][INFO] - Image embeddings computed.
[2025-02-09 00:53:27,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:53:27,408][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:53:27,428][root][INFO] - Image embeddings computed.
[2025-02-09 00:53:31,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:53:31,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:53:31,645][root][INFO] - Image embeddings computed.
[2025-02-09 00:53:35,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:53:35,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:53:35,878][root][INFO] - Image embeddings computed.
[2025-02-09 00:53:40,057][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:53:40,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:53:40,085][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 16
Lang Goal: put the green blocks in a gray bowl
Total Reward: 1.000 | Done: True

Mean: 0.8939393939393939 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 34/50
[2025-02-09 00:55:47,579][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:55:47,591][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:55:47,612][root][INFO] - Image embeddings computed.
[2025-02-09 00:56:04,224][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:04,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:04,255][root][INFO] - Image embeddings computed.
[2025-02-09 00:56:08,497][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:08,505][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:08,525][root][INFO] - Image embeddings computed.
[2025-02-09 00:56:12,732][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:12,740][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:12,760][root][INFO] - Image embeddings computed.
[2025-02-09 00:56:16,959][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:56:16,971][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:56:16,991][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 13
Lang Goal: put the cyan blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8970588235294118 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 35/50
[2025-02-09 00:58:26,861][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:58:26,971][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:58:26,992][root][INFO] - Image embeddings computed.
[2025-02-09 00:58:44,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:58:44,318][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:58:44,338][root][INFO] - Image embeddings computed.
[2025-02-09 00:58:48,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:58:48,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:58:48,667][root][INFO] - Image embeddings computed.
[2025-02-09 00:58:52,864][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:58:52,956][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:58:52,976][root][INFO] - Image embeddings computed.
[2025-02-09 00:58:57,162][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:58:57,259][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:58:57,279][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 17
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-09 01:00:56,947][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:00:56,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:00:56,977][root][INFO] - Image embeddings computed.
[2025-02-09 01:01:13,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:01:13,650][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:01:13,670][root][INFO] - Image embeddings computed.
[2025-02-09 01:01:17,880][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:01:17,889][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:01:17,909][root][INFO] - Image embeddings computed.
[2025-02-09 01:01:22,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:01:22,139][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:01:22,159][root][INFO] - Image embeddings computed.
[2025-02-09 01:01:26,349][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:01:26,357][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:01:26,377][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 16
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

[2025-02-09 01:03:28,185][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:03:28,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:03:28,307][root][INFO] - Image embeddings computed.
[2025-02-09 01:03:44,972][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:03:45,081][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:03:45,101][root][INFO] - Image embeddings computed.
[2025-02-09 01:03:49,307][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:03:49,404][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:03:49,424][root][INFO] - Image embeddings computed.
[2025-02-09 01:03:53,626][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:03:53,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:03:53,738][root][INFO] - Image embeddings computed.
[2025-02-09 01:03:57,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:03:58,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:03:58,054][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 17
Lang Goal: put the red blocks in a brown bowl
Total Reward: 0.500 | Done: False

Mean: 0.8857142857142857 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 36/50
[2025-02-09 01:06:03,998][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:06:04,097][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:06:04,118][root][INFO] - Image embeddings computed.
[2025-02-09 01:06:20,778][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:06:20,886][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:06:20,906][root][INFO] - Image embeddings computed.
[2025-02-09 01:06:25,113][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:06:25,186][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:06:25,206][root][INFO] - Image embeddings computed.
[2025-02-09 01:06:29,418][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:06:29,427][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:06:29,473][root][INFO] - Image embeddings computed.
[2025-02-09 01:06:33,672][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:06:33,687][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:06:33,707][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 15
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 0.500 | Done: False

[2025-02-09 01:08:34,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:08:34,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:08:34,301][root][INFO] - Image embeddings computed.
[2025-02-09 01:08:51,023][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:08:51,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:08:51,139][root][INFO] - Image embeddings computed.
[2025-02-09 01:08:55,333][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:08:55,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:08:55,456][root][INFO] - Image embeddings computed.
[2025-02-09 01:08:59,683][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:08:59,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:08:59,798][root][INFO] - Image embeddings computed.
[2025-02-09 01:09:04,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:09:04,109][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:09:04,129][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 13
Lang Goal: put the red blocks in a cyan bowl
Total Reward: 1.000 | Done: True

Mean: 0.8888888888888888 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 37/50
[2025-02-09 01:11:12,225][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:11:12,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:11:12,255][root][INFO] - Image embeddings computed.
[2025-02-09 01:11:29,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:11:29,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:11:29,038][root][INFO] - Image embeddings computed.
[2025-02-09 01:11:33,253][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:11:33,262][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:11:33,282][root][INFO] - Image embeddings computed.
[2025-02-09 01:11:37,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:11:37,503][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:11:37,523][root][INFO] - Image embeddings computed.
[2025-02-09 01:11:41,734][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:11:41,743][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:11:41,763][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 19
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.333 | Done: False

[2025-02-09 01:13:43,831][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:13:43,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:13:43,862][root][INFO] - Image embeddings computed.
[2025-02-09 01:14:00,605][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:14:00,623][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:14:00,643][root][INFO] - Image embeddings computed.
[2025-02-09 01:14:04,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:14:04,979][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:14:04,999][root][INFO] - Image embeddings computed.
[2025-02-09 01:14:09,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:14:09,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:14:09,326][root][INFO] - Image embeddings computed.
[2025-02-09 01:14:13,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:14:13,642][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:14:13,662][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 18
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 0.667 | Done: False

[2025-02-09 01:16:15,733][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:16:15,830][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:16:15,851][root][INFO] - Image embeddings computed.
[2025-02-09 01:16:32,584][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:16:32,684][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:16:32,704][root][INFO] - Image embeddings computed.
[2025-02-09 01:16:36,892][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:16:36,995][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:16:37,015][root][INFO] - Image embeddings computed.
[2025-02-09 01:16:41,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:16:41,305][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:16:41,330][root][INFO] - Image embeddings computed.
[2025-02-09 01:16:45,557][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:16:45,660][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:16:45,684][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 17
Lang Goal: put the cyan blocks in a red bowl
Total Reward: 1.000 | Done: True

Mean: 0.8918918918918919 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 38/50
[2025-02-09 01:18:53,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:18:53,212][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:18:53,233][root][INFO] - Image embeddings computed.
[2025-02-09 01:19:09,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:19:09,968][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:19:09,988][root][INFO] - Image embeddings computed.
[2025-02-09 01:19:14,223][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:19:14,326][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:19:14,347][root][INFO] - Image embeddings computed.
[2025-02-09 01:19:18,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:19:18,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:19:18,690][root][INFO] - Image embeddings computed.
[2025-02-09 01:19:22,875][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:19:22,972][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:19:22,992][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 11
Lang Goal: put the cyan blocks in a brown bowl
Total Reward: 1.000 | Done: True

Mean: 0.8947368421052632 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 39/50
[2025-02-09 01:21:29,725][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:21:29,733][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:21:29,753][root][INFO] - Image embeddings computed.
[2025-02-09 01:21:46,381][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:21:46,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:21:46,409][root][INFO] - Image embeddings computed.
[2025-02-09 01:21:50,632][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:21:50,642][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:21:50,662][root][INFO] - Image embeddings computed.
[2025-02-09 01:21:54,861][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:21:54,872][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:21:54,892][root][INFO] - Image embeddings computed.
[2025-02-09 01:21:59,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:21:59,120][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:21:59,140][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 10
Lang Goal: put the yellow blocks in a blue bowl
Total Reward: 1.000 | Done: True

Mean: 0.8974358974358975 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 40/50
[2025-02-09 01:24:07,836][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:24:07,945][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:24:07,965][root][INFO] - Image embeddings computed.
[2025-02-09 01:24:24,699][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:24:24,796][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:24:24,816][root][INFO] - Image embeddings computed.
[2025-02-09 01:24:29,036][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:24:29,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:24:29,163][root][INFO] - Image embeddings computed.
[2025-02-09 01:24:33,389][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:24:33,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:24:33,513][root][INFO] - Image embeddings computed.
[2025-02-09 01:24:37,720][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:24:37,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:24:37,832][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 12
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 41/50
[2025-02-09 01:26:45,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:26:45,859][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:26:45,880][root][INFO] - Image embeddings computed.
[2025-02-09 01:27:02,564][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:27:02,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:27:02,685][root][INFO] - Image embeddings computed.
[2025-02-09 01:27:06,907][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:27:06,998][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:27:07,019][root][INFO] - Image embeddings computed.
[2025-02-09 01:27:11,224][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:27:11,317][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:27:11,337][root][INFO] - Image embeddings computed.
[2025-02-09 01:27:15,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:27:15,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:27:15,647][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 12
Lang Goal: put the brown blocks in a yellow bowl
Total Reward: 1.000 | Done: True

Mean: 0.9024390243902439 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 42/50
[2025-02-09 01:29:23,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:29:23,871][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:29:23,891][root][INFO] - Image embeddings computed.
[2025-02-09 01:29:41,533][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:29:41,539][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:29:41,559][root][INFO] - Image embeddings computed.
[2025-02-09 01:29:45,728][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:29:45,731][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:29:45,751][root][INFO] - Image embeddings computed.
[2025-02-09 01:29:49,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:29:49,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:29:49,984][root][INFO] - Image embeddings computed.
[2025-02-09 01:29:54,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:29:54,166][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:29:54,186][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 16
Lang Goal: put the blue blocks in a green bowl
Total Reward: 1.000 | Done: True

Mean: 0.9047619047619048 | Task: put-block-in-bowl-seen-colors | Ckpt: steps=00200-val_loss=0.00012113.ckpt
Test: 43/50
[2025-02-09 01:32:04,317][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:32:04,327][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:32:04,347][root][INFO] - Image embeddings computed.
[2025-02-09 01:32:21,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:32:21,079][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:32:21,099][root][INFO] - Image embeddings computed.
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
slurmstepd: error: *** STEP 995923.0 ON gpu001 CANCELLED AT 2025-02-09T01:32:24 DUE TO TIME LIMIT ***
slurmstepd: error: *** JOB 995923 ON gpu001 CANCELLED AT 2025-02-09T01:32:24 DUE TO TIME LIMIT ***
