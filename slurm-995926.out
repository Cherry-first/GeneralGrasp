pybullet build time: Nov 28 2023 23:45:17
Save path for results: /home/a/acw799/cliport/exps_clipfit/packing-boxes-pairs-seen-colors-clipfit-n10-train/checkpoints/
Evaluating: ['steps=00040-val_loss=0.00021667.ckpt', 'steps=00080-val_loss=0.00020901.ckpt', 'steps=00120-val_loss=0.00021188.ckpt', 'steps=00160-val_loss=0.00018994.ckpt', 'steps=00200-val_loss=0.00019973.ckpt']
[2025-02-08 13:54:00,221][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:54:00,729][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:54:07,742][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Attn FCN: conceptfusion_sam2
[2025-02-08 13:54:34,825][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:54:34,980][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:54:41,857][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
[2025-02-08 13:54:50,715][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:54:50,868][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:54:57,439][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Transport FCN: <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2'>, <class 'cliport.models.conceptfusion_sam2.conceptfusion_sam2_kernel'>
[2025-02-08 13:55:06,592][root][INFO] - Loaded checkpoint sucessfully
[2025-02-08 13:55:06,746][root][INFO] - Loaded ViT-H-14 model config.
[2025-02-08 13:55:13,227][root][INFO] - Loading pretrained ViT-H-14 weights (laion2b_s32b_b79k).
Agent: packing-boxes-pairs-seen-colors-clipfit-n50, Logging: False
Loaded: /home/a/acw799/cliport/exps_clipfit/packing-boxes-pairs-seen-colors-clipfit-n10-train/checkpoints/steps=00040-val_loss=0.00021667.ckpt
Test: 1/50
[2025-02-08 13:56:00,252][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:00,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:01,036][root][INFO] - Image embeddings computed.
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Memory efficient kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:723.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Memory Efficient attention has been runtime disabled. (Triggered internally at ../aten/src/ATen/native/transformers/sdp_utils_cpp.h:495.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Flash attention kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:725.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: Expected query, key and value to all be of dtype: {Half, BFloat16}. Got Query dtype: float, Key dtype: float, and Value dtype: float instead. (Triggered internally at ../aten/src/ATen/native/transformers/sdp_utils_cpp.h:98.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: CuDNN attention kernel not used because: (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:727.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/gpfs/home/a/acw799/sam2/sam2/modeling/sam/transformer.py:271: UserWarning: The CuDNN backend needs to be enabled by setting the enviornment variable`TORCH_CUDNN_SDPA_ENABLED=1` (Triggered internally at ../aten/src/ATen/native/transformers/cuda/sdp_utils.cpp:496.)
  out = F.scaled_dot_product_attention(q, k, v, dropout_p=dropout_p)
/home/a/acw799/.local/lib/python3.10/site-packages/torch/nn/modules/module.py:1562: UserWarning: Flash Attention kernel failed due to: No available kernel. Aborting execution.
Falling back to all available kernels for scaled_dot_product_attention (which may have a slower speed).
  return forward_call(*args, **kwargs)
[2025-02-08 13:56:18,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:18,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:18,286][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:22,418][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:22,518][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:22,538][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:26,652][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:26,766][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:26,786][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:30,926][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:31,033][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:31,053][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 29
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 13:56:42,366][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:42,374][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:42,407][root][INFO] - Image embeddings computed.
[2025-02-08 13:56:59,050][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:56:59,058][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:56:59,077][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:03,245][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:03,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:03,272][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:07,430][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:07,436][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:07,455][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:11,617][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:11,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:11,644][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 30
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 13:57:28,605][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:28,702][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:28,722][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:45,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:45,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:45,536][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:49,716][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:49,724][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:49,744][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:53,922][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:53,925][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:53,945][root][INFO] - Image embeddings computed.
[2025-02-08 13:57:58,114][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:57:58,117][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:57:58,137][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 30
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.195 | Done: False

[2025-02-08 13:58:08,146][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:08,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:08,174][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:24,786][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:24,793][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:24,813][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:29,014][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:29,020][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:29,039][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:33,213][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:33,218][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:33,237][root][INFO] - Image embeddings computed.
[2025-02-08 13:58:37,423][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:37,438][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:37,457][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.195 | Done: False

[2025-02-08 13:58:47,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:58:47,351][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:58:47,371][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:03,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:03,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:03,967][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:08,170][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:08,186][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:08,206][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:12,402][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:12,425][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:12,445][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:16,639][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:16,646][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:16,666][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 24
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.290 | Done: False

[2025-02-08 13:59:26,916][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:26,924][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:26,944][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:43,519][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:43,526][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:43,546][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:47,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:47,770][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:47,790][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:51,999][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:52,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:52,026][root][INFO] - Image embeddings computed.
[2025-02-08 13:59:56,231][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 13:59:56,238][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 13:59:56,258][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 30
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.290 | Done: False

[2025-02-08 14:00:12,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:12,226][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:12,247][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:28,827][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:28,834][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:28,853][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:33,056][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:33,064][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:33,083][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:37,295][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:37,302][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:37,322][root][INFO] - Image embeddings computed.
[2025-02-08 14:00:41,512][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:41,520][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:41,540][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 24
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.290 | Done: False

[2025-02-08 14:00:52,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:00:52,166][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:00:52,186][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:08,825][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:08,833][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:08,853][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:13,058][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:13,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:13,085][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:17,309][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:17,317][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:17,337][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:21,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:21,549][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:21,568][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 29
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.195 | Done: False

[2025-02-08 14:01:39,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:39,320][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:39,340][root][INFO] - Image embeddings computed.
[2025-02-08 14:01:56,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:01:56,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:01:56,182][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:00,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:00,508][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:00,533][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:04,715][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:04,811][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:04,831][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:09,019][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:09,116][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:09,136][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 31
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.195 | Done: False

[2025-02-08 14:02:22,804][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:22,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:22,832][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:39,452][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:39,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:39,481][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:43,710][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:43,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:43,738][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:47,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:47,933][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:47,953][root][INFO] - Image embeddings computed.
[2025-02-08 14:02:52,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:02:52,160][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:02:52,180][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 21
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.195 | Done: False

[2025-02-08 14:03:03,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:03,699][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:03,719][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:20,351][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:20,359][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:20,379][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:24,582][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:24,590][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:24,610][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:28,807][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:28,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:28,833][root][INFO] - Image embeddings computed.
[2025-02-08 14:03:33,039][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:33,042][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:33,062][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 26
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.299 | Done: False

[2025-02-08 14:03:52,191][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:03:52,293][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:03:52,313][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:08,884][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:08,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:09,006][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:13,193][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:13,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:13,309][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:17,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:17,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:17,626][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:21,818][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:21,921][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:21,941][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 25
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.299 | Done: False

[2025-02-08 14:04:39,368][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:39,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:39,396][root][INFO] - Image embeddings computed.
[2025-02-08 14:04:55,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:04:55,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:04:55,929][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:00,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:00,120][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:00,140][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:04,328][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:04,336][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:04,356][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:08,544][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:08,547][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:08,567][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 30
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.299 | Done: False

[2025-02-08 14:05:26,535][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:26,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:26,664][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:43,245][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:43,341][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:43,361][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:47,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:47,632][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:47,652][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:51,836][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:51,933][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:51,953][root][INFO] - Image embeddings computed.
[2025-02-08 14:05:56,134][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:05:56,230][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:05:56,250][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 27
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.299 | Done: False

[2025-02-08 14:06:12,681][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:12,689][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:12,709][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:29,190][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:29,196][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:29,216][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:33,398][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:33,403][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:33,423][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:37,609][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:37,617][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:37,636][root][INFO] - Image embeddings computed.
[2025-02-08 14:06:41,817][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:41,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:41,845][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 25
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.299 | Done: False

[2025-02-08 14:06:54,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:06:54,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:06:54,728][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:11,234][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:11,241][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:11,261][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:15,446][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:15,454][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:15,473][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:19,663][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:19,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:19,689][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:23,876][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:23,883][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:23,903][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 28
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.299 | Done: False

[2025-02-08 14:07:37,175][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:37,183][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:37,203][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:53,718][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:53,726][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:53,746][root][INFO] - Image embeddings computed.
[2025-02-08 14:07:57,934][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:07:57,941][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:07:57,960][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:02,150][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:02,157][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:02,177][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:06,363][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:06,372][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:06,392][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 24
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.299 | Done: False

[2025-02-08 14:08:21,614][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:21,621][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:21,641][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:38,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:38,171][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:38,191][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:42,372][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:42,375][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:42,395][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:46,584][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:46,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:46,617][root][INFO] - Image embeddings computed.
[2025-02-08 14:08:50,805][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:08:50,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:08:50,833][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 27
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.299 | Done: False

[2025-02-08 14:09:09,292][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:09,303][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:09,323][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:25,804][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:25,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:25,831][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:30,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:30,015][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:30,035][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:34,220][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:34,228][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:34,248][root][INFO] - Image embeddings computed.
[2025-02-08 14:09:38,428][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:38,439][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:38,458][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 25
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.299 | Done: False

[2025-02-08 14:09:53,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:09:53,171][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:09:53,191][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:09,695][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:09,703][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:09,723][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:13,900][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:13,908][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:13,928][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:18,117][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:18,124][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:18,144][root][INFO] - Image embeddings computed.
[2025-02-08 14:10:22,329][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:22,337][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:22,357][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 27
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.299 | Done: False

Mean: 0.2987012987012987 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 2/50
[2025-02-08 14:10:48,625][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:10:48,631][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:10:48,651][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:05,544][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:05,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:05,572][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:09,746][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:09,753][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:09,773][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:14,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:14,008][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:14,028][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:18,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:18,238][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:18,258][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:11:32,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:32,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:32,617][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:49,467][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:49,476][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:49,495][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:53,668][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:53,675][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:53,695][root][INFO] - Image embeddings computed.
[2025-02-08 14:11:57,920][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:11:57,925][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:11:57,945][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:02,160][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:02,165][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:02,185][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:12:16,962][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:16,969][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:16,990][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:33,861][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:33,878][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:33,898][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:38,073][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:38,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:38,100][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:42,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:42,340][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:42,360][root][INFO] - Image embeddings computed.
[2025-02-08 14:12:46,573][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:12:46,581][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:12:46,601][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:13:01,793][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:01,802][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:01,822][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:18,703][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:18,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:18,732][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:22,910][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:22,919][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:22,939][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:27,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:27,177][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:27,197][root][INFO] - Image embeddings computed.
[2025-02-08 14:13:31,411][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:31,446][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:31,466][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:13:46,639][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:13:46,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:13:46,667][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:03,552][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:03,560][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:03,580][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:07,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:07,770][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:07,790][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:12,020][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:12,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:12,050][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:16,262][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:16,270][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:16,290][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 26
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:14:31,772][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:31,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:31,798][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:48,673][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:48,681][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:48,701][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:52,874][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:52,881][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:52,901][root][INFO] - Image embeddings computed.
[2025-02-08 14:14:57,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:14:57,134][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:14:57,154][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:01,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:01,375][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:01,395][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 26
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:15:17,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:17,157][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:17,177][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:34,047][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:34,054][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:34,074][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:38,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:38,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:38,279][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:42,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:42,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:42,531][root][INFO] - Image embeddings computed.
[2025-02-08 14:15:46,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:15:46,752][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:15:46,772][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:16:05,292][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:05,386][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:05,406][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:22,259][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:22,372][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:22,392][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:26,564][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:26,662][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:26,682][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:30,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:31,004][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:31,024][root][INFO] - Image embeddings computed.
[2025-02-08 14:16:35,233][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:35,330][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:35,367][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 26
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:16:51,915][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:16:51,924][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:16:51,944][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:08,806][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:08,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:08,845][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:13,021][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:13,024][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:13,044][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:17,271][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:17,279][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:17,298][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:21,514][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:21,522][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:21,541][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:17:37,995][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:38,003][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:38,043][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:54,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:54,913][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:54,933][root][INFO] - Image embeddings computed.
[2025-02-08 14:17:59,114][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:17:59,117][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:17:59,137][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:03,364][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:03,372][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:03,392][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:07,609][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:07,617][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:07,637][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 26
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:18:24,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:24,427][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:24,447][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:41,319][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:41,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:41,358][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:45,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:45,539][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:45,559][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:49,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:49,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:49,812][root][INFO] - Image embeddings computed.
[2025-02-08 14:18:54,027][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:18:54,035][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:18:54,055][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 27
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:19:15,129][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:15,245][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:15,270][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:32,097][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:32,204][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:32,225][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:36,396][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:36,492][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:36,512][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:40,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:40,828][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:40,848][root][INFO] - Image embeddings computed.
[2025-02-08 14:19:45,056][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:19:45,169][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:19:45,193][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:20:04,056][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:04,064][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:04,085][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:20,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:20,928][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:20,948][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:25,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:25,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:25,141][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:29,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:29,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:29,387][root][INFO] - Image embeddings computed.
[2025-02-08 14:20:33,594][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:33,603][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:33,623][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:20:57,891][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:20:57,994][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:20:58,014][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:14,814][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:14,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:14,932][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:19,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:19,188][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:19,208][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:23,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:23,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:23,535][root][INFO] - Image embeddings computed.
[2025-02-08 14:21:27,735][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:27,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:27,851][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:21:52,519][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:21:52,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:21:52,636][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:09,429][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:09,525][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:09,545][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:13,705][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:13,833][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:13,853][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:18,062][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:18,177][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:18,197][root][INFO] - Image embeddings computed.
[2025-02-08 14:22:22,397][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:22,491][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:22,511][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:22:47,426][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:22:47,523][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:22:47,543][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:04,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:04,434][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:04,454][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:08,618][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:08,713][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:08,734][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:12,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:13,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:13,054][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:17,256][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:17,354][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:17,375][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 26
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:23:36,019][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:36,027][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:36,047][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:52,877][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:52,884][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:52,904][root][INFO] - Image embeddings computed.
[2025-02-08 14:23:57,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:23:57,089][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:23:57,109][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:01,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:01,335][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:01,355][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:05,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:05,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:05,581][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 27
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:24:24,482][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:24,490][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:24,510][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:41,342][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:41,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:41,372][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:45,540][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:45,548][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:45,568][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:49,786][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:49,793][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:49,813][root][INFO] - Image embeddings computed.
[2025-02-08 14:24:54,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:24:54,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:24:54,054][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 26
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:25:19,453][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:19,460][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:19,480][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:36,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:36,294][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:36,313][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:40,480][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:40,488][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:40,508][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:44,721][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:44,728][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:44,748][root][INFO] - Image embeddings computed.
[2025-02-08 14:25:48,951][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:25:48,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:25:48,979][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 27
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:26:08,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:08,226][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:08,245][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:25,067][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:25,074][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:25,094][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:29,260][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:29,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:29,287][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:33,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:33,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:33,529][root][INFO] - Image embeddings computed.
[2025-02-08 14:26:37,735][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:26:37,749][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:26:37,769][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 26
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

Mean: 0.14935064935064934 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 3/50
[2025-02-08 14:27:02,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:02,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:02,182][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:18,968][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:18,975][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:18,995][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:23,175][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:23,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:23,202][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:27,345][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:27,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:27,372][root][INFO] - Image embeddings computed.
[2025-02-08 14:27:31,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:31,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:31,566][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 18
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.308 | Done: False

[2025-02-08 14:27:51,883][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:27:51,892][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:27:51,912][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:08,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:08,431][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:08,450][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:12,625][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:12,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:12,653][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:16,797][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:16,805][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:16,824][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:21,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:21,012][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:21,050][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 19
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.308 | Done: False

[2025-02-08 14:28:41,056][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:41,064][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:41,084][root][INFO] - Image embeddings computed.
[2025-02-08 14:28:57,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:28:57,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:28:57,672][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:01,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:01,860][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:01,880][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:06,027][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:06,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:06,054][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:10,245][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:10,253][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:10,273][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 22
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.308 | Done: False

[2025-02-08 14:29:30,577][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:30,585][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:30,604][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:47,174][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:47,181][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:47,202][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:51,373][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:51,381][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:51,401][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:55,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:55,574][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:55,594][root][INFO] - Image embeddings computed.
[2025-02-08 14:29:59,778][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:29:59,785][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:29:59,805][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 23
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:30:24,609][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:24,617][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:24,638][root][INFO] - Image embeddings computed.
[2025-02-08 14:30:41,089][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:41,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:41,118][root][INFO] - Image embeddings computed.
[2025-02-08 14:30:45,260][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:45,268][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:45,288][root][INFO] - Image embeddings computed.
[2025-02-08 14:30:49,443][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:49,453][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:49,493][root][INFO] - Image embeddings computed.
[2025-02-08 14:30:53,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:30:53,678][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:30:53,698][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 20
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:31:14,366][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:14,372][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:14,392][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:30,867][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:30,875][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:30,895][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:35,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:35,069][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:35,089][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:39,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:39,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:39,280][root][INFO] - Image embeddings computed.
[2025-02-08 14:31:43,459][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:31:43,472][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:31:43,491][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 21
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:32:04,361][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:04,369][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:04,423][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:20,915][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:20,923][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:20,943][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:25,107][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:25,114][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:25,134][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:29,291][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:29,299][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:29,319][root][INFO] - Image embeddings computed.
[2025-02-08 14:32:33,501][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:33,522][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:33,542][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 21
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:32:55,439][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:32:55,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:32:55,468][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:11,949][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:11,956][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:11,976][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:16,146][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:16,153][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:16,186][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:20,346][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:20,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:20,372][root][INFO] - Image embeddings computed.
[2025-02-08 14:33:24,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:24,559][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:24,578][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 21
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:33:49,937][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:33:50,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:33:50,066][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:06,531][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:06,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:06,647][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:10,810][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:10,928][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:10,949][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:15,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:15,209][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:15,229][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:19,395][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:19,490][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:19,510][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 20
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:34:41,491][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:41,497][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:41,517][root][INFO] - Image embeddings computed.
[2025-02-08 14:34:57,988][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:34:57,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:34:58,016][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:02,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:02,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:02,211][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:06,369][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:06,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:06,396][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:10,572][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:10,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:10,599][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 20
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:35:33,472][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:33,477][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:33,497][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:49,971][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:49,979][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:49,998][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:54,165][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:54,172][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:54,192][root][INFO] - Image embeddings computed.
[2025-02-08 14:35:58,346][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:35:58,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:35:58,373][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:02,540][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:02,548][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:02,568][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 19
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:36:24,989][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:24,996][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:25,017][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:41,486][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:41,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:41,513][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:45,680][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:45,688][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:45,708][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:49,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:49,870][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:49,890][root][INFO] - Image embeddings computed.
[2025-02-08 14:36:54,060][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:36:54,067][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:36:54,087][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 21
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:37:16,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:16,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:16,613][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:33,070][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:33,076][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:33,096][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:37,260][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:37,268][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:37,288][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:41,435][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:41,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:41,464][root][INFO] - Image embeddings computed.
[2025-02-08 14:37:45,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:37:45,645][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:37:45,665][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 22
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:38:08,468][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:08,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:08,496][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:24,958][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:24,966][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:24,986][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:29,151][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:29,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:29,179][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:33,338][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:33,345][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:33,365][root][INFO] - Image embeddings computed.
[2025-02-08 14:38:37,538][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:38:37,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:38:37,565][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 21
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:39:00,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:00,553][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:00,573][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:17,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:17,039][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:17,059][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:21,221][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:21,228][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:21,248][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:25,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:25,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:25,434][root][INFO] - Image embeddings computed.
[2025-02-08 14:39:29,604][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:29,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:29,640][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 22
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:39:59,287][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:39:59,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:39:59,409][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:15,837][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:15,949][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:15,969][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:20,126][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:20,229][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:20,249][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:24,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:24,497][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:24,517][root][INFO] - Image embeddings computed.
[2025-02-08 14:40:28,684][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:28,781][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:28,801][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 20
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:40:58,279][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:40:58,375][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:40:58,396][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:14,905][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:15,002][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:15,022][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:19,177][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:19,275][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:19,295][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:23,450][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:23,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:23,564][root][INFO] - Image embeddings computed.
[2025-02-08 14:41:27,730][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:27,829][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:27,849][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 20
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:41:55,494][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:41:55,502][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:41:55,523][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:11,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:11,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:11,967][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:16,126][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:16,131][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:16,151][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:20,303][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:20,308][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:20,328][root][INFO] - Image embeddings computed.
[2025-02-08 14:42:24,493][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:24,501][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:24,520][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 20
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:42:48,461][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:42:48,466][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:42:48,486][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:04,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:04,924][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:04,944][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:09,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:09,106][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:09,126][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:13,282][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:13,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:13,309][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:17,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:17,483][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:17,503][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 20
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

[2025-02-08 14:43:41,735][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:41,742][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:41,762][root][INFO] - Image embeddings computed.
[2025-02-08 14:43:58,205][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:43:58,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:43:58,234][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:02,398][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:02,406][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:02,425][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:06,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:06,591][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:06,610][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:10,780][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:10,783][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:10,803][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 22
Lang Goal: pack all the green and cyan blocks into the brown box
Total Reward: 0.482 | Done: False

Mean: 0.26025086025086025 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 4/50
[2025-02-08 14:44:40,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:40,645][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:40,665][root][INFO] - Image embeddings computed.
[2025-02-08 14:44:57,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:44:57,158][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:44:57,178][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:01,360][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:01,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:01,388][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:05,550][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:05,553][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:05,573][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:09,765][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:09,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:09,793][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 21
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:45:35,566][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:35,574][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:35,594][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:52,004][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:52,012][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:52,032][root][INFO] - Image embeddings computed.
[2025-02-08 14:45:56,190][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:45:56,195][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:45:56,215][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:00,369][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:00,372][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:00,392][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:04,561][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:04,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:04,589][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 29
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 14:46:30,211][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:30,220][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:30,240][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:46,651][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:46,660][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:46,680][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:50,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:50,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:50,883][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:55,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:55,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:55,065][root][INFO] - Image embeddings computed.
[2025-02-08 14:46:59,255][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:46:59,259][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:46:59,279][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:47:25,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:25,036][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:25,056][root][INFO] - Image embeddings computed.
[2025-02-08 14:47:41,658][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:41,668][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:41,688][root][INFO] - Image embeddings computed.
[2025-02-08 14:47:45,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:45,865][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:45,885][root][INFO] - Image embeddings computed.
[2025-02-08 14:47:50,042][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:50,050][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:50,070][root][INFO] - Image embeddings computed.
[2025-02-08 14:47:54,251][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:47:54,253][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:47:54,273][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 24
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:48:19,948][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:19,956][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:19,976][root][INFO] - Image embeddings computed.
[2025-02-08 14:48:36,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:36,390][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:36,409][root][INFO] - Image embeddings computed.
[2025-02-08 14:48:40,575][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:40,583][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:40,603][root][INFO] - Image embeddings computed.
[2025-02-08 14:48:44,751][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:44,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:44,774][root][INFO] - Image embeddings computed.
[2025-02-08 14:48:48,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:48:48,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:48:48,984][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 26
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:49:14,963][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:14,968][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:14,988][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:31,398][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:31,406][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:31,426][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:35,594][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:35,601][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:35,621][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:39,780][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:39,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:39,807][root][INFO] - Image embeddings computed.
[2025-02-08 14:49:43,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:49:43,994][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:49:44,014][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 25
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:50:10,310][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:10,316][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:10,336][root][INFO] - Image embeddings computed.
[2025-02-08 14:50:26,716][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:26,723][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:26,743][root][INFO] - Image embeddings computed.
[2025-02-08 14:50:30,916][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:30,924][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:30,944][root][INFO] - Image embeddings computed.
[2025-02-08 14:50:35,116][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:35,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:35,139][root][INFO] - Image embeddings computed.
[2025-02-08 14:50:39,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:50:39,330][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:50:39,350][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 22
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:51:12,216][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:12,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:12,333][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:28,667][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:28,763][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:28,783][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:32,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:33,033][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:33,053][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:37,214][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:37,305][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:37,325][root][INFO] - Image embeddings computed.
[2025-02-08 14:51:41,516][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:51:41,608][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:51:41,628][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:52:13,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:13,885][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:13,910][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:30,373][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:30,470][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:30,490][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:34,649][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:34,735][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:34,755][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:38,893][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:38,985][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:39,005][root][INFO] - Image embeddings computed.
[2025-02-08 14:52:43,180][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:52:43,272][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:52:43,292][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 26
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:53:17,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:17,537][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:17,557][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:33,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:33,984][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:34,004][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:38,164][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:38,255][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:38,275][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:42,429][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:42,531][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:42,551][root][INFO] - Image embeddings computed.
[2025-02-08 14:53:46,728][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:53:46,862][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:53:46,882][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 22
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:54:15,958][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:15,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:15,985][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:32,314][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:32,322][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:32,342][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:36,496][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:36,503][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:36,522][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:40,686][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:40,689][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:40,709][root][INFO] - Image embeddings computed.
[2025-02-08 14:54:44,900][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:54:44,908][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:54:44,928][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:55:17,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:17,082][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:17,102][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:33,484][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:33,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:33,509][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:37,672][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:37,679][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:37,699][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:41,845][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:41,853][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:41,873][root][INFO] - Image embeddings computed.
[2025-02-08 14:55:46,053][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:55:46,060][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:55:46,080][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 25
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:56:14,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:56:14,180][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:56:14,219][root][INFO] - Image embeddings computed.
[2025-02-08 14:56:30,582][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:56:30,590][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:56:30,609][root][INFO] - Image embeddings computed.
[2025-02-08 14:56:34,775][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:56:34,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:56:34,798][root][INFO] - Image embeddings computed.
[2025-02-08 14:56:38,959][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:56:38,967][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:56:38,987][root][INFO] - Image embeddings computed.
[2025-02-08 14:56:43,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:56:43,177][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:56:43,197][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 22
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:57:11,725][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:57:11,738][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:57:11,758][root][INFO] - Image embeddings computed.
[2025-02-08 14:57:28,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:57:28,110][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:57:28,130][root][INFO] - Image embeddings computed.
[2025-02-08 14:57:32,283][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:57:32,285][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:57:32,305][root][INFO] - Image embeddings computed.
[2025-02-08 14:57:36,468][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:57:36,471][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:57:36,491][root][INFO] - Image embeddings computed.
[2025-02-08 14:57:40,684][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:57:40,693][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:57:40,713][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:58:10,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:10,015][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:10,035][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:26,422][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:26,430][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:26,450][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:30,612][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:30,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:30,638][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:34,780][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:34,783][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:34,803][root][INFO] - Image embeddings computed.
[2025-02-08 14:58:38,984][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:58:38,992][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:58:39,011][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 26
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 14:59:12,974][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:12,981][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:13,002][root][INFO] - Image embeddings computed.
[2025-02-08 14:59:29,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:29,365][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:29,385][root][INFO] - Image embeddings computed.
[2025-02-08 14:59:33,548][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:33,556][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:33,576][root][INFO] - Image embeddings computed.
[2025-02-08 14:59:37,732][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:37,735][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:37,755][root][INFO] - Image embeddings computed.
[2025-02-08 14:59:41,929][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 14:59:41,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 14:59:41,956][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 22
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 15:00:10,848][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:00:10,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:00:10,877][root][INFO] - Image embeddings computed.
[2025-02-08 15:00:27,208][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:00:27,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:00:27,235][root][INFO] - Image embeddings computed.
[2025-02-08 15:00:31,391][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:00:31,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:00:31,416][root][INFO] - Image embeddings computed.
[2025-02-08 15:00:35,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:00:35,584][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:00:35,604][root][INFO] - Image embeddings computed.
[2025-02-08 15:00:39,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:00:39,809][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:00:39,829][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 15:01:09,888][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:09,906][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:09,926][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:26,310][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:26,315][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:26,335][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:30,497][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:30,504][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:30,524][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:34,675][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:34,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:34,701][root][INFO] - Image embeddings computed.
[2025-02-08 15:01:38,883][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:01:38,889][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:01:38,909][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 25
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 15:02:08,746][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:08,753][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:08,773][root][INFO] - Image embeddings computed.
[2025-02-08 15:02:25,142][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:25,147][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:25,167][root][INFO] - Image embeddings computed.
[2025-02-08 15:02:29,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:29,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:29,362][root][INFO] - Image embeddings computed.
[2025-02-08 15:02:33,521][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:33,528][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:33,548][root][INFO] - Image embeddings computed.
[2025-02-08 15:02:37,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:02:37,745][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:02:37,765][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 22
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 15:03:07,505][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:07,513][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:07,533][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:23,881][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:23,886][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:23,906][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:28,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:28,068][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:28,088][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:32,253][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:32,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:32,280][root][INFO] - Image embeddings computed.
[2025-02-08 15:03:36,473][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:03:36,476][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:03:36,496][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: pack all the red and gray blocks into the brown box
Total Reward: 0.250 | Done: False

Mean: 0.2576881451881452 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 5/50
[2025-02-08 15:04:11,015][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:11,023][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:11,043][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:27,415][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:27,420][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:27,440][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:31,599][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:31,603][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:31,623][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:35,798][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:35,806][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:35,826][root][INFO] - Image embeddings computed.
[2025-02-08 15:04:39,975][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:04:39,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:04:40,003][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 21
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:05:10,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:05:10,886][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:05:10,906][root][INFO] - Image embeddings computed.
[2025-02-08 15:05:27,374][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:05:27,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:05:27,400][root][INFO] - Image embeddings computed.
[2025-02-08 15:05:31,535][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:05:31,538][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:05:31,558][root][INFO] - Image embeddings computed.
[2025-02-08 15:05:35,729][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:05:35,737][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:05:35,757][root][INFO] - Image embeddings computed.
[2025-02-08 15:05:39,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:05:39,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:05:39,931][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 20
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:06:14,207][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:14,213][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:14,233][root][INFO] - Image embeddings computed.
[2025-02-08 15:06:30,608][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:30,614][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:30,634][root][INFO] - Image embeddings computed.
[2025-02-08 15:06:34,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:34,766][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:34,786][root][INFO] - Image embeddings computed.
[2025-02-08 15:06:38,964][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:38,982][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:39,002][root][INFO] - Image embeddings computed.
[2025-02-08 15:06:43,137][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:06:43,139][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:06:43,159][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 21
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:07:14,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:14,275][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:14,295][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:30,606][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:30,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:30,631][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:34,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:34,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:34,788][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:38,979][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:38,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:39,006][root][INFO] - Image embeddings computed.
[2025-02-08 15:07:43,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:07:43,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:07:43,176][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 21
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:08:14,364][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:14,373][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:14,393][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:31,045][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:31,052][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:31,072][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:35,198][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:35,206][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:35,226][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:39,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:39,413][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:39,433][root][INFO] - Image embeddings computed.
[2025-02-08 15:08:43,582][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:08:43,585][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:08:43,604][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 19
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:09:15,208][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:15,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:15,236][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:31,916][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:31,943][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:31,963][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:36,101][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:36,109][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:36,129][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:40,294][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:40,302][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:40,322][root][INFO] - Image embeddings computed.
[2025-02-08 15:09:44,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:09:44,449][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:09:44,469][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 21
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:10:16,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:16,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:16,309][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:32,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:32,769][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:32,788][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:36,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:36,949][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:36,969][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:41,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:41,167][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:41,187][root][INFO] - Image embeddings computed.
[2025-02-08 15:10:45,328][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:10:45,335][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:10:45,355][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:11:17,377][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:17,385][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:17,405][root][INFO] - Image embeddings computed.
[2025-02-08 15:11:33,838][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:33,843][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:33,863][root][INFO] - Image embeddings computed.
[2025-02-08 15:11:38,000][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:38,005][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:38,025][root][INFO] - Image embeddings computed.
[2025-02-08 15:11:42,219][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:42,227][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:42,247][root][INFO] - Image embeddings computed.
[2025-02-08 15:11:46,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:11:46,408][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:11:46,428][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:12:18,499][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:18,507][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:18,527][root][INFO] - Image embeddings computed.
[2025-02-08 15:12:35,089][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:35,094][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:35,114][root][INFO] - Image embeddings computed.
[2025-02-08 15:12:39,278][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:39,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:39,301][root][INFO] - Image embeddings computed.
[2025-02-08 15:12:43,471][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:43,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:43,589][root][INFO] - Image embeddings computed.
[2025-02-08 15:12:47,718][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:12:47,818][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:12:47,838][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:13:27,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:27,160][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:27,180][root][INFO] - Image embeddings computed.
[2025-02-08 15:13:43,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:43,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:43,684][root][INFO] - Image embeddings computed.
[2025-02-08 15:13:47,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:47,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:47,832][root][INFO] - Image embeddings computed.
[2025-02-08 15:13:52,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:52,030][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:52,050][root][INFO] - Image embeddings computed.
[2025-02-08 15:13:56,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:13:56,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:13:56,179][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 19
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:14:28,879][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:28,887][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:28,907][root][INFO] - Image embeddings computed.
[2025-02-08 15:14:45,481][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:45,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:45,508][root][INFO] - Image embeddings computed.
[2025-02-08 15:14:49,651][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:49,654][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:49,674][root][INFO] - Image embeddings computed.
[2025-02-08 15:14:53,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:53,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:53,862][root][INFO] - Image embeddings computed.
[2025-02-08 15:14:57,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:14:57,999][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:14:58,019][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 25
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:15:31,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:31,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:31,372][root][INFO] - Image embeddings computed.
[2025-02-08 15:15:48,087][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:48,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:48,112][root][INFO] - Image embeddings computed.
[2025-02-08 15:15:52,237][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:52,240][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:52,260][root][INFO] - Image embeddings computed.
[2025-02-08 15:15:56,453][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:15:56,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:15:56,476][root][INFO] - Image embeddings computed.
[2025-02-08 15:16:00,587][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:00,595][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:00,614][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 21
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:16:33,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:33,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:33,958][root][INFO] - Image embeddings computed.
[2025-02-08 15:16:50,275][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:50,282][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:50,302][root][INFO] - Image embeddings computed.
[2025-02-08 15:16:54,450][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:54,458][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:54,477][root][INFO] - Image embeddings computed.
[2025-02-08 15:16:58,663][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:16:58,669][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:16:58,689][root][INFO] - Image embeddings computed.
[2025-02-08 15:17:02,798][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:17:02,806][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:17:02,826][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 20
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:17:36,832][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:17:36,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:17:36,862][root][INFO] - Image embeddings computed.
[2025-02-08 15:17:53,129][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:17:53,135][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:17:53,155][root][INFO] - Image embeddings computed.
[2025-02-08 15:17:57,319][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:17:57,322][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:17:57,341][root][INFO] - Image embeddings computed.
[2025-02-08 15:18:01,521][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:01,528][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:01,548][root][INFO] - Image embeddings computed.
[2025-02-08 15:18:05,685][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:05,693][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:05,713][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 18
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:18:40,226][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:40,234][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:40,254][root][INFO] - Image embeddings computed.
[2025-02-08 15:18:56,592][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:18:56,600][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:18:56,620][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:00,791][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:00,793][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:00,813][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:04,971][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:04,974][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:04,994][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:09,116][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:09,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:09,139][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 20
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:19:43,358][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:43,366][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:43,386][root][INFO] - Image embeddings computed.
[2025-02-08 15:19:59,646][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:19:59,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:19:59,672][root][INFO] - Image embeddings computed.
[2025-02-08 15:20:03,831][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:03,834][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:03,854][root][INFO] - Image embeddings computed.
[2025-02-08 15:20:08,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:08,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:08,041][root][INFO] - Image embeddings computed.
[2025-02-08 15:20:12,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:12,166][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:12,186][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 18
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:20:47,601][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:20:47,609][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:20:47,629][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:03,963][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:03,968][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:03,988][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:08,138][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:08,141][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:08,160][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:12,316][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:12,319][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:12,339][root][INFO] - Image embeddings computed.
[2025-02-08 15:21:16,459][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:16,462][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:16,482][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:21:55,384][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:21:55,392][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:21:55,412][root][INFO] - Image embeddings computed.
[2025-02-08 15:22:11,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:22:11,696][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:22:11,716][root][INFO] - Image embeddings computed.
[2025-02-08 15:22:15,859][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:22:15,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:22:15,883][root][INFO] - Image embeddings computed.
[2025-02-08 15:22:20,035][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:22:20,037][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:22:20,057][root][INFO] - Image embeddings computed.
[2025-02-08 15:22:24,175][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:22:24,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:22:24,199][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:22:59,046][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:22:59,054][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:22:59,075][root][INFO] - Image embeddings computed.
[2025-02-08 15:23:15,391][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:23:15,399][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:23:15,419][root][INFO] - Image embeddings computed.
[2025-02-08 15:23:19,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:23:19,571][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:23:19,591][root][INFO] - Image embeddings computed.
[2025-02-08 15:23:23,760][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:23:23,763][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:23:23,783][root][INFO] - Image embeddings computed.
[2025-02-08 15:23:27,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:23:27,917][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:23:27,937][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 15
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 15:24:03,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:03,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:03,556][root][INFO] - Image embeddings computed.
[2025-02-08 15:24:19,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:19,913][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:19,932][root][INFO] - Image embeddings computed.
[2025-02-08 15:24:24,087][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:24,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:24,110][root][INFO] - Image embeddings computed.
[2025-02-08 15:24:28,281][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:28,284][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:28,304][root][INFO] - Image embeddings computed.
[2025-02-08 15:24:32,406][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:24:32,409][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:24:32,428][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 15
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

Mean: 0.20615051615051616 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 6/50
[2025-02-08 15:25:15,246][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:15,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:15,272][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:31,640][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:31,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:31,667][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:35,805][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:35,808][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:35,828][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:39,961][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:39,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:39,984][root][INFO] - Image embeddings computed.
[2025-02-08 15:25:44,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:25:44,139][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:25:44,159][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 14
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:26:19,885][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:19,893][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:19,913][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:36,160][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:36,167][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:36,187][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:40,329][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:40,336][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:40,356][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:44,486][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:44,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:44,509][root][INFO] - Image embeddings computed.
[2025-02-08 15:26:48,669][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:26:48,671][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:26:48,691][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 15
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:27:29,268][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:29,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:29,400][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:45,699][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:45,799][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:45,819][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:49,945][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:50,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:50,065][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:54,187][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:54,283][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:54,303][root][INFO] - Image embeddings computed.
[2025-02-08 15:27:58,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:27:58,548][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:27:58,573][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:28:39,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:28:39,366][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:28:39,387][root][INFO] - Image embeddings computed.
[2025-02-08 15:28:55,673][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:28:55,681][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:28:55,701][root][INFO] - Image embeddings computed.
[2025-02-08 15:28:59,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:28:59,839][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:28:59,859][root][INFO] - Image embeddings computed.
[2025-02-08 15:29:03,978][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:29:03,983][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:29:04,003][root][INFO] - Image embeddings computed.
[2025-02-08 15:29:08,167][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:29:08,175][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:29:08,195][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:29:44,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:29:44,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:29:44,367][root][INFO] - Image embeddings computed.
[2025-02-08 15:30:00,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:00,646][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:00,666][root][INFO] - Image embeddings computed.
[2025-02-08 15:30:04,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:04,804][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:04,824][root][INFO] - Image embeddings computed.
[2025-02-08 15:30:08,947][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:08,955][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:08,975][root][INFO] - Image embeddings computed.
[2025-02-08 15:30:13,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:13,148][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:13,168][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:30:49,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:30:49,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:30:49,710][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:05,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:06,015][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:06,034][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:10,169][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:10,177][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:10,196][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:14,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:14,331][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:14,351][root][INFO] - Image embeddings computed.
[2025-02-08 15:31:18,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:18,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:18,538][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:31:55,341][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:31:55,355][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:31:55,375][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:11,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:11,678][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:11,698][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:15,829][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:15,836][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:15,856][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:19,978][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:19,981][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:20,001][root][INFO] - Image embeddings computed.
[2025-02-08 15:32:24,165][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:32:24,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:32:24,188][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:33:02,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:02,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:02,374][root][INFO] - Image embeddings computed.
[2025-02-08 15:33:18,614][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:18,631][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:18,650][root][INFO] - Image embeddings computed.
[2025-02-08 15:33:22,786][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:22,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:22,808][root][INFO] - Image embeddings computed.
[2025-02-08 15:33:26,928][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:26,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:26,957][root][INFO] - Image embeddings computed.
[2025-02-08 15:33:31,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:33:31,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:33:31,141][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:34:12,831][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:34:12,839][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:34:12,860][root][INFO] - Image embeddings computed.
[2025-02-08 15:34:29,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:34:29,106][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:34:29,126][root][INFO] - Image embeddings computed.
[2025-02-08 15:34:33,263][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:34:33,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:34:33,287][root][INFO] - Image embeddings computed.
[2025-02-08 15:34:37,409][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:34:37,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:34:37,520][root][INFO] - Image embeddings computed.
[2025-02-08 15:34:41,679][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:34:41,789][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:34:41,809][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 18
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:35:24,097][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:24,104][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:24,124][root][INFO] - Image embeddings computed.
[2025-02-08 15:35:40,420][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:40,425][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:40,445][root][INFO] - Image embeddings computed.
[2025-02-08 15:35:44,577][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:44,580][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:44,600][root][INFO] - Image embeddings computed.
[2025-02-08 15:35:48,718][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:48,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:48,741][root][INFO] - Image embeddings computed.
[2025-02-08 15:35:52,898][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:35:52,905][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:35:52,924][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:36:31,446][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:31,455][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:31,475][root][INFO] - Image embeddings computed.
[2025-02-08 15:36:47,699][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:47,704][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:47,724][root][INFO] - Image embeddings computed.
[2025-02-08 15:36:51,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:51,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:51,878][root][INFO] - Image embeddings computed.
[2025-02-08 15:36:55,997][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:36:56,000][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:36:56,020][root][INFO] - Image embeddings computed.
[2025-02-08 15:37:00,182][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:00,201][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:00,221][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:37:38,550][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:38,558][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:38,578][root][INFO] - Image embeddings computed.
[2025-02-08 15:37:54,821][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:54,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:54,846][root][INFO] - Image embeddings computed.
[2025-02-08 15:37:58,983][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:37:58,986][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:37:59,006][root][INFO] - Image embeddings computed.
[2025-02-08 15:38:03,128][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:38:03,130][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:38:03,150][root][INFO] - Image embeddings computed.
[2025-02-08 15:38:07,309][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:38:07,316][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:38:07,336][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:38:46,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:38:46,288][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:38:46,308][root][INFO] - Image embeddings computed.
[2025-02-08 15:39:02,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:02,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:02,566][root][INFO] - Image embeddings computed.
[2025-02-08 15:39:06,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:06,705][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:06,725][root][INFO] - Image embeddings computed.
[2025-02-08 15:39:10,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:10,852][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:10,871][root][INFO] - Image embeddings computed.
[2025-02-08 15:39:15,029][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:15,039][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:15,059][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:39:53,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:39:53,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:39:53,888][root][INFO] - Image embeddings computed.
[2025-02-08 15:40:10,113][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:40:10,133][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:40:10,153][root][INFO] - Image embeddings computed.
[2025-02-08 15:40:14,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:40:14,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:40:14,307][root][INFO] - Image embeddings computed.
[2025-02-08 15:40:18,424][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:40:18,439][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:40:18,459][root][INFO] - Image embeddings computed.
[2025-02-08 15:40:22,612][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:40:22,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:40:22,640][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 17
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:41:01,869][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:01,875][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:01,895][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:18,113][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:18,122][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:18,142][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:22,274][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:22,277][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:22,297][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:26,415][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:26,417][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:26,437][root][INFO] - Image embeddings computed.
[2025-02-08 15:41:30,594][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:41:30,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:41:30,616][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:42:10,273][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:10,279][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:10,299][root][INFO] - Image embeddings computed.
[2025-02-08 15:42:26,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:26,518][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:26,538][root][INFO] - Image embeddings computed.
[2025-02-08 15:42:30,667][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:30,674][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:30,694][root][INFO] - Image embeddings computed.
[2025-02-08 15:42:34,821][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:34,828][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:34,847][root][INFO] - Image embeddings computed.
[2025-02-08 15:42:39,007][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:42:39,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:42:39,030][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:43:21,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:21,833][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:21,854][root][INFO] - Image embeddings computed.
[2025-02-08 15:43:38,065][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:38,071][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:38,091][root][INFO] - Image embeddings computed.
[2025-02-08 15:43:42,219][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:42,227][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:42,247][root][INFO] - Image embeddings computed.
[2025-02-08 15:43:46,370][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:46,377][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:46,397][root][INFO] - Image embeddings computed.
[2025-02-08 15:43:50,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:43:50,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:43:50,581][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 15
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:44:30,229][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:44:30,246][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:44:30,266][root][INFO] - Image embeddings computed.
[2025-02-08 15:44:46,486][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:44:46,494][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:44:46,514][root][INFO] - Image embeddings computed.
[2025-02-08 15:44:50,647][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:44:50,655][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:44:50,675][root][INFO] - Image embeddings computed.
[2025-02-08 15:44:54,800][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:44:54,803][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:44:54,823][root][INFO] - Image embeddings computed.
[2025-02-08 15:44:58,982][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:44:58,994][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:44:59,014][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:45:43,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:43,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:43,683][root][INFO] - Image embeddings computed.
[2025-02-08 15:45:59,880][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:45:59,888][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:45:59,908][root][INFO] - Image embeddings computed.
[2025-02-08 15:46:04,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:04,034][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:04,054][root][INFO] - Image embeddings computed.
[2025-02-08 15:46:08,172][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:08,175][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:08,195][root][INFO] - Image embeddings computed.
[2025-02-08 15:46:12,349][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:12,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:12,372][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 15
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

[2025-02-08 15:46:52,502][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:46:52,508][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:46:52,528][root][INFO] - Image embeddings computed.
[2025-02-08 15:47:08,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:47:08,733][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:47:08,753][root][INFO] - Image embeddings computed.
[2025-02-08 15:47:12,876][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:47:12,879][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:47:12,899][root][INFO] - Image embeddings computed.
[2025-02-08 15:47:17,020][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:47:17,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:47:17,046][root][INFO] - Image embeddings computed.
[2025-02-08 15:47:21,201][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:47:21,292][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:47:21,312][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan blocks into the brown box
Total Reward: 0.833 | Done: False

Mean: 0.31068098568098573 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 7/50
[2025-02-08 15:48:10,253][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:10,261][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:10,282][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:26,927][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:26,933][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:26,953][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:31,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:31,171][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:31,190][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:35,349][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:35,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:35,372][root][INFO] - Image embeddings computed.
[2025-02-08 15:48:39,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:48:39,551][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:48:39,571][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 20
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 15:49:20,872][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:49:20,882][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:49:20,902][root][INFO] - Image embeddings computed.
[2025-02-08 15:49:37,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:49:37,326][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:49:37,346][root][INFO] - Image embeddings computed.
[2025-02-08 15:49:41,572][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:49:41,575][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:49:41,595][root][INFO] - Image embeddings computed.
[2025-02-08 15:49:45,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:49:45,753][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:49:45,773][root][INFO] - Image embeddings computed.
[2025-02-08 15:49:49,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:49:49,948][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:49:49,985][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 15:50:36,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:36,244][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:36,269][root][INFO] - Image embeddings computed.
[2025-02-08 15:50:52,697][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:52,794][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:52,814][root][INFO] - Image embeddings computed.
[2025-02-08 15:50:57,015][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:50:57,111][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:50:57,131][root][INFO] - Image embeddings computed.
[2025-02-08 15:51:01,295][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:51:01,393][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:51:01,413][root][INFO] - Image embeddings computed.
[2025-02-08 15:51:05,567][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:51:05,658][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:51:05,679][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 22
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 15:51:48,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:51:48,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:51:48,387][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:04,795][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:04,801][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:04,820][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:09,017][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:09,020][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:09,040][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:13,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:13,214][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:13,234][root][INFO] - Image embeddings computed.
[2025-02-08 15:52:17,389][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:17,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:17,415][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 22
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 15:52:59,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:52:59,076][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:52:59,096][root][INFO] - Image embeddings computed.
[2025-02-08 15:53:15,536][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:53:15,546][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:53:15,566][root][INFO] - Image embeddings computed.
[2025-02-08 15:53:19,767][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:53:19,770][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:53:19,790][root][INFO] - Image embeddings computed.
[2025-02-08 15:53:23,959][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:53:23,962][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:53:23,982][root][INFO] - Image embeddings computed.
[2025-02-08 15:53:28,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:53:28,153][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:53:28,172][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 21
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 15:54:10,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:54:10,294][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:54:10,314][root][INFO] - Image embeddings computed.
[2025-02-08 15:54:26,735][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:54:26,740][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:54:26,760][root][INFO] - Image embeddings computed.
[2025-02-08 15:54:30,962][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:54:31,053][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:54:31,073][root][INFO] - Image embeddings computed.
[2025-02-08 15:54:35,240][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:54:35,332][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:54:35,352][root][INFO] - Image embeddings computed.
[2025-02-08 15:54:39,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:54:39,614][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:54:39,639][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 22
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 15:55:22,435][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:22,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:22,463][root][INFO] - Image embeddings computed.
[2025-02-08 15:55:38,900][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:38,906][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:38,925][root][INFO] - Image embeddings computed.
[2025-02-08 15:55:43,126][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:43,129][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:43,149][root][INFO] - Image embeddings computed.
[2025-02-08 15:55:47,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:47,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:47,344][root][INFO] - Image embeddings computed.
[2025-02-08 15:55:51,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:55:51,513][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:55:51,533][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 15:56:34,010][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:34,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:34,038][root][INFO] - Image embeddings computed.
[2025-02-08 15:56:50,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:50,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:50,488][root][INFO] - Image embeddings computed.
[2025-02-08 15:56:54,685][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:54,691][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:54,711][root][INFO] - Image embeddings computed.
[2025-02-08 15:56:58,879][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:56:58,883][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:56:58,903][root][INFO] - Image embeddings computed.
[2025-02-08 15:57:03,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:57:03,068][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:57:03,088][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 15:57:45,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:57:45,919][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:57:45,939][root][INFO] - Image embeddings computed.
[2025-02-08 15:58:02,370][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:58:02,375][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:58:02,395][root][INFO] - Image embeddings computed.
[2025-02-08 15:58:06,599][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:58:06,602][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:58:06,622][root][INFO] - Image embeddings computed.
[2025-02-08 15:58:10,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:58:10,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:58:10,812][root][INFO] - Image embeddings computed.
[2025-02-08 15:58:14,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:58:14,974][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:58:14,994][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 21
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 15:58:58,075][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:58:58,087][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:58:58,107][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:14,543][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:14,550][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:14,570][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:18,774][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:18,781][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:18,801][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:22,975][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:23,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:23,084][root][INFO] - Image embeddings computed.
[2025-02-08 15:59:27,245][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 15:59:27,336][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 15:59:27,356][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 21
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 16:00:15,274][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:15,282][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:15,302][root][INFO] - Image embeddings computed.
[2025-02-08 16:00:31,706][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:31,714][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:31,734][root][INFO] - Image embeddings computed.
[2025-02-08 16:00:35,937][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:35,940][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:35,960][root][INFO] - Image embeddings computed.
[2025-02-08 16:00:40,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:40,139][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:40,159][root][INFO] - Image embeddings computed.
[2025-02-08 16:00:44,316][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:00:44,334][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:00:44,353][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 21
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 16:01:27,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:27,840][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:27,861][root][INFO] - Image embeddings computed.
[2025-02-08 16:01:44,302][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:44,310][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:44,329][root][INFO] - Image embeddings computed.
[2025-02-08 16:01:48,529][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:48,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:48,556][root][INFO] - Image embeddings computed.
[2025-02-08 16:01:52,727][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:52,732][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:52,752][root][INFO] - Image embeddings computed.
[2025-02-08 16:01:56,909][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:01:56,916][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:01:56,936][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 22
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 16:02:40,832][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:02:40,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:02:40,866][root][INFO] - Image embeddings computed.
[2025-02-08 16:02:57,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:02:57,286][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:02:57,305][root][INFO] - Image embeddings computed.
[2025-02-08 16:03:01,507][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:01,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:01,530][root][INFO] - Image embeddings computed.
[2025-02-08 16:03:05,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:05,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:05,728][root][INFO] - Image embeddings computed.
[2025-02-08 16:03:09,886][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:09,893][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:09,913][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 22
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 16:03:58,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:03:58,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:03:58,255][root][INFO] - Image embeddings computed.
[2025-02-08 16:04:14,689][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:14,695][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:14,715][root][INFO] - Image embeddings computed.
[2025-02-08 16:04:18,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:18,917][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:18,937][root][INFO] - Image embeddings computed.
[2025-02-08 16:04:23,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:23,116][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:23,136][root][INFO] - Image embeddings computed.
[2025-02-08 16:04:27,291][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:04:27,299][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:04:27,319][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 16:05:11,659][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:11,665][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:11,685][root][INFO] - Image embeddings computed.
[2025-02-08 16:05:28,110][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:28,118][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:28,138][root][INFO] - Image embeddings computed.
[2025-02-08 16:05:32,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:32,343][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:32,363][root][INFO] - Image embeddings computed.
[2025-02-08 16:05:36,535][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:36,538][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:36,557][root][INFO] - Image embeddings computed.
[2025-02-08 16:05:40,718][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:05:40,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:05:40,741][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 22
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 16:06:25,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:06:25,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:06:25,373][root][INFO] - Image embeddings computed.
[2025-02-08 16:06:41,792][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:06:41,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:06:41,815][root][INFO] - Image embeddings computed.
[2025-02-08 16:06:46,014][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:06:46,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:06:46,037][root][INFO] - Image embeddings computed.
[2025-02-08 16:06:50,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:06:50,209][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:06:50,229][root][INFO] - Image embeddings computed.
[2025-02-08 16:06:54,392][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:06:54,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:06:54,415][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 16:07:43,203][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:07:43,300][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:07:43,320][root][INFO] - Image embeddings computed.
[2025-02-08 16:07:59,756][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:07:59,849][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:07:59,869][root][INFO] - Image embeddings computed.
[2025-02-08 16:08:04,065][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:08:04,157][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:08:04,177][root][INFO] - Image embeddings computed.
[2025-02-08 16:08:08,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:08:08,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:08:08,455][root][INFO] - Image embeddings computed.
[2025-02-08 16:08:12,613][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:08:12,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:08:12,642][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 21
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 16:08:57,948][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:08:57,956][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:08:57,976][root][INFO] - Image embeddings computed.
[2025-02-08 16:09:14,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:09:14,410][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:09:14,430][root][INFO] - Image embeddings computed.
[2025-02-08 16:09:18,632][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:09:18,635][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:09:18,655][root][INFO] - Image embeddings computed.
[2025-02-08 16:09:22,826][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:09:22,829][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:09:22,849][root][INFO] - Image embeddings computed.
[2025-02-08 16:09:27,007][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:09:27,016][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:09:27,036][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 22
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 16:10:12,410][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:12,419][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:12,439][root][INFO] - Image embeddings computed.
[2025-02-08 16:10:28,875][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:28,882][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:28,903][root][INFO] - Image embeddings computed.
[2025-02-08 16:10:33,105][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:33,110][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:33,130][root][INFO] - Image embeddings computed.
[2025-02-08 16:10:37,302][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:37,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:37,327][root][INFO] - Image embeddings computed.
[2025-02-08 16:10:41,486][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:10:41,494][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:10:41,514][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 21
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

[2025-02-08 16:11:28,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:28,560][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:28,580][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:44,996][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:45,004][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:45,023][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:49,225][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:49,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:49,253][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:53,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:53,427][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:53,446][root][INFO] - Image embeddings computed.
[2025-02-08 16:11:57,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:11:57,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:11:57,632][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 22
Lang Goal: pack all the brown and cyan blocks into the brown box
Total Reward: 0.455 | Done: False

Mean: 0.3312330526616241 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 8/50
[2025-02-08 16:12:48,948][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:12:48,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:12:48,974][root][INFO] - Image embeddings computed.
[2025-02-08 16:13:05,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:05,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:05,572][root][INFO] - Image embeddings computed.
[2025-02-08 16:13:09,698][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:09,705][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:09,725][root][INFO] - Image embeddings computed.
[2025-02-08 16:13:13,892][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:13,898][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:13,917][root][INFO] - Image embeddings computed.
[2025-02-08 16:13:18,086][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:13:18,093][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:13:18,112][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 19
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:14:04,633][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:04,639][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:04,659][root][INFO] - Image embeddings computed.
[2025-02-08 16:14:20,994][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:20,999][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:21,019][root][INFO] - Image embeddings computed.
[2025-02-08 16:14:25,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:25,164][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:25,185][root][INFO] - Image embeddings computed.
[2025-02-08 16:14:29,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:29,342][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:29,361][root][INFO] - Image embeddings computed.
[2025-02-08 16:14:33,532][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:14:33,540][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:14:33,560][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 21
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:15:24,688][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:24,696][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:24,716][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:41,089][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:41,097][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:41,117][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:45,257][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:45,264][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:45,284][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:49,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:49,449][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:49,469][root][INFO] - Image embeddings computed.
[2025-02-08 16:15:53,644][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:15:53,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:15:53,672][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 18
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:16:45,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:16:46,033][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:16:46,053][root][INFO] - Image embeddings computed.
[2025-02-08 16:17:02,424][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:17:02,567][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:17:02,587][root][INFO] - Image embeddings computed.
[2025-02-08 16:17:06,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:17:06,804][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:17:06,825][root][INFO] - Image embeddings computed.
[2025-02-08 16:17:10,982][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:17:11,078][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:17:11,098][root][INFO] - Image embeddings computed.
[2025-02-08 16:17:15,270][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:17:15,400][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:17:15,420][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:18:08,024][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:08,128][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:08,148][root][INFO] - Image embeddings computed.
[2025-02-08 16:18:24,751][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:24,865][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:24,885][root][INFO] - Image embeddings computed.
[2025-02-08 16:18:29,090][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:29,199][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:29,224][root][INFO] - Image embeddings computed.
[2025-02-08 16:18:33,377][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:33,473][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:33,493][root][INFO] - Image embeddings computed.
[2025-02-08 16:18:37,665][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:18:37,761][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:18:37,781][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 17
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:19:25,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:25,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:25,883][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:42,181][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:42,189][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:42,210][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:46,329][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:46,336][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:46,356][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:50,496][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:50,501][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:50,521][root][INFO] - Image embeddings computed.
[2025-02-08 16:19:54,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:19:54,696][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:19:54,716][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 14
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:20:42,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:20:42,631][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:20:42,651][root][INFO] - Image embeddings computed.
[2025-02-08 16:20:58,927][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:20:58,936][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:20:58,956][root][INFO] - Image embeddings computed.
[2025-02-08 16:21:03,071][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:21:03,079][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:21:03,099][root][INFO] - Image embeddings computed.
[2025-02-08 16:21:07,249][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:21:07,257][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:21:07,277][root][INFO] - Image embeddings computed.
[2025-02-08 16:21:11,454][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:21:11,462][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:21:11,482][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 15
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:21:59,490][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:21:59,496][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:21:59,516][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:15,826][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:15,833][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:15,853][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:19,987][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:19,993][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:20,013][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:24,174][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:24,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:24,202][root][INFO] - Image embeddings computed.
[2025-02-08 16:22:28,371][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:22:28,379][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:22:28,399][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:23:17,203][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:17,209][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:17,229][root][INFO] - Image embeddings computed.
[2025-02-08 16:23:33,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:33,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:33,626][root][INFO] - Image embeddings computed.
[2025-02-08 16:23:37,778][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:37,785][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:37,805][root][INFO] - Image embeddings computed.
[2025-02-08 16:23:41,961][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:41,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:41,984][root][INFO] - Image embeddings computed.
[2025-02-08 16:23:46,160][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:23:46,163][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:23:46,183][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 18
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:24:34,484][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:24:34,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:24:34,509][root][INFO] - Image embeddings computed.
[2025-02-08 16:24:50,769][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:24:50,779][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:24:50,799][root][INFO] - Image embeddings computed.
[2025-02-08 16:24:54,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:24:54,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:24:54,947][root][INFO] - Image embeddings computed.
[2025-02-08 16:24:59,101][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:24:59,105][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:24:59,125][root][INFO] - Image embeddings computed.
[2025-02-08 16:25:03,303][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:25:03,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:25:03,326][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 11
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:25:52,274][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:25:52,279][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:25:52,299][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:08,548][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:08,551][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:08,571][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:12,694][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:12,701][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:12,721][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:16,874][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:16,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:16,897][root][INFO] - Image embeddings computed.
[2025-02-08 16:26:21,079][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:26:21,086][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:26:21,106][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 14
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:27:14,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:27:14,621][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:27:14,641][root][INFO] - Image embeddings computed.
[2025-02-08 16:27:30,929][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:27:30,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:27:30,957][root][INFO] - Image embeddings computed.
[2025-02-08 16:27:35,079][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:27:35,082][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:27:35,102][root][INFO] - Image embeddings computed.
[2025-02-08 16:27:39,251][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:27:39,258][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:27:39,278][root][INFO] - Image embeddings computed.
[2025-02-08 16:27:43,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:27:43,459][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:27:43,479][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 18
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:28:33,046][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:28:33,052][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:28:33,072][root][INFO] - Image embeddings computed.
[2025-02-08 16:28:49,378][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:28:49,385][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:28:49,405][root][INFO] - Image embeddings computed.
[2025-02-08 16:28:53,526][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:28:53,529][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:28:53,549][root][INFO] - Image embeddings computed.
[2025-02-08 16:28:57,701][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:28:57,705][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:28:57,725][root][INFO] - Image embeddings computed.
[2025-02-08 16:29:01,903][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:29:01,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:29:01,930][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:29:55,084][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:29:55,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:29:55,110][root][INFO] - Image embeddings computed.
[2025-02-08 16:30:11,353][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:30:11,361][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:30:11,381][root][INFO] - Image embeddings computed.
[2025-02-08 16:30:15,502][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:30:15,505][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:30:15,525][root][INFO] - Image embeddings computed.
[2025-02-08 16:30:19,677][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:30:19,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:30:19,713][root][INFO] - Image embeddings computed.
[2025-02-08 16:30:23,885][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:30:23,892][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:30:23,912][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 13
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:31:13,737][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:13,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:13,764][root][INFO] - Image embeddings computed.
[2025-02-08 16:31:29,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:30,000][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:30,020][root][INFO] - Image embeddings computed.
[2025-02-08 16:31:34,137][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:34,150][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:34,170][root][INFO] - Image embeddings computed.
[2025-02-08 16:31:38,317][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:38,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:38,344][root][INFO] - Image embeddings computed.
[2025-02-08 16:31:42,521][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:31:42,530][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:31:42,550][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 14
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:32:33,372][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:33,387][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:33,407][root][INFO] - Image embeddings computed.
[2025-02-08 16:32:49,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:49,632][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:49,651][root][INFO] - Image embeddings computed.
[2025-02-08 16:32:53,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:53,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:53,793][root][INFO] - Image embeddings computed.
[2025-02-08 16:32:57,947][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:32:57,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:32:57,974][root][INFO] - Image embeddings computed.
[2025-02-08 16:33:02,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:33:02,159][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:33:02,179][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 13
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:33:52,270][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:33:52,279][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:33:52,298][root][INFO] - Image embeddings computed.
[2025-02-08 16:34:08,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:34:08,539][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:34:08,559][root][INFO] - Image embeddings computed.
[2025-02-08 16:34:12,683][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:34:12,686][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:34:12,706][root][INFO] - Image embeddings computed.
[2025-02-08 16:34:16,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:34:16,865][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:34:16,885][root][INFO] - Image embeddings computed.
[2025-02-08 16:34:21,063][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:34:21,071][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:34:21,090][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 13
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:35:11,544][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:35:11,550][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:35:11,570][root][INFO] - Image embeddings computed.
[2025-02-08 16:35:27,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:35:27,797][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:35:27,817][root][INFO] - Image embeddings computed.
[2025-02-08 16:35:31,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:35:31,942][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:35:31,962][root][INFO] - Image embeddings computed.
[2025-02-08 16:35:36,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:35:36,120][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:35:36,140][root][INFO] - Image embeddings computed.
[2025-02-08 16:35:40,316][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:35:40,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:35:40,344][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 13
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:36:32,030][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:32,036][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:32,056][root][INFO] - Image embeddings computed.
[2025-02-08 16:36:48,291][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:48,299][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:48,319][root][INFO] - Image embeddings computed.
[2025-02-08 16:36:52,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:52,445][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:52,465][root][INFO] - Image embeddings computed.
[2025-02-08 16:36:56,619][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:36:56,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:36:56,647][root][INFO] - Image embeddings computed.
[2025-02-08 16:37:00,822][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:37:00,830][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:37:00,849][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

[2025-02-08 16:37:53,265][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:37:53,273][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:37:53,293][root][INFO] - Image embeddings computed.
[2025-02-08 16:38:09,532][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:38:09,540][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:38:09,560][root][INFO] - Image embeddings computed.
[2025-02-08 16:38:13,679][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:38:13,687][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:38:13,707][root][INFO] - Image embeddings computed.
[2025-02-08 16:38:17,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:38:17,865][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:38:17,892][root][INFO] - Image embeddings computed.
[2025-02-08 16:38:22,070][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:38:22,085][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:38:22,120][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 14
Lang Goal: pack all the cyan and gray blocks into the brown box
Total Reward: 0.385 | Done: False

Mean: 0.3379058441558442 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 9/50
[2025-02-08 16:39:18,602][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:18,611][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:18,631][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:35,113][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:35,120][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:35,140][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:39,292][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:39,299][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:39,318][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:43,520][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:43,529][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:43,548][root][INFO] - Image embeddings computed.
[2025-02-08 16:39:47,693][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:39:47,701][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:39:47,721][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 20
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:40:39,649][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:40:39,658][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:40:39,678][root][INFO] - Image embeddings computed.
[2025-02-08 16:40:56,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:40:56,059][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:40:56,079][root][INFO] - Image embeddings computed.
[2025-02-08 16:41:00,214][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:41:00,223][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:41:00,242][root][INFO] - Image embeddings computed.
[2025-02-08 16:41:04,462][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:41:04,470][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:41:04,490][root][INFO] - Image embeddings computed.
[2025-02-08 16:41:08,628][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:41:08,634][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:41:08,654][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 24
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:42:02,604][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:02,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:02,632][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:18,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:18,975][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:18,995][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:23,121][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:23,128][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:23,148][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:27,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:27,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:27,367][root][INFO] - Image embeddings computed.
[2025-02-08 16:42:31,516][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:42:31,524][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:42:31,544][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 17
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:43:23,837][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:23,845][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:23,865][root][INFO] - Image embeddings computed.
[2025-02-08 16:43:40,400][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:40,408][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:40,428][root][INFO] - Image embeddings computed.
[2025-02-08 16:43:44,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:44,563][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:44,583][root][INFO] - Image embeddings computed.
[2025-02-08 16:43:48,804][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:48,811][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:48,832][root][INFO] - Image embeddings computed.
[2025-02-08 16:43:52,985][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:43:52,992][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:43:53,012][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 24
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:44:46,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:44:46,010][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:44:46,031][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:02,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:02,399][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:02,419][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:06,562][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:06,570][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:06,590][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:10,826][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:10,834][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:10,854][root][INFO] - Image embeddings computed.
[2025-02-08 16:45:14,998][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:45:15,005][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:45:15,025][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 19
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:46:08,017][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:08,024][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:08,044][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:24,404][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:24,411][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:24,431][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:28,573][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:28,581][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:28,601][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:32,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:32,841][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:32,861][root][INFO] - Image embeddings computed.
[2025-02-08 16:46:37,007][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:46:37,015][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:46:37,035][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 19
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:47:30,061][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:47:30,070][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:47:30,090][root][INFO] - Image embeddings computed.
[2025-02-08 16:47:46,456][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:47:46,464][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:47:46,489][root][INFO] - Image embeddings computed.
[2025-02-08 16:47:50,636][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:47:50,644][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:47:50,664][root][INFO] - Image embeddings computed.
[2025-02-08 16:47:54,896][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:47:54,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:47:54,923][root][INFO] - Image embeddings computed.
[2025-02-08 16:47:59,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:47:59,081][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:47:59,101][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 19
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:48:52,316][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:48:52,324][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:48:52,344][root][INFO] - Image embeddings computed.
[2025-02-08 16:49:08,715][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:08,722][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:08,742][root][INFO] - Image embeddings computed.
[2025-02-08 16:49:12,891][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:12,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:12,919][root][INFO] - Image embeddings computed.
[2025-02-08 16:49:17,157][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:17,165][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:17,185][root][INFO] - Image embeddings computed.
[2025-02-08 16:49:21,333][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:49:21,341][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:49:21,360][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 19
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:50:15,974][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:50:15,983][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:50:16,003][root][INFO] - Image embeddings computed.
[2025-02-08 16:50:32,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:50:32,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:50:32,387][root][INFO] - Image embeddings computed.
[2025-02-08 16:50:36,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:50:36,551][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:50:36,571][root][INFO] - Image embeddings computed.
[2025-02-08 16:50:40,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:50:40,807][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:50:40,827][root][INFO] - Image embeddings computed.
[2025-02-08 16:50:44,970][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:50:44,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:50:44,997][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 21
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:51:40,239][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:51:40,247][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:51:40,267][root][INFO] - Image embeddings computed.
[2025-02-08 16:51:56,634][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:51:56,642][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:51:56,662][root][INFO] - Image embeddings computed.
[2025-02-08 16:52:00,807][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:52:00,815][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:52:00,835][root][INFO] - Image embeddings computed.
[2025-02-08 16:52:05,070][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:52:05,078][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:52:05,097][root][INFO] - Image embeddings computed.
[2025-02-08 16:52:09,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:52:09,250][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:52:09,270][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 18
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:53:02,982][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:53:02,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:53:03,009][root][INFO] - Image embeddings computed.
[2025-02-08 16:53:19,378][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:53:19,385][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:53:19,405][root][INFO] - Image embeddings computed.
[2025-02-08 16:53:23,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:53:23,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:53:23,581][root][INFO] - Image embeddings computed.
[2025-02-08 16:53:27,817][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:53:27,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:53:27,845][root][INFO] - Image embeddings computed.
[2025-02-08 16:53:31,994][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:53:32,002][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:53:32,021][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 18
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:54:30,275][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:30,283][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:30,303][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:46,664][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:46,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:46,690][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:50,836][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:50,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:50,862][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:55,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:55,106][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:55,126][root][INFO] - Image embeddings computed.
[2025-02-08 16:54:59,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:54:59,270][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:54:59,290][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 19
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:55:54,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:55:54,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:55:54,112][root][INFO] - Image embeddings computed.
[2025-02-08 16:56:10,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:56:10,474][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:56:10,511][root][INFO] - Image embeddings computed.
[2025-02-08 16:56:14,656][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:56:14,659][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:56:14,679][root][INFO] - Image embeddings computed.
[2025-02-08 16:56:18,905][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:56:18,914][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:56:18,934][root][INFO] - Image embeddings computed.
[2025-02-08 16:56:23,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:56:23,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:56:23,100][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 20
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:57:19,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:19,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:19,112][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:35,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:35,482][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:35,502][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:39,649][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:39,652][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:39,672][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:43,910][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:43,918][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:43,938][root][INFO] - Image embeddings computed.
[2025-02-08 16:57:48,081][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:57:48,084][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:57:48,104][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 18
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 16:58:43,464][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:58:43,472][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:58:43,492][root][INFO] - Image embeddings computed.
[2025-02-08 16:58:59,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:58:59,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:58:59,882][root][INFO] - Image embeddings computed.
[2025-02-08 16:59:04,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:59:04,039][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:59:04,058][root][INFO] - Image embeddings computed.
[2025-02-08 16:59:08,298][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:59:08,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:59:08,326][root][INFO] - Image embeddings computed.
[2025-02-08 16:59:12,472][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 16:59:12,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 16:59:12,495][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 18
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 17:00:08,433][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:08,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:08,461][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:24,834][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:24,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:24,862][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:29,007][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:29,012][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:29,032][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:33,264][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:33,272][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:33,292][root][INFO] - Image embeddings computed.
[2025-02-08 17:00:37,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:00:37,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:00:37,461][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 18
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 17:01:38,586][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:38,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:38,717][root][INFO] - Image embeddings computed.
[2025-02-08 17:01:55,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:55,249][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:55,274][root][INFO] - Image embeddings computed.
[2025-02-08 17:01:59,414][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:01:59,516][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:01:59,536][root][INFO] - Image embeddings computed.
[2025-02-08 17:02:03,764][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:02:03,869][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:02:03,889][root][INFO] - Image embeddings computed.
[2025-02-08 17:02:08,031][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:02:08,128][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:02:08,148][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 17:03:09,618][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:09,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:09,647][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:26,005][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:26,013][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:26,033][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:30,175][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:30,183][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:30,203][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:34,443][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:34,451][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:34,471][root][INFO] - Image embeddings computed.
[2025-02-08 17:03:38,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:03:38,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:03:38,642][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 18
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 17:04:37,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:04:37,563][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:04:37,584][root][INFO] - Image embeddings computed.
[2025-02-08 17:04:53,943][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:04:53,951][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:04:53,971][root][INFO] - Image embeddings computed.
[2025-02-08 17:04:58,119][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:04:58,127][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:04:58,147][root][INFO] - Image embeddings computed.
[2025-02-08 17:05:02,379][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:05:02,384][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:05:02,404][root][INFO] - Image embeddings computed.
[2025-02-08 17:05:06,549][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:05:06,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:05:06,574][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 20
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

[2025-02-08 17:06:03,204][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:03,212][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:03,232][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:19,597][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:19,605][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:19,624][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:23,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:23,777][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:23,797][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:28,038][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:28,046][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:28,066][root][INFO] - Image embeddings computed.
[2025-02-08 17:06:32,213][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:06:32,220][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:06:32,240][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 21
Lang Goal: pack all the green and blue blocks into the brown box
Total Reward: 0.278 | Done: False

Mean: 0.33122494789161455 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 10/50
[2025-02-08 17:07:33,630][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:07:33,636][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:07:33,656][root][INFO] - Image embeddings computed.
[2025-02-08 17:07:50,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:07:50,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:07:50,127][root][INFO] - Image embeddings computed.
[2025-02-08 17:07:54,273][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:07:54,276][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:07:54,296][root][INFO] - Image embeddings computed.
[2025-02-08 17:07:58,436][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:07:58,439][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:07:58,459][root][INFO] - Image embeddings computed.
[2025-02-08 17:08:02,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:08:02,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:08:02,626][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 15
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:08:59,741][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:08:59,746][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:08:59,766][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:16,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:16,111][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:16,131][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:20,320][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:20,328][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:20,348][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:24,498][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:24,501][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:24,521][root][INFO] - Image embeddings computed.
[2025-02-08 17:09:28,674][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:09:28,681][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:09:28,701][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 23
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:10:26,557][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:10:26,562][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:10:26,582][root][INFO] - Image embeddings computed.
[2025-02-08 17:10:42,919][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:10:42,930][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:10:42,950][root][INFO] - Image embeddings computed.
[2025-02-08 17:10:47,119][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:10:47,122][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:10:47,142][root][INFO] - Image embeddings computed.
[2025-02-08 17:10:51,282][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:10:51,285][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:10:51,306][root][INFO] - Image embeddings computed.
[2025-02-08 17:10:55,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:10:55,465][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:10:55,485][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 16
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:11:55,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:11:55,807][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:11:55,827][root][INFO] - Image embeddings computed.
[2025-02-08 17:12:12,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:12,093][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:12,113][root][INFO] - Image embeddings computed.
[2025-02-08 17:12:16,278][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:16,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:16,301][root][INFO] - Image embeddings computed.
[2025-02-08 17:12:20,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:20,440][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:20,460][root][INFO] - Image embeddings computed.
[2025-02-08 17:12:24,602][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:12:24,609][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:12:24,629][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 14
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:13:22,155][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:13:22,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:13:22,182][root][INFO] - Image embeddings computed.
[2025-02-08 17:13:38,462][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:13:38,470][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:13:38,489][root][INFO] - Image embeddings computed.
[2025-02-08 17:13:42,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:13:42,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:13:42,647][root][INFO] - Image embeddings computed.
[2025-02-08 17:13:46,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:13:46,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:13:46,812][root][INFO] - Image embeddings computed.
[2025-02-08 17:13:50,952][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:13:50,960][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:13:50,980][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 15
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:14:51,710][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:14:51,725][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:14:51,745][root][INFO] - Image embeddings computed.
[2025-02-08 17:15:08,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:15:08,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:15:08,036][root][INFO] - Image embeddings computed.
[2025-02-08 17:15:12,186][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:15:12,189][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:15:12,209][root][INFO] - Image embeddings computed.
[2025-02-08 17:15:16,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:15:16,333][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:15:16,353][root][INFO] - Image embeddings computed.
[2025-02-08 17:15:20,501][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:15:20,509][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:15:20,529][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:16:18,750][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:16:18,758][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:16:18,778][root][INFO] - Image embeddings computed.
[2025-02-08 17:16:35,034][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:16:35,043][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:16:35,063][root][INFO] - Image embeddings computed.
[2025-02-08 17:16:39,220][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:16:39,223][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:16:39,243][root][INFO] - Image embeddings computed.
[2025-02-08 17:16:43,373][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:16:43,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:16:43,396][root][INFO] - Image embeddings computed.
[2025-02-08 17:16:47,550][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:16:47,553][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:16:47,573][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 15
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:17:45,734][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:17:45,743][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:17:45,763][root][INFO] - Image embeddings computed.
[2025-02-08 17:18:02,018][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:18:02,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:18:02,046][root][INFO] - Image embeddings computed.
[2025-02-08 17:18:06,179][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:18:06,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:18:06,202][root][INFO] - Image embeddings computed.
[2025-02-08 17:18:10,336][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:18:10,339][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:18:10,359][root][INFO] - Image embeddings computed.
[2025-02-08 17:18:14,499][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:18:14,502][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:18:14,522][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:19:16,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:16,241][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:16,261][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:32,546][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:32,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:32,572][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:36,733][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:36,736][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:36,756][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:40,893][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:40,896][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:40,916][root][INFO] - Image embeddings computed.
[2025-02-08 17:19:45,041][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:19:45,044][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:19:45,064][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 22
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:20:43,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:20:43,898][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:20:43,918][root][INFO] - Image embeddings computed.
[2025-02-08 17:21:00,177][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:21:00,184][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:21:00,204][root][INFO] - Image embeddings computed.
[2025-02-08 17:21:04,377][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:21:04,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:21:04,400][root][INFO] - Image embeddings computed.
[2025-02-08 17:21:08,538][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:21:08,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:21:08,561][root][INFO] - Image embeddings computed.
[2025-02-08 17:21:12,721][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:21:12,724][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:21:12,744][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 23
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:22:11,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:11,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:11,888][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:28,275][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:28,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:28,301][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:32,471][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:32,478][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:32,499][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:36,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:36,644][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:36,664][root][INFO] - Image embeddings computed.
[2025-02-08 17:22:40,843][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:22:40,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:22:40,866][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 28
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:23:47,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:23:47,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:23:47,974][root][INFO] - Image embeddings computed.
[2025-02-08 17:24:04,406][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:24:04,503][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:24:04,523][root][INFO] - Image embeddings computed.
[2025-02-08 17:24:08,696][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:24:08,789][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:24:08,810][root][INFO] - Image embeddings computed.
[2025-02-08 17:24:12,947][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:24:13,041][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:24:13,061][root][INFO] - Image embeddings computed.
[2025-02-08 17:24:17,199][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:24:17,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:24:17,326][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 19
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:25:20,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:20,829][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:20,849][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:37,162][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:37,171][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:37,190][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:41,370][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:41,377][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:41,397][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:45,537][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:45,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:45,564][root][INFO] - Image embeddings computed.
[2025-02-08 17:25:49,719][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:25:49,728][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:25:49,748][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 18
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:26:55,149][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:26:55,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:26:55,272][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:11,615][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:11,716][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:11,736][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:15,916][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:16,016][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:16,036][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:20,170][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:20,282][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:20,302][root][INFO] - Image embeddings computed.
[2025-02-08 17:27:24,443][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:27:24,541][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:27:24,567][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 19
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:28:30,771][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:30,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:30,889][root][INFO] - Image embeddings computed.
[2025-02-08 17:28:47,370][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:47,466][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:47,486][root][INFO] - Image embeddings computed.
[2025-02-08 17:28:51,653][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:51,762][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:51,783][root][INFO] - Image embeddings computed.
[2025-02-08 17:28:55,916][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:28:56,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:28:56,042][root][INFO] - Image embeddings computed.
[2025-02-08 17:29:00,210][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:29:00,304][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:29:00,324][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 28
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:30:02,526][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:02,535][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:02,555][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:18,870][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:18,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:18,897][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:23,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:23,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:23,118][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:27,252][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:27,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:27,280][root][INFO] - Image embeddings computed.
[2025-02-08 17:30:31,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:30:31,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:30:31,435][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:31:32,370][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:31:32,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:31:32,396][root][INFO] - Image embeddings computed.
[2025-02-08 17:31:48,811][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:31:48,818][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:31:48,838][root][INFO] - Image embeddings computed.
[2025-02-08 17:31:53,014][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:31:53,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:31:53,041][root][INFO] - Image embeddings computed.
[2025-02-08 17:31:57,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:31:57,190][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:31:57,210][root][INFO] - Image embeddings computed.
[2025-02-08 17:32:01,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:32:01,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:32:01,409][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 28
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:33:02,890][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:02,897][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:02,917][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:19,245][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:19,251][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:19,271][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:23,460][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:23,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:23,487][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:27,623][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:27,634][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:27,654][root][INFO] - Image embeddings computed.
[2025-02-08 17:33:31,785][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:33:31,793][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:33:31,813][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 17
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:34:33,194][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:34:33,199][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:34:33,219][root][INFO] - Image embeddings computed.
[2025-02-08 17:34:49,642][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:34:49,649][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:34:49,669][root][INFO] - Image embeddings computed.
[2025-02-08 17:34:53,838][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:34:53,846][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:34:53,866][root][INFO] - Image embeddings computed.
[2025-02-08 17:34:58,011][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:34:58,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:34:58,038][root][INFO] - Image embeddings computed.
[2025-02-08 17:35:02,216][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:35:02,223][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:35:02,243][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 28
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

[2025-02-08 17:36:09,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:09,557][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:09,577][root][INFO] - Image embeddings computed.
[2025-02-08 17:36:25,886][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:25,894][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:25,914][root][INFO] - Image embeddings computed.
[2025-02-08 17:36:30,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:30,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:30,135][root][INFO] - Image embeddings computed.
[2025-02-08 17:36:34,268][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:34,274][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:34,294][root][INFO] - Image embeddings computed.
[2025-02-08 17:36:38,424][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:36:38,430][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:36:38,450][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: pack all the green and gray blocks into the brown box
Total Reward: 0.417 | Done: False

Mean: 0.3397691197691198 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 11/50
[2025-02-08 17:37:44,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:37:44,686][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:37:44,707][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:00,994][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:01,001][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:01,021][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:05,162][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:05,170][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:05,190][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:09,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:09,351][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:09,371][root][INFO] - Image embeddings computed.
[2025-02-08 17:38:13,525][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:38:13,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:38:13,565][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.407 | Done: False

[2025-02-08 17:39:20,187][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:39:20,195][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:39:20,215][root][INFO] - Image embeddings computed.
[2025-02-08 17:39:36,852][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:39:36,858][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:39:36,877][root][INFO] - Image embeddings computed.
[2025-02-08 17:39:40,984][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:39:40,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:39:41,009][root][INFO] - Image embeddings computed.
[2025-02-08 17:39:45,150][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:39:45,158][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:39:45,177][root][INFO] - Image embeddings computed.
[2025-02-08 17:39:49,314][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:39:49,319][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:39:49,339][root][INFO] - Image embeddings computed.
The number of original masks: 27
The number of filtered masks: 20
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.407 | Done: False

[2025-02-08 17:40:51,943][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:40:51,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:40:51,974][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:08,627][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:08,635][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:08,655][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:12,752][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:12,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:12,780][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:16,928][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:16,936][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:16,956][root][INFO] - Image embeddings computed.
[2025-02-08 17:41:21,095][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:41:21,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:41:21,123][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 19
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.407 | Done: False

[2025-02-08 17:42:24,789][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:42:24,797][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:42:24,817][root][INFO] - Image embeddings computed.
[2025-02-08 17:42:41,391][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:42:41,414][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:42:41,434][root][INFO] - Image embeddings computed.
[2025-02-08 17:42:45,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:42:45,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:42:45,617][root][INFO] - Image embeddings computed.
[2025-02-08 17:42:49,753][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:42:49,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:42:49,780][root][INFO] - Image embeddings computed.
[2025-02-08 17:42:53,913][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:42:53,921][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:42:53,941][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 18
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 17:43:57,192][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:43:57,200][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:43:57,220][root][INFO] - Image embeddings computed.
[2025-02-08 17:44:13,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:44:13,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:44:13,530][root][INFO] - Image embeddings computed.
[2025-02-08 17:44:17,614][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:44:17,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:44:17,642][root][INFO] - Image embeddings computed.
[2025-02-08 17:44:21,765][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:44:21,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:44:21,793][root][INFO] - Image embeddings computed.
[2025-02-08 17:44:25,942][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:44:25,961][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:44:25,980][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 20
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 17:45:33,876][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:45:33,885][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:45:33,905][root][INFO] - Image embeddings computed.
[2025-02-08 17:45:50,348][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:45:50,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:45:50,376][root][INFO] - Image embeddings computed.
[2025-02-08 17:45:54,467][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:45:54,475][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:45:54,495][root][INFO] - Image embeddings computed.
[2025-02-08 17:45:58,617][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:45:58,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:45:58,645][root][INFO] - Image embeddings computed.
[2025-02-08 17:46:02,785][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:46:02,790][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:46:02,810][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 20
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 17:47:06,461][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:47:06,469][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:47:06,490][root][INFO] - Image embeddings computed.
[2025-02-08 17:47:22,934][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:47:22,942][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:47:22,962][root][INFO] - Image embeddings computed.
[2025-02-08 17:47:27,057][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:47:27,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:47:27,085][root][INFO] - Image embeddings computed.
[2025-02-08 17:47:31,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:47:31,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:47:31,235][root][INFO] - Image embeddings computed.
[2025-02-08 17:47:35,379][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:47:35,385][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:47:35,405][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 17:48:38,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:38,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:38,929][root][INFO] - Image embeddings computed.
[2025-02-08 17:48:55,369][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:55,376][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:55,396][root][INFO] - Image embeddings computed.
[2025-02-08 17:48:59,486][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:48:59,493][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:48:59,512][root][INFO] - Image embeddings computed.
[2025-02-08 17:49:03,636][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:49:03,644][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:49:03,664][root][INFO] - Image embeddings computed.
[2025-02-08 17:49:07,803][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:49:07,811][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:49:07,830][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 17:50:12,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:50:12,146][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:50:12,166][root][INFO] - Image embeddings computed.
[2025-02-08 17:50:28,590][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:50:28,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:50:28,617][root][INFO] - Image embeddings computed.
[2025-02-08 17:50:32,709][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:50:32,714][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:50:32,734][root][INFO] - Image embeddings computed.
[2025-02-08 17:50:36,856][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:50:36,861][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:50:36,881][root][INFO] - Image embeddings computed.
[2025-02-08 17:50:41,016][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:50:41,023][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:50:41,052][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 17:51:45,665][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:51:45,683][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:51:45,707][root][INFO] - Image embeddings computed.
[2025-02-08 17:52:02,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:52:02,179][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:52:02,199][root][INFO] - Image embeddings computed.
[2025-02-08 17:52:06,294][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:52:06,302][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:52:06,322][root][INFO] - Image embeddings computed.
[2025-02-08 17:52:10,444][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:52:10,453][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:52:10,472][root][INFO] - Image embeddings computed.
[2025-02-08 17:52:14,614][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:52:14,621][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:52:14,641][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 17:53:19,356][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:19,361][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:19,381][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:35,811][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:35,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:35,836][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:39,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:39,939][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:39,959][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:44,080][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:44,089][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:44,108][root][INFO] - Image embeddings computed.
[2025-02-08 17:53:48,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:53:48,256][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:53:48,275][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 17:54:58,124][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:54:58,221][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:54:58,241][root][INFO] - Image embeddings computed.
[2025-02-08 17:55:14,677][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:55:14,773][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:55:14,793][root][INFO] - Image embeddings computed.
[2025-02-08 17:55:18,879][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:55:18,981][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:55:19,002][root][INFO] - Image embeddings computed.
[2025-02-08 17:55:23,120][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:55:23,259][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:55:23,279][root][INFO] - Image embeddings computed.
[2025-02-08 17:55:27,411][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:55:27,524][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:55:27,544][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 17:56:37,896][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:37,993][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:38,013][root][INFO] - Image embeddings computed.
[2025-02-08 17:56:54,423][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:54,520][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:54,540][root][INFO] - Image embeddings computed.
[2025-02-08 17:56:58,629][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:56:58,726][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:56:58,746][root][INFO] - Image embeddings computed.
[2025-02-08 17:57:02,864][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:57:02,960][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:57:02,980][root][INFO] - Image embeddings computed.
[2025-02-08 17:57:07,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:57:07,210][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:57:07,230][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 17:58:12,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:12,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:12,668][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:29,111][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:29,118][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:29,138][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:33,231][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:33,238][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:33,258][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:37,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:37,388][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:37,408][root][INFO] - Image embeddings computed.
[2025-02-08 17:58:41,548][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:58:41,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:58:41,574][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 17:59:47,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 17:59:47,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 17:59:47,445][root][INFO] - Image embeddings computed.
[2025-02-08 18:00:03,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:00:03,864][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:00:03,884][root][INFO] - Image embeddings computed.
[2025-02-08 18:00:07,975][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:00:07,983][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:00:08,003][root][INFO] - Image embeddings computed.
[2025-02-08 18:00:12,130][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:00:12,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:00:12,157][root][INFO] - Image embeddings computed.
[2025-02-08 18:00:16,294][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:00:16,302][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:00:16,322][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 18:01:21,971][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:21,978][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:21,999][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:38,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:38,408][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:38,428][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:42,522][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:42,531][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:42,551][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:46,673][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:46,681][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:46,701][root][INFO] - Image embeddings computed.
[2025-02-08 18:01:50,835][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:01:50,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:01:50,862][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 17
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 18:02:59,399][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:02:59,496][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:02:59,516][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:15,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:16,007][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:16,027][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:20,117][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:20,217][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:20,237][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:24,360][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:24,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:24,476][root][INFO] - Image embeddings computed.
[2025-02-08 18:03:28,617][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:03:28,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:03:28,733][root][INFO] - Image embeddings computed.
The number of original masks: 26
The number of filtered masks: 20
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 18:04:41,073][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:04:41,171][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:04:41,191][root][INFO] - Image embeddings computed.
[2025-02-08 18:04:57,634][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:04:57,731][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:04:57,751][root][INFO] - Image embeddings computed.
[2025-02-08 18:05:01,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:05:01,940][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:05:01,960][root][INFO] - Image embeddings computed.
[2025-02-08 18:05:06,084][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:05:06,189][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:05:06,209][root][INFO] - Image embeddings computed.
[2025-02-08 18:05:10,352][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:05:10,448][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:05:10,468][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 20
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 18:06:20,339][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:20,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:20,456][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:36,864][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:36,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:36,979][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:41,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:41,165][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:41,185][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:45,307][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:45,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:45,333][root][INFO] - Image embeddings computed.
[2025-02-08 18:06:49,473][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:06:49,479][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:06:49,499][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

[2025-02-08 18:07:56,359][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:07:56,367][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:07:56,387][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:12,790][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:12,797][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:12,817][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:16,912][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:16,919][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:16,939][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:21,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:21,075][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:21,095][root][INFO] - Image embeddings computed.
[2025-02-08 18:08:25,234][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:08:25,242][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:08:25,262][root][INFO] - Image embeddings computed.
The number of original masks: 25
The number of filtered masks: 19
Lang Goal: pack all the yellow and blue blocks into the brown box
Total Reward: 0.389 | Done: False

Mean: 0.34423455332546243 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 12/50
[2025-02-08 18:09:40,984][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:09:40,991][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:09:41,011][root][INFO] - Image embeddings computed.
[2025-02-08 18:09:57,767][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:09:57,775][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:09:57,795][root][INFO] - Image embeddings computed.
[2025-02-08 18:10:01,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:10:01,958][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:10:01,978][root][INFO] - Image embeddings computed.
[2025-02-08 18:10:06,121][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:10:06,124][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:10:06,144][root][INFO] - Image embeddings computed.
[2025-02-08 18:10:10,296][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:10:10,303][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:10:10,323][root][INFO] - Image embeddings computed.
The number of original masks: 54
The number of filtered masks: 46
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 18:11:18,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:18,999][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:19,019][root][INFO] - Image embeddings computed.
[2025-02-08 18:11:35,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:35,466][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:35,486][root][INFO] - Image embeddings computed.
[2025-02-08 18:11:39,669][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:39,676][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:39,696][root][INFO] - Image embeddings computed.
[2025-02-08 18:11:43,846][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:43,848][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:43,868][root][INFO] - Image embeddings computed.
[2025-02-08 18:11:48,037][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:11:48,042][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:11:48,062][root][INFO] - Image embeddings computed.
The number of original masks: 54
The number of filtered masks: 44
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 18:12:58,652][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:12:58,660][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:12:58,681][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:15,356][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:15,363][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:15,383][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:19,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:19,549][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:19,569][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:23,714][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:23,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:23,741][root][INFO] - Image embeddings computed.
[2025-02-08 18:13:27,886][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:13:27,895][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:13:27,915][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 39
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 18:14:45,927][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:14:46,024][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:14:46,044][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:02,756][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:02,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:02,883][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:07,035][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:07,127][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:07,147][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:11,294][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:11,392][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:11,412][root][INFO] - Image embeddings computed.
[2025-02-08 18:15:15,559][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:15:15,663][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:15:15,683][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 36
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 18:16:24,991][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:16:24,999][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:16:25,019][root][INFO] - Image embeddings computed.
[2025-02-08 18:16:41,406][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:16:41,413][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:16:41,433][root][INFO] - Image embeddings computed.
[2025-02-08 18:16:45,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:16:45,592][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:16:45,612][root][INFO] - Image embeddings computed.
[2025-02-08 18:16:49,748][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:16:49,751][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:16:49,771][root][INFO] - Image embeddings computed.
[2025-02-08 18:16:53,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:16:53,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:16:53,967][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 39
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.077 | Done: False

[2025-02-08 18:18:12,888][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:12,990][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:13,010][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:29,470][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:29,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:29,586][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:33,747][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:33,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:33,862][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:37,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:38,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:38,108][root][INFO] - Image embeddings computed.
[2025-02-08 18:18:42,257][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:18:42,264][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:18:42,284][root][INFO] - Image embeddings computed.
The number of original masks: 47
The number of filtered masks: 35
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.077 | Done: False

[2025-02-08 18:19:51,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:19:51,731][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:19:51,752][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:08,366][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:08,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:08,391][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:12,553][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:12,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:12,581][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:16,716][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:16,719][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:16,739][root][INFO] - Image embeddings computed.
[2025-02-08 18:20:20,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:20:20,908][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:20:20,928][root][INFO] - Image embeddings computed.
The number of original masks: 47
The number of filtered masks: 38
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.077 | Done: False

[2025-02-08 18:21:30,548][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:21:30,556][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:21:30,576][root][INFO] - Image embeddings computed.
[2025-02-08 18:21:47,028][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:21:47,036][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:21:47,056][root][INFO] - Image embeddings computed.
[2025-02-08 18:21:51,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:21:51,221][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:21:51,241][root][INFO] - Image embeddings computed.
[2025-02-08 18:21:55,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:21:55,389][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:21:55,409][root][INFO] - Image embeddings computed.
[2025-02-08 18:21:59,555][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:21:59,563][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:21:59,583][root][INFO] - Image embeddings computed.
The number of original masks: 49
The number of filtered masks: 38
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.077 | Done: False

[2025-02-08 18:23:09,439][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:23:09,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:23:09,467][root][INFO] - Image embeddings computed.
[2025-02-08 18:23:25,872][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:23:25,880][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:23:25,900][root][INFO] - Image embeddings computed.
[2025-02-08 18:23:30,087][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:23:30,090][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:23:30,110][root][INFO] - Image embeddings computed.
[2025-02-08 18:23:34,263][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:23:34,266][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:23:34,286][root][INFO] - Image embeddings computed.
[2025-02-08 18:23:38,449][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:23:38,452][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:23:38,472][root][INFO] - Image embeddings computed.
The number of original masks: 57
The number of filtered masks: 46
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

[2025-02-08 18:24:49,393][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:24:49,401][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:24:49,421][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:05,837][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:05,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:05,867][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:10,255][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:10,258][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:10,278][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:14,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:14,422][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:14,442][root][INFO] - Image embeddings computed.
[2025-02-08 18:25:18,602][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:25:18,605][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:25:18,625][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 38
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

[2025-02-08 18:26:30,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:26:30,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:26:30,376][root][INFO] - Image embeddings computed.
[2025-02-08 18:26:46,708][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:26:46,713][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:26:46,733][root][INFO] - Image embeddings computed.
[2025-02-08 18:26:50,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:26:50,871][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:26:50,891][root][INFO] - Image embeddings computed.
[2025-02-08 18:26:55,021][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:26:55,024][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:26:55,044][root][INFO] - Image embeddings computed.
[2025-02-08 18:26:59,202][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:26:59,205][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:26:59,225][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 35
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

[2025-02-08 18:28:09,917][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:28:09,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:28:09,946][root][INFO] - Image embeddings computed.
[2025-02-08 18:28:26,316][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:28:26,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:28:26,341][root][INFO] - Image embeddings computed.
[2025-02-08 18:28:30,497][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:28:30,500][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:28:30,520][root][INFO] - Image embeddings computed.
[2025-02-08 18:28:34,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:28:34,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:28:34,684][root][INFO] - Image embeddings computed.
[2025-02-08 18:28:38,842][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:28:38,850][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:28:38,870][root][INFO] - Image embeddings computed.
The number of original masks: 48
The number of filtered masks: 41
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

[2025-02-08 18:29:55,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:29:55,607][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:29:55,627][root][INFO] - Image embeddings computed.
[2025-02-08 18:30:12,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:12,012][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:12,032][root][INFO] - Image embeddings computed.
[2025-02-08 18:30:16,159][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:16,163][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:16,182][root][INFO] - Image embeddings computed.
[2025-02-08 18:30:20,314][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:20,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:20,341][root][INFO] - Image embeddings computed.
[2025-02-08 18:30:24,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:30:24,510][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:30:24,530][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 34
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

[2025-02-08 18:31:35,955][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:31:35,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:31:35,985][root][INFO] - Image embeddings computed.
[2025-02-08 18:31:52,382][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:31:52,387][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:31:52,407][root][INFO] - Image embeddings computed.
[2025-02-08 18:31:56,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:31:56,557][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:31:56,577][root][INFO] - Image embeddings computed.
[2025-02-08 18:32:00,714][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:00,717][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:00,737][root][INFO] - Image embeddings computed.
[2025-02-08 18:32:04,880][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:32:04,883][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:32:04,903][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 36
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

[2025-02-08 18:33:19,178][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:33:19,275][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:33:19,296][root][INFO] - Image embeddings computed.
[2025-02-08 18:33:35,743][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:33:35,837][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:33:35,857][root][INFO] - Image embeddings computed.
[2025-02-08 18:33:39,984][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:33:40,091][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:33:40,111][root][INFO] - Image embeddings computed.
[2025-02-08 18:33:44,243][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:33:44,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:33:44,358][root][INFO] - Image embeddings computed.
[2025-02-08 18:33:48,516][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:33:48,610][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:33:48,630][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 37
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

[2025-02-08 18:35:07,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:35:07,091][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:35:07,111][root][INFO] - Image embeddings computed.
[2025-02-08 18:35:23,492][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:35:23,495][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:35:23,515][root][INFO] - Image embeddings computed.
[2025-02-08 18:35:27,664][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:35:27,667][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:35:27,687][root][INFO] - Image embeddings computed.
[2025-02-08 18:35:31,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:35:31,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:35:31,851][root][INFO] - Image embeddings computed.
[2025-02-08 18:35:35,998][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:35:36,001][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:35:36,021][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 35
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

[2025-02-08 18:36:50,366][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:36:50,466][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:36:50,486][root][INFO] - Image embeddings computed.
[2025-02-08 18:37:06,864][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:37:06,955][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:37:06,975][root][INFO] - Image embeddings computed.
[2025-02-08 18:37:11,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:37:11,192][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:37:11,212][root][INFO] - Image embeddings computed.
[2025-02-08 18:37:15,341][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:37:15,433][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:37:15,453][root][INFO] - Image embeddings computed.
[2025-02-08 18:37:19,618][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:37:19,709][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:37:19,729][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 36
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

[2025-02-08 18:38:40,291][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:38:40,388][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:38:40,408][root][INFO] - Image embeddings computed.
[2025-02-08 18:38:56,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:38:56,954][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:38:56,975][root][INFO] - Image embeddings computed.
[2025-02-08 18:39:01,124][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:39:01,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:39:01,235][root][INFO] - Image embeddings computed.
[2025-02-08 18:39:05,377][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:39:05,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:39:05,488][root][INFO] - Image embeddings computed.
[2025-02-08 18:39:09,638][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:39:09,729][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:39:09,749][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 37
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

[2025-02-08 18:40:28,012][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:40:28,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:40:28,037][root][INFO] - Image embeddings computed.
[2025-02-08 18:40:44,410][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:40:44,413][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:40:44,433][root][INFO] - Image embeddings computed.
[2025-02-08 18:40:48,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:40:48,559][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:40:48,579][root][INFO] - Image embeddings computed.
[2025-02-08 18:40:52,712][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:40:52,715][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:40:52,735][root][INFO] - Image embeddings computed.
[2025-02-08 18:40:56,897][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:40:56,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:40:56,920][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 35
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

[2025-02-08 18:42:18,406][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:42:18,509][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:42:18,530][root][INFO] - Image embeddings computed.
[2025-02-08 18:42:34,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:42:35,027][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:42:35,047][root][INFO] - Image embeddings computed.
[2025-02-08 18:42:39,195][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:42:39,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:42:39,309][root][INFO] - Image embeddings computed.
[2025-02-08 18:42:43,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:42:43,540][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:42:43,560][root][INFO] - Image embeddings computed.
[2025-02-08 18:42:47,703][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:42:47,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:42:47,815][root][INFO] - Image embeddings computed.
The number of original masks: 49
The number of filtered masks: 39
Lang Goal: pack all the yellow and gray blocks into the brown box
Total Reward: 0.128 | Done: False

Mean: 0.3262321012321012 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 13/50
[2025-02-08 18:44:15,445][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:44:15,450][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:44:15,471][root][INFO] - Image embeddings computed.
[2025-02-08 18:44:32,349][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:44:32,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:44:32,372][root][INFO] - Image embeddings computed.
[2025-02-08 18:44:36,541][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:44:36,544][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:44:36,563][root][INFO] - Image embeddings computed.
[2025-02-08 18:44:40,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:44:40,703][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:44:40,723][root][INFO] - Image embeddings computed.
[2025-02-08 18:44:44,897][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:44:44,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:44:44,920][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 31
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.160 | Done: False

[2025-02-08 18:45:58,759][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:45:58,782][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:45:58,802][root][INFO] - Image embeddings computed.
[2025-02-08 18:46:15,306][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:46:15,309][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:46:15,329][root][INFO] - Image embeddings computed.
[2025-02-08 18:46:19,483][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:46:19,486][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:46:19,506][root][INFO] - Image embeddings computed.
[2025-02-08 18:46:23,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:46:23,673][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:46:23,693][root][INFO] - Image embeddings computed.
[2025-02-08 18:46:27,878][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:46:27,881][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:46:27,901][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 33
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 18:47:41,564][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:47:41,570][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:47:41,590][root][INFO] - Image embeddings computed.
[2025-02-08 18:47:58,052][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:47:58,055][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:47:58,075][root][INFO] - Image embeddings computed.
[2025-02-08 18:48:02,223][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:48:02,226][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:48:02,246][root][INFO] - Image embeddings computed.
[2025-02-08 18:48:06,393][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:48:06,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:48:06,415][root][INFO] - Image embeddings computed.
[2025-02-08 18:48:10,597][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:48:10,600][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:48:10,620][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 28
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 18:49:31,656][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:49:31,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:49:31,774][root][INFO] - Image embeddings computed.
[2025-02-08 18:49:48,260][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:49:48,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:49:48,372][root][INFO] - Image embeddings computed.
[2025-02-08 18:49:52,524][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:49:52,617][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:49:52,637][root][INFO] - Image embeddings computed.
[2025-02-08 18:49:56,771][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:49:56,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:49:56,884][root][INFO] - Image embeddings computed.
[2025-02-08 18:50:01,065][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:50:01,075][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:50:01,095][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 26
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 18:51:21,972][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:51:22,069][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:51:22,090][root][INFO] - Image embeddings computed.
[2025-02-08 18:51:38,516][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:51:38,608][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:51:38,628][root][INFO] - Image embeddings computed.
[2025-02-08 18:51:42,785][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:51:42,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:51:42,808][root][INFO] - Image embeddings computed.
[2025-02-08 18:51:46,947][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:51:46,955][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:51:46,975][root][INFO] - Image embeddings computed.
[2025-02-08 18:51:51,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:51:51,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:51:51,182][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 29
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 18:53:13,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:53:13,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:53:13,157][root][INFO] - Image embeddings computed.
[2025-02-08 18:53:29,683][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:53:29,774][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:53:29,794][root][INFO] - Image embeddings computed.
[2025-02-08 18:53:33,949][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:53:34,050][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:53:34,070][root][INFO] - Image embeddings computed.
[2025-02-08 18:53:38,203][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:53:38,300][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:53:38,320][root][INFO] - Image embeddings computed.
[2025-02-08 18:53:42,501][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:53:42,592][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:53:42,612][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 27
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 18:55:04,268][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:55:04,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:55:04,392][root][INFO] - Image embeddings computed.
[2025-02-08 18:55:20,796][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:55:20,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:55:20,920][root][INFO] - Image embeddings computed.
[2025-02-08 18:55:25,070][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:55:25,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:55:25,182][root][INFO] - Image embeddings computed.
[2025-02-08 18:55:29,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:55:29,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:55:29,422][root][INFO] - Image embeddings computed.
[2025-02-08 18:55:33,595][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:55:33,689][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:55:33,709][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 29
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 18:56:50,616][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:56:50,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:56:50,642][root][INFO] - Image embeddings computed.
[2025-02-08 18:57:07,071][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:57:07,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:57:07,099][root][INFO] - Image embeddings computed.
[2025-02-08 18:57:11,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:57:11,253][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:57:11,273][root][INFO] - Image embeddings computed.
[2025-02-08 18:57:15,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:57:15,408][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:57:15,428][root][INFO] - Image embeddings computed.
[2025-02-08 18:57:19,608][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:57:19,616][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:57:19,636][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 28
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 18:58:40,205][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:58:40,211][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:58:40,232][root][INFO] - Image embeddings computed.
[2025-02-08 18:58:56,647][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:58:56,655][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:58:56,675][root][INFO] - Image embeddings computed.
[2025-02-08 18:59:00,826][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:59:00,830][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:59:00,850][root][INFO] - Image embeddings computed.
[2025-02-08 18:59:04,984][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:59:04,987][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:59:05,007][root][INFO] - Image embeddings computed.
[2025-02-08 18:59:09,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 18:59:09,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 18:59:09,211][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 29
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 19:00:26,761][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:00:26,767][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:00:26,787][root][INFO] - Image embeddings computed.
[2025-02-08 19:00:43,226][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:00:43,238][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:00:43,257][root][INFO] - Image embeddings computed.
[2025-02-08 19:00:47,410][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:00:47,413][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:00:47,433][root][INFO] - Image embeddings computed.
[2025-02-08 19:00:51,567][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:00:51,570][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:00:51,590][root][INFO] - Image embeddings computed.
[2025-02-08 19:00:55,773][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:00:55,782][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:00:55,802][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 27
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 19:02:13,651][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:02:13,658][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:02:13,678][root][INFO] - Image embeddings computed.
[2025-02-08 19:02:30,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:02:30,113][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:02:30,133][root][INFO] - Image embeddings computed.
[2025-02-08 19:02:34,284][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:02:34,287][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:02:34,307][root][INFO] - Image embeddings computed.
[2025-02-08 19:02:38,446][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:02:38,449][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:02:38,469][root][INFO] - Image embeddings computed.
[2025-02-08 19:02:42,651][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:02:42,658][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:02:42,678][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 26
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 19:04:02,705][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:04:02,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:04:02,731][root][INFO] - Image embeddings computed.
[2025-02-08 19:04:19,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:04:19,165][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:04:19,185][root][INFO] - Image embeddings computed.
[2025-02-08 19:04:23,336][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:04:23,339][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:04:23,359][root][INFO] - Image embeddings computed.
[2025-02-08 19:04:27,487][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:04:27,495][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:04:27,515][root][INFO] - Image embeddings computed.
[2025-02-08 19:04:31,695][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:04:31,704][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:04:31,723][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 27
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 19:05:48,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:05:48,867][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:05:48,887][root][INFO] - Image embeddings computed.
[2025-02-08 19:06:05,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:06:05,328][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:06:05,349][root][INFO] - Image embeddings computed.
[2025-02-08 19:06:09,501][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:06:09,504][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:06:09,524][root][INFO] - Image embeddings computed.
[2025-02-08 19:06:13,652][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:06:13,659][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:06:13,679][root][INFO] - Image embeddings computed.
[2025-02-08 19:06:17,859][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:06:17,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:06:17,888][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 27
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 19:07:37,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:07:37,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:07:37,957][root][INFO] - Image embeddings computed.
[2025-02-08 19:07:54,375][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:07:54,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:07:54,416][root][INFO] - Image embeddings computed.
[2025-02-08 19:07:58,572][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:07:58,580][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:07:58,600][root][INFO] - Image embeddings computed.
[2025-02-08 19:08:02,737][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:08:02,745][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:08:02,764][root][INFO] - Image embeddings computed.
[2025-02-08 19:08:06,951][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:08:06,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:08:06,998][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 27
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 19:09:23,454][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:23,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:23,481][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:39,898][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:39,905][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:39,925][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:44,077][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:44,080][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:44,100][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:48,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:48,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:48,259][root][INFO] - Image embeddings computed.
[2025-02-08 19:09:52,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:09:52,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:09:52,464][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 28
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 19:11:09,958][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:11:09,966][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:11:09,986][root][INFO] - Image embeddings computed.
[2025-02-08 19:11:26,409][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:11:26,416][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:11:26,436][root][INFO] - Image embeddings computed.
[2025-02-08 19:11:30,590][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:11:30,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:11:30,612][root][INFO] - Image embeddings computed.
[2025-02-08 19:11:34,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:11:34,755][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:11:34,775][root][INFO] - Image embeddings computed.
[2025-02-08 19:11:38,958][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:11:38,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:11:38,985][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 27
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 19:12:57,447][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:12:57,455][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:12:57,475][root][INFO] - Image embeddings computed.
[2025-02-08 19:13:13,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:13:13,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:13:13,931][root][INFO] - Image embeddings computed.
[2025-02-08 19:13:18,086][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:13:18,089][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:13:18,109][root][INFO] - Image embeddings computed.
[2025-02-08 19:13:22,244][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:13:22,253][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:13:22,273][root][INFO] - Image embeddings computed.
[2025-02-08 19:13:26,457][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:13:26,465][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:13:26,485][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 27
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 19:14:43,883][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:14:43,889][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:14:43,909][root][INFO] - Image embeddings computed.
[2025-02-08 19:15:00,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:15:00,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:15:00,358][root][INFO] - Image embeddings computed.
[2025-02-08 19:15:04,510][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:15:04,513][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:15:04,533][root][INFO] - Image embeddings computed.
[2025-02-08 19:15:08,665][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:15:08,668][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:15:08,688][root][INFO] - Image embeddings computed.
[2025-02-08 19:15:12,864][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:15:12,871][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:15:12,891][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 27
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 19:16:32,095][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:32,104][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:32,124][root][INFO] - Image embeddings computed.
[2025-02-08 19:16:48,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:48,555][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:48,574][root][INFO] - Image embeddings computed.
[2025-02-08 19:16:52,730][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:52,733][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:52,753][root][INFO] - Image embeddings computed.
[2025-02-08 19:16:56,886][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:16:56,889][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:16:56,909][root][INFO] - Image embeddings computed.
[2025-02-08 19:17:01,093][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:17:01,102][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:17:01,122][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 27
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

[2025-02-08 19:18:24,742][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:18:24,749][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:18:24,769][root][INFO] - Image embeddings computed.
[2025-02-08 19:18:41,193][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:18:41,201][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:18:41,220][root][INFO] - Image embeddings computed.
[2025-02-08 19:18:45,372][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:18:45,375][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:18:45,395][root][INFO] - Image embeddings computed.
[2025-02-08 19:18:49,529][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:18:49,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:18:49,556][root][INFO] - Image embeddings computed.
[2025-02-08 19:18:53,727][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:18:53,739][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:18:53,759][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 28
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.171 | Done: False

Mean: 0.314286568132722 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 14/50
[2025-02-08 19:20:18,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:18,477][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:18,497][root][INFO] - Image embeddings computed.
[2025-02-08 19:20:35,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:35,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:35,038][root][INFO] - Image embeddings computed.
[2025-02-08 19:20:39,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:39,214][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:39,234][root][INFO] - Image embeddings computed.
[2025-02-08 19:20:43,376][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:43,384][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:43,403][root][INFO] - Image embeddings computed.
[2025-02-08 19:20:47,530][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:20:47,538][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:20:47,558][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 20
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:22:06,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:22:06,966][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:22:06,986][root][INFO] - Image embeddings computed.
[2025-02-08 19:22:23,355][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:22:23,363][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:22:23,383][root][INFO] - Image embeddings computed.
[2025-02-08 19:22:27,527][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:22:27,624][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:22:27,644][root][INFO] - Image embeddings computed.
[2025-02-08 19:22:31,784][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:22:31,880][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:22:31,900][root][INFO] - Image embeddings computed.
[2025-02-08 19:22:36,038][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:22:36,140][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:22:36,160][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 28
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:23:55,765][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:23:55,774][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:23:55,794][root][INFO] - Image embeddings computed.
[2025-02-08 19:24:12,161][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:24:12,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:24:12,188][root][INFO] - Image embeddings computed.
[2025-02-08 19:24:16,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:24:16,347][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:24:16,367][root][INFO] - Image embeddings computed.
[2025-02-08 19:24:20,517][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:24:20,523][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:24:20,543][root][INFO] - Image embeddings computed.
[2025-02-08 19:24:24,682][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:24:24,689][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:24:24,709][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:25:44,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:25:44,446][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:25:44,466][root][INFO] - Image embeddings computed.
[2025-02-08 19:26:00,823][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:26:00,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:26:00,851][root][INFO] - Image embeddings computed.
[2025-02-08 19:26:05,013][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:26:05,020][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:26:05,040][root][INFO] - Image embeddings computed.
[2025-02-08 19:26:09,182][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:26:09,188][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:26:09,208][root][INFO] - Image embeddings computed.
[2025-02-08 19:26:13,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:26:13,348][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:26:13,367][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 28
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:27:32,715][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:32,723][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:32,743][root][INFO] - Image embeddings computed.
[2025-02-08 19:27:49,096][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:49,104][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:49,124][root][INFO] - Image embeddings computed.
[2025-02-08 19:27:53,283][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:53,291][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:53,310][root][INFO] - Image embeddings computed.
[2025-02-08 19:27:57,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:27:57,462][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:27:57,482][root][INFO] - Image embeddings computed.
[2025-02-08 19:28:01,617][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:28:01,626][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:28:01,646][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 27
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:29:21,937][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:21,946][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:21,966][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:38,329][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:38,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:38,357][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:42,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:42,519][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:42,546][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:46,689][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:46,696][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:46,715][root][INFO] - Image embeddings computed.
[2025-02-08 19:29:50,848][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:29:50,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:29:50,875][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 25
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:31:11,236][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:11,244][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:11,264][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:27,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:27,630][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:27,650][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:31,808][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:31,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:31,835][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:35,981][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:35,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:36,008][root][INFO] - Image embeddings computed.
[2025-02-08 19:31:40,143][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:31:40,151][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:31:40,171][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:33:01,118][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:01,124][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:01,144][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:17,498][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:17,506][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:17,526][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:21,676][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:21,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:21,702][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:25,847][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:25,855][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:25,874][root][INFO] - Image embeddings computed.
[2025-02-08 19:33:30,011][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:33:30,019][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:33:30,039][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:34:50,576][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:34:50,591][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:34:50,611][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:06,957][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:06,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:06,983][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:11,136][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:11,139][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:11,159][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:15,303][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:15,310][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:15,330][root][INFO] - Image embeddings computed.
[2025-02-08 19:35:19,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:35:19,491][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:35:19,511][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:36:46,276][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:36:46,282][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:36:46,308][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:02,647][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:02,654][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:02,674][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:06,824][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:06,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:06,851][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:10,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:10,999][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:11,018][root][INFO] - Image embeddings computed.
[2025-02-08 19:37:15,145][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:37:15,153][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:37:15,172][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 25
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:38:41,352][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:38:41,449][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:38:41,470][root][INFO] - Image embeddings computed.
[2025-02-08 19:38:57,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:38:57,914][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:38:57,934][root][INFO] - Image embeddings computed.
[2025-02-08 19:39:02,086][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:02,180][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:02,200][root][INFO] - Image embeddings computed.
[2025-02-08 19:39:06,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:06,433][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:06,453][root][INFO] - Image embeddings computed.
[2025-02-08 19:39:10,586][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:39:10,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:39:10,702][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:40:31,703][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:40:31,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:40:31,731][root][INFO] - Image embeddings computed.
[2025-02-08 19:40:48,082][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:40:48,092][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:40:48,112][root][INFO] - Image embeddings computed.
[2025-02-08 19:40:52,260][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:40:52,267][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:40:52,288][root][INFO] - Image embeddings computed.
[2025-02-08 19:40:56,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:40:56,439][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:40:56,459][root][INFO] - Image embeddings computed.
[2025-02-08 19:41:00,593][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:41:00,600][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:41:00,620][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 27
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:42:29,254][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:42:29,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:42:29,372][root][INFO] - Image embeddings computed.
[2025-02-08 19:42:45,786][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:42:45,879][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:42:45,905][root][INFO] - Image embeddings computed.
[2025-02-08 19:42:50,057][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:42:50,150][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:42:50,170][root][INFO] - Image embeddings computed.
[2025-02-08 19:42:54,308][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:42:54,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:42:54,422][root][INFO] - Image embeddings computed.
[2025-02-08 19:42:58,549][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:42:58,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:42:58,663][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:44:24,906][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:44:24,914][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:44:24,934][root][INFO] - Image embeddings computed.
[2025-02-08 19:44:41,287][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:44:41,297][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:44:41,316][root][INFO] - Image embeddings computed.
[2025-02-08 19:44:45,475][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:44:45,483][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:44:45,503][root][INFO] - Image embeddings computed.
[2025-02-08 19:44:49,644][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:44:49,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:44:49,667][root][INFO] - Image embeddings computed.
[2025-02-08 19:44:53,796][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:44:53,799][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:44:53,819][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 27
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:46:16,098][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:46:16,201][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:46:16,221][root][INFO] - Image embeddings computed.
[2025-02-08 19:46:32,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:46:32,719][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:46:32,751][root][INFO] - Image embeddings computed.
[2025-02-08 19:46:36,901][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:46:36,997][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:46:37,017][root][INFO] - Image embeddings computed.
[2025-02-08 19:46:41,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:46:41,254][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:46:41,274][root][INFO] - Image embeddings computed.
[2025-02-08 19:46:45,406][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:46:45,498][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:46:45,518][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:48:07,676][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:48:07,684][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:48:07,704][root][INFO] - Image embeddings computed.
[2025-02-08 19:48:24,052][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:48:24,060][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:48:24,080][root][INFO] - Image embeddings computed.
[2025-02-08 19:48:28,237][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:48:28,243][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:48:28,262][root][INFO] - Image embeddings computed.
[2025-02-08 19:48:32,404][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:48:32,410][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:48:32,429][root][INFO] - Image embeddings computed.
[2025-02-08 19:48:36,562][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:48:36,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:48:36,588][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 27
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:50:02,401][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:50:02,498][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:50:02,518][root][INFO] - Image embeddings computed.
[2025-02-08 19:50:18,869][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:50:18,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:50:19,009][root][INFO] - Image embeddings computed.
[2025-02-08 19:50:23,162][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:50:23,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:50:23,280][root][INFO] - Image embeddings computed.
[2025-02-08 19:50:27,423][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:50:27,537][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:50:27,557][root][INFO] - Image embeddings computed.
[2025-02-08 19:50:31,686][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:50:31,790][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:50:31,810][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 27
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:51:57,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:51:57,838][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:51:57,858][root][INFO] - Image embeddings computed.
[2025-02-08 19:52:14,216][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:52:14,223][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:52:14,243][root][INFO] - Image embeddings computed.
[2025-02-08 19:52:18,400][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:52:18,408][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:52:18,428][root][INFO] - Image embeddings computed.
[2025-02-08 19:52:22,566][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:52:22,577][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:52:22,597][root][INFO] - Image embeddings computed.
[2025-02-08 19:52:26,730][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:52:26,740][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:52:26,760][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:53:49,439][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:53:49,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:53:49,476][root][INFO] - Image embeddings computed.
[2025-02-08 19:54:05,824][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:54:05,833][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:54:05,853][root][INFO] - Image embeddings computed.
[2025-02-08 19:54:10,011][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:54:10,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:54:10,041][root][INFO] - Image embeddings computed.
[2025-02-08 19:54:14,187][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:54:14,194][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:54:14,214][root][INFO] - Image embeddings computed.
[2025-02-08 19:54:18,348][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:54:18,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:54:18,376][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 27
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

[2025-02-08 19:55:47,580][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:55:47,589][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:55:47,609][root][INFO] - Image embeddings computed.
[2025-02-08 19:56:03,959][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:56:03,967][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:56:03,987][root][INFO] - Image embeddings computed.
[2025-02-08 19:56:08,138][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:56:08,147][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:56:08,167][root][INFO] - Image embeddings computed.
[2025-02-08 19:56:12,309][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:56:12,317][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:56:12,337][root][INFO] - Image embeddings computed.
[2025-02-08 19:56:16,470][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:56:16,478][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:56:16,498][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: pack all the gray and red blocks into the brown box
Total Reward: 0.167 | Done: False

Mean: 0.3037422894565752 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 15/50
[2025-02-08 19:57:47,745][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:57:47,755][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:57:47,775][root][INFO] - Image embeddings computed.
[2025-02-08 19:58:04,371][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:04,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:04,400][root][INFO] - Image embeddings computed.
[2025-02-08 19:58:08,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:08,562][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:08,582][root][INFO] - Image embeddings computed.
[2025-02-08 19:58:12,752][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:12,754][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:12,774][root][INFO] - Image embeddings computed.
[2025-02-08 19:58:16,865][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:58:16,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:58:16,888][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 28
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 19:59:40,593][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:59:40,599][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:59:40,620][root][INFO] - Image embeddings computed.
[2025-02-08 19:59:57,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 19:59:57,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 19:59:57,202][root][INFO] - Image embeddings computed.
[2025-02-08 20:00:01,369][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:00:01,378][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:00:01,397][root][INFO] - Image embeddings computed.
[2025-02-08 20:00:05,559][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:00:05,563][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:00:05,583][root][INFO] - Image embeddings computed.
[2025-02-08 20:00:09,670][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:00:09,772][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:00:09,792][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 31
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:01:41,850][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:01:41,948][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:01:41,969][root][INFO] - Image embeddings computed.
[2025-02-08 20:01:58,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:01:58,666][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:01:58,686][root][INFO] - Image embeddings computed.
[2025-02-08 20:02:02,852][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:02:02,948][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:02:02,968][root][INFO] - Image embeddings computed.
[2025-02-08 20:02:07,132][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:02:07,224][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:02:07,244][root][INFO] - Image embeddings computed.
[2025-02-08 20:02:11,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:02:11,417][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:02:11,437][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 31
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:03:36,271][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:03:36,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:03:36,301][root][INFO] - Image embeddings computed.
[2025-02-08 20:03:52,847][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:03:52,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:03:52,874][root][INFO] - Image embeddings computed.
[2025-02-08 20:03:57,044][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:03:57,047][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:03:57,067][root][INFO] - Image embeddings computed.
[2025-02-08 20:04:01,230][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:04:01,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:04:01,253][root][INFO] - Image embeddings computed.
[2025-02-08 20:04:05,345][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:04:05,348][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:04:05,369][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 30
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:05:32,029][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:05:32,037][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:05:32,058][root][INFO] - Image embeddings computed.
[2025-02-08 20:05:48,612][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:05:48,618][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:05:48,638][root][INFO] - Image embeddings computed.
[2025-02-08 20:05:52,804][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:05:52,807][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:05:52,827][root][INFO] - Image embeddings computed.
[2025-02-08 20:05:56,986][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:05:56,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:05:57,009][root][INFO] - Image embeddings computed.
[2025-02-08 20:06:01,095][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:06:01,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:06:01,118][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 29
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:07:26,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:07:26,947][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:07:26,967][root][INFO] - Image embeddings computed.
[2025-02-08 20:07:43,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:07:43,560][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:07:43,580][root][INFO] - Image embeddings computed.
[2025-02-08 20:07:47,715][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:07:47,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:07:47,738][root][INFO] - Image embeddings computed.
[2025-02-08 20:07:51,923][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:07:51,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:07:51,946][root][INFO] - Image embeddings computed.
[2025-02-08 20:07:56,039][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:07:56,042][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:07:56,061][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 26
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:09:26,246][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:09:26,256][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:09:26,276][root][INFO] - Image embeddings computed.
[2025-02-08 20:09:42,825][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:09:42,831][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:09:42,850][root][INFO] - Image embeddings computed.
[2025-02-08 20:09:47,018][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:09:47,021][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:09:47,041][root][INFO] - Image embeddings computed.
[2025-02-08 20:09:51,211][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:09:51,214][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:09:51,234][root][INFO] - Image embeddings computed.
[2025-02-08 20:09:55,320][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:09:55,323][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:09:55,343][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 31
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:11:22,867][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:11:22,876][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:11:22,896][root][INFO] - Image embeddings computed.
[2025-02-08 20:11:39,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:11:39,446][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:11:39,466][root][INFO] - Image embeddings computed.
[2025-02-08 20:11:43,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:11:43,634][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:11:43,654][root][INFO] - Image embeddings computed.
[2025-02-08 20:11:47,823][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:11:47,826][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:11:47,845][root][INFO] - Image embeddings computed.
[2025-02-08 20:11:51,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:11:51,933][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:11:51,953][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 30
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:13:17,689][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:13:17,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:13:17,719][root][INFO] - Image embeddings computed.
[2025-02-08 20:13:34,256][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:13:34,264][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:13:34,283][root][INFO] - Image embeddings computed.
[2025-02-08 20:13:38,452][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:13:38,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:13:38,481][root][INFO] - Image embeddings computed.
[2025-02-08 20:13:42,650][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:13:42,655][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:13:42,675][root][INFO] - Image embeddings computed.
[2025-02-08 20:13:46,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:13:46,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:13:46,780][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 30
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:15:19,857][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:15:19,960][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:15:19,980][root][INFO] - Image embeddings computed.
[2025-02-08 20:15:36,531][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:15:36,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:15:36,653][root][INFO] - Image embeddings computed.
[2025-02-08 20:15:40,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:15:40,922][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:15:40,942][root][INFO] - Image embeddings computed.
[2025-02-08 20:15:45,108][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:15:45,203][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:15:45,228][root][INFO] - Image embeddings computed.
[2025-02-08 20:15:49,313][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:15:49,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:15:49,455][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 30
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:17:23,375][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:17:23,482][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:17:23,502][root][INFO] - Image embeddings computed.
[2025-02-08 20:17:40,040][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:17:40,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:17:40,157][root][INFO] - Image embeddings computed.
[2025-02-08 20:17:44,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:17:44,417][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:17:44,437][root][INFO] - Image embeddings computed.
[2025-02-08 20:17:48,598][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:17:48,701][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:17:48,721][root][INFO] - Image embeddings computed.
[2025-02-08 20:17:52,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:17:52,899][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:17:52,919][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 30
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:19:26,927][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:19:27,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:19:27,045][root][INFO] - Image embeddings computed.
[2025-02-08 20:19:43,684][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:19:43,780][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:19:43,800][root][INFO] - Image embeddings computed.
[2025-02-08 20:19:47,966][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:19:48,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:19:48,077][root][INFO] - Image embeddings computed.
[2025-02-08 20:19:52,239][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:19:52,336][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:19:52,355][root][INFO] - Image embeddings computed.
[2025-02-08 20:19:56,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:19:56,533][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:19:56,553][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 31
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:21:24,776][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:21:24,784][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:21:24,814][root][INFO] - Image embeddings computed.
[2025-02-08 20:21:41,360][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:21:41,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:21:41,388][root][INFO] - Image embeddings computed.
[2025-02-08 20:21:45,554][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:21:45,557][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:21:45,576][root][INFO] - Image embeddings computed.
[2025-02-08 20:21:49,743][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:21:49,747][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:21:49,767][root][INFO] - Image embeddings computed.
[2025-02-08 20:21:53,849][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:21:53,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:21:53,877][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 30
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:23:21,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:23:21,239][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:23:21,258][root][INFO] - Image embeddings computed.
[2025-02-08 20:23:37,798][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:23:37,802][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:23:37,821][root][INFO] - Image embeddings computed.
[2025-02-08 20:23:41,988][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:23:41,991][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:23:42,011][root][INFO] - Image embeddings computed.
[2025-02-08 20:23:46,174][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:23:46,181][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:23:46,201][root][INFO] - Image embeddings computed.
[2025-02-08 20:23:50,288][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:23:50,296][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:23:50,316][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 30
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:25:17,480][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:25:17,486][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:25:17,507][root][INFO] - Image embeddings computed.
[2025-02-08 20:25:34,054][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:25:34,065][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:25:34,084][root][INFO] - Image embeddings computed.
[2025-02-08 20:25:38,253][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:25:38,256][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:25:38,276][root][INFO] - Image embeddings computed.
[2025-02-08 20:25:42,437][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:25:42,440][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:25:42,459][root][INFO] - Image embeddings computed.
[2025-02-08 20:25:46,546][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:25:46,549][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:25:46,569][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 31
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:27:14,247][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:27:14,253][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:27:14,273][root][INFO] - Image embeddings computed.
[2025-02-08 20:27:30,816][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:27:30,819][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:27:30,839][root][INFO] - Image embeddings computed.
[2025-02-08 20:27:35,010][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:27:35,013][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:27:35,033][root][INFO] - Image embeddings computed.
[2025-02-08 20:27:39,200][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:27:39,203][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:27:39,223][root][INFO] - Image embeddings computed.
[2025-02-08 20:27:43,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:27:43,314][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:27:43,334][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 31
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:29:11,111][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:11,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:11,139][root][INFO] - Image embeddings computed.
[2025-02-08 20:29:27,687][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:27,695][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:27,715][root][INFO] - Image embeddings computed.
[2025-02-08 20:29:31,887][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:31,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:31,930][root][INFO] - Image embeddings computed.
[2025-02-08 20:29:36,098][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:36,101][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:36,121][root][INFO] - Image embeddings computed.
[2025-02-08 20:29:40,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:29:40,211][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:29:40,231][root][INFO] - Image embeddings computed.
The number of original masks: 38
The number of filtered masks: 32
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:31:16,623][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:16,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:16,741][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:33,374][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:33,476][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:33,496][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:37,664][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:37,769][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:37,789][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:41,952][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:42,049][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:42,069][root][INFO] - Image embeddings computed.
[2025-02-08 20:31:46,154][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:31:46,271][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:31:46,291][root][INFO] - Image embeddings computed.
The number of original masks: 35
The number of filtered masks: 29
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:33:20,422][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:20,430][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:20,450][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:36,998][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:37,004][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:37,024][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:41,193][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:41,199][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:41,219][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:45,387][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:45,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:45,415][root][INFO] - Image embeddings computed.
[2025-02-08 20:33:49,503][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:33:49,512][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:33:49,532][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 28
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 20:35:18,321][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:18,328][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:18,348][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:34,899][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:34,910][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:34,930][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:39,101][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:39,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:39,127][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:43,293][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:43,301][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:43,321][root][INFO] - Image embeddings computed.
[2025-02-08 20:35:47,407][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:35:47,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:35:47,435][root][INFO] - Image embeddings computed.
The number of original masks: 36
The number of filtered masks: 30
Lang Goal: pack all the brown and gray blocks into the brown box
Total Reward: 0.000 | Done: False

Mean: 0.28349280349280354 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 16/50
[2025-02-08 20:37:20,737][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:20,745][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:20,765][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:37,250][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:37,256][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:37,276][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:41,443][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:41,450][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:41,470][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:45,606][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:45,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:45,632][root][INFO] - Image embeddings computed.
[2025-02-08 20:37:49,763][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:37:49,769][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:37:49,789][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 14
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 20:39:21,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:21,299][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:21,319][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:37,589][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:37,599][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:37,619][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:41,772][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:41,779][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:41,799][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:45,925][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:45,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:45,954][root][INFO] - Image embeddings computed.
[2025-02-08 20:39:50,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:39:50,093][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:39:50,113][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 20:41:19,018][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:19,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:19,046][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:35,311][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:35,317][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:35,337][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:39,480][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:39,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:39,509][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:43,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:43,645][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:43,665][root][INFO] - Image embeddings computed.
[2025-02-08 20:41:47,796][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:41:47,804][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:41:47,823][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 20:43:21,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:21,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:21,504][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:37,838][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:37,940][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:37,960][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:42,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:42,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:42,235][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:46,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:46,470][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:46,490][root][INFO] - Image embeddings computed.
[2025-02-08 20:43:50,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:43:50,718][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:43:50,738][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 20:45:25,211][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:25,313][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:25,334][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:41,588][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:41,684][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:41,704][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:45,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:45,936][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:45,960][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:50,084][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:50,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:50,212][root][INFO] - Image embeddings computed.
[2025-02-08 20:45:54,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:45:54,441][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:45:54,467][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 20:47:26,719][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:26,731][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:26,765][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:43,029][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:43,036][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:43,056][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:47,199][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:47,207][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:47,227][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:51,354][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:51,357][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:51,377][root][INFO] - Image embeddings computed.
[2025-02-08 20:47:55,515][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:47:55,518][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:47:55,538][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 20:49:29,996][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:30,093][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:30,113][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:46,462][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:46,558][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:46,579][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:50,717][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:50,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:50,808][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:54,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:54,942][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:54,962][root][INFO] - Image embeddings computed.
[2025-02-08 20:49:59,091][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:49:59,094][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:49:59,114][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 20:51:33,893][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:33,990][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:34,010][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:50,329][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:50,425][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:50,445][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:54,583][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:54,683][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:54,703][root][INFO] - Image embeddings computed.
[2025-02-08 20:51:58,826][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:51:58,928][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:51:58,948][root][INFO] - Image embeddings computed.
[2025-02-08 20:52:03,078][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:52:03,172][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:52:03,192][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 20:53:36,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:36,120][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:36,141][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:52,404][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:52,413][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:52,433][root][INFO] - Image embeddings computed.
[2025-02-08 20:53:56,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:53:56,580][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:53:56,600][root][INFO] - Image embeddings computed.
[2025-02-08 20:54:00,728][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:54:00,737][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:54:00,757][root][INFO] - Image embeddings computed.
[2025-02-08 20:54:04,890][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:54:04,903][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:54:04,923][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 20:55:40,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:40,148][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:40,169][root][INFO] - Image embeddings computed.
[2025-02-08 20:55:56,520][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:55:56,614][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:55:56,634][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:00,775][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:00,783][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:00,803][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:04,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:04,939][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:04,959][root][INFO] - Image embeddings computed.
[2025-02-08 20:56:09,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:56:09,101][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:56:09,121][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 20:57:41,304][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:41,310][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:41,331][root][INFO] - Image embeddings computed.
[2025-02-08 20:57:57,599][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:57:57,608][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:57:57,628][root][INFO] - Image embeddings computed.
[2025-02-08 20:58:01,767][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:01,775][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:01,795][root][INFO] - Image embeddings computed.
[2025-02-08 20:58:05,932][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:05,940][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:05,960][root][INFO] - Image embeddings computed.
[2025-02-08 20:58:10,099][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:58:10,107][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:58:10,126][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 20:59:41,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:59:41,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:59:41,139][root][INFO] - Image embeddings computed.
[2025-02-08 20:59:57,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 20:59:57,404][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 20:59:57,423][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:01,563][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:01,572][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:01,591][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:05,719][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:05,728][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:05,748][root][INFO] - Image embeddings computed.
[2025-02-08 21:00:09,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:00:09,892][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:00:09,912][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 21:01:41,478][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:01:41,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:01:41,504][root][INFO] - Image embeddings computed.
[2025-02-08 21:01:57,777][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:01:57,785][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:01:57,805][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:01,946][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:01,955][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:01,975][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:06,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:06,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:06,132][root][INFO] - Image embeddings computed.
[2025-02-08 21:02:10,267][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:02:10,270][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:02:10,290][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 21:03:42,712][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:03:42,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:03:42,742][root][INFO] - Image embeddings computed.
[2025-02-08 21:03:59,001][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:03:59,004][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:03:59,024][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:03,165][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:03,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:03,188][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:07,320][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:07,328][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:07,348][root][INFO] - Image embeddings computed.
[2025-02-08 21:04:11,477][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:04:11,487][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:04:11,507][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 21:05:43,415][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:05:43,423][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:05:43,444][root][INFO] - Image embeddings computed.
[2025-02-08 21:05:59,706][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:05:59,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:05:59,731][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:03,870][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:03,878][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:03,898][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:08,030][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:08,039][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:08,059][root][INFO] - Image embeddings computed.
[2025-02-08 21:06:12,195][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:06:12,203][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:06:12,223][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 21:07:44,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:07:44,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:07:44,573][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:00,840][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:00,850][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:00,870][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:05,011][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:05,020][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:05,040][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:09,174][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:09,177][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:09,197][root][INFO] - Image embeddings computed.
[2025-02-08 21:08:13,333][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:08:13,336][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:08:13,356][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 21:09:45,860][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:09:45,881][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:09:45,901][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:02,162][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:02,168][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:02,188][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:06,325][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:06,334][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:06,354][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:10,482][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:10,485][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:10,505][root][INFO] - Image embeddings computed.
[2025-02-08 21:10:14,636][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:10:14,643][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:10:14,663][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 21:11:46,990][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:11:46,997][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:11:47,017][root][INFO] - Image embeddings computed.
[2025-02-08 21:12:03,279][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:03,288][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:03,308][root][INFO] - Image embeddings computed.
[2025-02-08 21:12:07,450][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:07,453][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:07,473][root][INFO] - Image embeddings computed.
[2025-02-08 21:12:11,603][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:11,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:11,626][root][INFO] - Image embeddings computed.
[2025-02-08 21:12:15,761][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:12:15,764][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:12:15,784][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 21:13:53,399][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:13:53,405][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:13:53,425][root][INFO] - Image embeddings computed.
[2025-02-08 21:14:09,690][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:09,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:14:09,718][root][INFO] - Image embeddings computed.
[2025-02-08 21:14:13,858][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:13,867][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:14:13,887][root][INFO] - Image embeddings computed.
[2025-02-08 21:14:18,017][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:18,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:14:18,045][root][INFO] - Image embeddings computed.
[2025-02-08 21:14:22,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:14:22,186][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:14:22,206][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

[2025-02-08 21:15:55,841][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:15:55,847][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:15:55,867][root][INFO] - Image embeddings computed.
[2025-02-08 21:16:12,124][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:16:12,221][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:16:12,241][root][INFO] - Image embeddings computed.
[2025-02-08 21:16:16,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:16:16,489][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:16:16,509][root][INFO] - Image embeddings computed.
[2025-02-08 21:16:20,636][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:16:20,740][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:16:20,760][root][INFO] - Image embeddings computed.
[2025-02-08 21:16:24,894][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:16:25,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:16:25,026][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 13
Lang Goal: pack all the cyan and green blocks into the brown box
Total Reward: 0.350 | Done: False

Mean: 0.2876495032745033 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 17/50
[2025-02-08 21:18:04,476][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:18:04,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:18:04,505][root][INFO] - Image embeddings computed.
[2025-02-08 21:18:21,023][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:18:21,031][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:18:21,051][root][INFO] - Image embeddings computed.
[2025-02-08 21:18:25,183][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:18:25,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:18:25,211][root][INFO] - Image embeddings computed.
[2025-02-08 21:18:29,414][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:18:29,422][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:18:29,449][root][INFO] - Image embeddings computed.
[2025-02-08 21:18:33,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:18:33,561][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:18:33,581][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:20:07,867][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:20:07,876][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:20:07,897][root][INFO] - Image embeddings computed.
[2025-02-08 21:20:24,269][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:20:24,279][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:20:24,299][root][INFO] - Image embeddings computed.
[2025-02-08 21:20:28,412][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:20:28,422][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:20:28,442][root][INFO] - Image embeddings computed.
[2025-02-08 21:20:32,621][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:20:32,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:20:32,647][root][INFO] - Image embeddings computed.
[2025-02-08 21:20:36,770][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:20:36,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:20:36,798][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:22:12,995][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:13,001][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:13,021][root][INFO] - Image embeddings computed.
[2025-02-08 21:22:29,340][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:29,348][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:29,368][root][INFO] - Image embeddings computed.
[2025-02-08 21:22:33,487][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:33,495][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:33,515][root][INFO] - Image embeddings computed.
[2025-02-08 21:22:37,668][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:37,676][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:37,696][root][INFO] - Image embeddings computed.
[2025-02-08 21:22:41,826][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:22:41,834][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:22:41,854][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 15
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:24:21,114][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:21,123][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:21,143][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:37,536][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:37,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:37,577][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:41,698][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:41,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:41,727][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:45,896][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:45,913][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:45,933][root][INFO] - Image embeddings computed.
[2025-02-08 21:24:50,064][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:24:50,067][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:24:50,087][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 19
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:26:24,888][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:24,897][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:24,917][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:41,298][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:41,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:41,326][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:45,448][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:45,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:45,476][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:49,653][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:49,662][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:49,682][root][INFO] - Image embeddings computed.
[2025-02-08 21:26:53,792][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:26:53,812][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:26:53,832][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:28:28,939][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:28,948][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:28,968][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:45,360][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:45,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:45,388][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:49,511][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:49,520][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:49,540][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:53,711][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:53,714][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:53,734][root][INFO] - Image embeddings computed.
[2025-02-08 21:28:57,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:28:57,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:28:57,888][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:30:33,443][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:33,451][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:33,471][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:49,844][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:49,851][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:49,871][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:53,992][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:53,999][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:54,019][root][INFO] - Image embeddings computed.
[2025-02-08 21:30:58,192][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:30:58,201][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:30:58,221][root][INFO] - Image embeddings computed.
[2025-02-08 21:31:02,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:31:02,338][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:31:02,357][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:32:38,161][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:38,171][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:38,191][root][INFO] - Image embeddings computed.
[2025-02-08 21:32:54,567][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:54,577][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:54,596][root][INFO] - Image embeddings computed.
[2025-02-08 21:32:58,720][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:32:58,729][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:32:58,748][root][INFO] - Image embeddings computed.
[2025-02-08 21:33:02,914][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:33:02,922][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:33:02,942][root][INFO] - Image embeddings computed.
[2025-02-08 21:33:07,072][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:33:07,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:33:07,194][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:34:49,076][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:34:49,174][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:34:49,194][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:05,661][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:05,778][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:05,798][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:09,918][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:10,022][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:10,042][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:14,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:14,317][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:14,337][root][INFO] - Image embeddings computed.
[2025-02-08 21:35:18,449][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:35:18,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:35:18,574][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 17
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:37:00,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:00,465][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:00,485][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:16,973][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:17,069][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:17,089][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:21,209][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:21,307][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:21,327][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:25,485][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:25,581][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:25,602][root][INFO] - Image embeddings computed.
[2025-02-08 21:37:29,715][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:37:29,724][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:37:29,744][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 20
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:39:06,690][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:06,700][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:06,720][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:23,239][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:23,244][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:23,264][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:27,384][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:27,393][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:27,413][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:31,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:31,567][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:31,587][root][INFO] - Image embeddings computed.
[2025-02-08 21:39:35,679][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:39:35,687][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:39:35,707][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 24
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:41:15,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:15,728][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:15,748][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:32,211][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:32,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:32,340][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:36,455][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:36,464][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:36,484][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:40,658][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:40,666][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:40,686][root][INFO] - Image embeddings computed.
[2025-02-08 21:41:44,801][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:41:44,804][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:41:44,824][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 17
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.250 | Done: False

[2025-02-08 21:43:22,886][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:22,892][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:22,912][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:39,271][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:39,281][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:39,301][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:43,424][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:43,427][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:43,447][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:47,601][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:47,609][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:47,629][root][INFO] - Image embeddings computed.
[2025-02-08 21:43:51,743][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:43:51,746][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:43:51,766][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 19
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 21:45:33,388][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:33,397][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:33,418][root][INFO] - Image embeddings computed.
[2025-02-08 21:45:49,683][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:49,691][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:49,711][root][INFO] - Image embeddings computed.
[2025-02-08 21:45:53,821][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:53,824][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:53,844][root][INFO] - Image embeddings computed.
[2025-02-08 21:45:58,003][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:45:58,022][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:45:58,042][root][INFO] - Image embeddings computed.
[2025-02-08 21:46:02,164][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:46:02,176][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:46:02,196][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 21:47:40,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:40,817][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:40,838][root][INFO] - Image embeddings computed.
[2025-02-08 21:47:57,101][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:47:57,109][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:47:57,129][root][INFO] - Image embeddings computed.
[2025-02-08 21:48:01,236][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:01,244][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:01,265][root][INFO] - Image embeddings computed.
[2025-02-08 21:48:05,418][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:05,421][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:05,441][root][INFO] - Image embeddings computed.
[2025-02-08 21:48:09,566][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:48:09,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:48:09,589][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 21:49:52,011][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:49:52,032][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:49:52,052][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:08,360][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:08,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:08,387][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:12,506][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:12,515][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:12,535][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:16,705][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:16,721][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:16,741][root][INFO] - Image embeddings computed.
[2025-02-08 21:50:20,870][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:50:20,873][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:50:20,893][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 21:52:04,442][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:04,539][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:04,560][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:20,935][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:21,033][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:21,053][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:25,155][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:25,251][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:25,272][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:29,422][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:29,527][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:29,547][root][INFO] - Image embeddings computed.
[2025-02-08 21:52:33,663][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:52:33,768][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:52:33,788][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 21:54:12,561][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:12,569][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:12,589][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:28,895][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:28,900][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:28,920][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:33,041][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:33,048][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:33,068][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:37,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:37,240][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:37,260][root][INFO] - Image embeddings computed.
[2025-02-08 21:54:41,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:54:41,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:54:41,415][root][INFO] - Image embeddings computed.
The number of original masks: 24
The number of filtered masks: 18
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 21:56:25,891][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:25,989][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:26,010][root][INFO] - Image embeddings computed.
[2025-02-08 21:56:42,365][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:42,462][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:42,482][root][INFO] - Image embeddings computed.
[2025-02-08 21:56:46,587][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:46,684][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:46,704][root][INFO] - Image embeddings computed.
[2025-02-08 21:56:50,868][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:50,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:50,979][root][INFO] - Image embeddings computed.
[2025-02-08 21:56:55,105][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:56:55,201][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:56:55,221][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.500 | Done: False

[2025-02-08 21:58:39,649][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:58:39,746][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:58:39,766][root][INFO] - Image embeddings computed.
[2025-02-08 21:58:56,131][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:58:56,227][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:58:56,247][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:00,355][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:00,453][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:00,473][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:04,628][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:04,720][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:04,740][root][INFO] - Image embeddings computed.
[2025-02-08 21:59:08,859][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 21:59:08,959][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 21:59:08,979][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 16
Lang Goal: pack all the cyan and yellow blocks into the brown box
Total Reward: 0.500 | Done: False

Mean: 0.3001407089642384 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 18/50
[2025-02-08 22:00:55,499][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:00:55,508][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:00:55,528][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:12,175][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:12,185][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:12,205][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:16,395][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:16,398][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:16,418][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:20,568][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:20,570][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:20,590][root][INFO] - Image embeddings computed.
[2025-02-08 22:01:24,709][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:01:24,712][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:01:24,732][root][INFO] - Image embeddings computed.
The number of original masks: 34
The number of filtered masks: 25
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:03:04,269][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:04,276][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:04,296][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:20,925][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:20,937][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:20,957][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:25,135][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:25,144][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:25,163][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:29,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:29,326][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:29,346][root][INFO] - Image embeddings computed.
[2025-02-08 22:03:33,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:03:33,468][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:03:33,488][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:05:17,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:17,871][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:17,891][root][INFO] - Image embeddings computed.
[2025-02-08 22:05:34,509][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:34,612][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:34,633][root][INFO] - Image embeddings computed.
[2025-02-08 22:05:38,809][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:38,911][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:38,931][root][INFO] - Image embeddings computed.
[2025-02-08 22:05:43,090][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:43,187][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:43,207][root][INFO] - Image embeddings computed.
[2025-02-08 22:05:47,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:05:47,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:05:47,444][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:07:32,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:07:32,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:07:32,182][root][INFO] - Image embeddings computed.
[2025-02-08 22:07:48,802][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:07:48,811][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:07:48,831][root][INFO] - Image embeddings computed.
[2025-02-08 22:07:53,010][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:07:53,019][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:07:53,039][root][INFO] - Image embeddings computed.
[2025-02-08 22:07:57,197][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:07:57,206][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:07:57,225][root][INFO] - Image embeddings computed.
[2025-02-08 22:08:01,347][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:08:01,356][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:08:01,376][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:09:41,720][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:09:41,730][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:09:41,750][root][INFO] - Image embeddings computed.
[2025-02-08 22:09:58,366][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:09:58,374][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:09:58,394][root][INFO] - Image embeddings computed.
[2025-02-08 22:10:02,573][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:02,583][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:02,602][root][INFO] - Image embeddings computed.
[2025-02-08 22:10:06,762][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:06,772][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:06,792][root][INFO] - Image embeddings computed.
[2025-02-08 22:10:10,912][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:10:10,918][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:10:10,938][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:11:51,690][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:11:51,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:11:51,718][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:08,270][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:08,280][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:08,300][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:12,453][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:12,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:12,476][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:16,626][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:16,638][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:16,658][root][INFO] - Image embeddings computed.
[2025-02-08 22:12:20,780][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:12:20,787][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:12:20,807][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 25
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:14:06,508][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:06,516][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:06,536][root][INFO] - Image embeddings computed.
[2025-02-08 22:14:23,129][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:23,139][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:23,159][root][INFO] - Image embeddings computed.
[2025-02-08 22:14:27,334][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:27,339][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:27,359][root][INFO] - Image embeddings computed.
[2025-02-08 22:14:31,518][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:31,528][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:31,548][root][INFO] - Image embeddings computed.
[2025-02-08 22:14:35,663][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:14:35,672][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:14:35,692][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:16:16,806][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:16:16,815][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:16:16,835][root][INFO] - Image embeddings computed.
[2025-02-08 22:16:33,374][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:16:33,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:16:33,402][root][INFO] - Image embeddings computed.
[2025-02-08 22:16:37,551][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:16:37,560][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:16:37,579][root][INFO] - Image embeddings computed.
[2025-02-08 22:16:41,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:16:41,734][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:16:41,754][root][INFO] - Image embeddings computed.
[2025-02-08 22:16:45,875][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:16:45,883][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:16:45,903][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 25
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:18:32,261][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:32,268][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:32,288][root][INFO] - Image embeddings computed.
[2025-02-08 22:18:48,880][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:48,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:48,910][root][INFO] - Image embeddings computed.
[2025-02-08 22:18:53,091][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:53,099][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:53,119][root][INFO] - Image embeddings computed.
[2025-02-08 22:18:57,275][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:18:57,278][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:18:57,298][root][INFO] - Image embeddings computed.
[2025-02-08 22:19:01,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:19:01,425][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:19:01,444][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:20:47,982][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:20:48,007][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:20:48,027][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:04,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:04,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:04,653][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:08,830][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:08,833][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:08,853][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:13,010][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:13,013][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:13,033][root][INFO] - Image embeddings computed.
[2025-02-08 22:21:17,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:21:17,156][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:21:17,176][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:22:59,190][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:22:59,200][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:22:59,220][root][INFO] - Image embeddings computed.
[2025-02-08 22:23:15,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:23:15,849][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:23:15,868][root][INFO] - Image embeddings computed.
[2025-02-08 22:23:20,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:23:20,054][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:23:20,074][root][INFO] - Image embeddings computed.
[2025-02-08 22:23:24,232][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:23:24,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:23:24,254][root][INFO] - Image embeddings computed.
[2025-02-08 22:23:28,371][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:23:28,374][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:23:28,394][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:25:17,519][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:17,617][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:17,637][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:34,257][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:34,372][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:34,392][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:38,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:38,670][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:38,690][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:42,848][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:42,964][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:42,984][root][INFO] - Image embeddings computed.
[2025-02-08 22:25:47,102][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:25:47,204][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:25:47,224][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:27:30,404][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:30,412][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:30,432][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:47,094][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:47,115][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:47,135][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:51,289][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:51,298][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:51,318][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:55,480][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:55,491][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:55,511][root][INFO] - Image embeddings computed.
[2025-02-08 22:27:59,625][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:27:59,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:27:59,652][root][INFO] - Image embeddings computed.
The number of original masks: 28
The number of filtered masks: 23
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:29:49,140][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:29:49,235][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:29:49,255][root][INFO] - Image embeddings computed.
[2025-02-08 22:30:05,861][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:30:05,961][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:30:05,981][root][INFO] - Image embeddings computed.
[2025-02-08 22:30:10,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:30:10,242][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:30:10,263][root][INFO] - Image embeddings computed.
[2025-02-08 22:30:14,408][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:30:14,525][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:30:14,545][root][INFO] - Image embeddings computed.
[2025-02-08 22:30:18,667][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:30:18,769][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:30:18,789][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 26
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:32:02,438][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:32:02,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:32:02,467][root][INFO] - Image embeddings computed.
[2025-02-08 22:32:19,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:32:19,091][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:32:19,110][root][INFO] - Image embeddings computed.
[2025-02-08 22:32:23,292][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:32:23,297][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:32:23,317][root][INFO] - Image embeddings computed.
[2025-02-08 22:32:27,477][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:32:27,482][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:32:27,502][root][INFO] - Image embeddings computed.
[2025-02-08 22:32:31,622][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:32:31,630][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:32:31,650][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:34:15,314][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:34:15,325][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:34:15,345][root][INFO] - Image embeddings computed.
[2025-02-08 22:34:31,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:34:31,910][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:34:31,930][root][INFO] - Image embeddings computed.
[2025-02-08 22:34:36,078][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:34:36,087][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:34:36,106][root][INFO] - Image embeddings computed.
[2025-02-08 22:34:40,256][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:34:40,264][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:34:40,298][root][INFO] - Image embeddings computed.
[2025-02-08 22:34:44,421][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:34:44,428][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:34:44,448][root][INFO] - Image embeddings computed.
The number of original masks: 32
The number of filtered masks: 28
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:36:28,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:28,747][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:28,767][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:45,361][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:45,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:45,391][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:49,569][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:49,578][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:49,597][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:53,755][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:53,763][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:53,782][root][INFO] - Image embeddings computed.
[2025-02-08 22:36:57,907][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:36:57,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:36:57,935][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:38:42,163][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:38:42,170][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:38:42,191][root][INFO] - Image embeddings computed.
[2025-02-08 22:38:58,763][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:38:58,772][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:38:58,792][root][INFO] - Image embeddings computed.
[2025-02-08 22:39:02,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:39:02,968][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:39:02,988][root][INFO] - Image embeddings computed.
[2025-02-08 22:39:07,137][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:39:07,145][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:39:07,165][root][INFO] - Image embeddings computed.
[2025-02-08 22:39:11,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:39:11,295][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:39:11,315][root][INFO] - Image embeddings computed.
The number of original masks: 33
The number of filtered masks: 28
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:40:56,465][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:40:56,474][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:40:56,494][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:13,109][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:13,118][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:13,137][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:17,314][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:17,322][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:17,342][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:21,498][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:21,507][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:21,527][root][INFO] - Image embeddings computed.
[2025-02-08 22:41:25,646][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:41:25,655][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:41:25,674][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 24
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 22:43:10,416][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:10,424][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:10,444][root][INFO] - Image embeddings computed.
[2025-02-08 22:43:27,068][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:27,078][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:27,098][root][INFO] - Image embeddings computed.
[2025-02-08 22:43:31,280][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:31,289][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:31,308][root][INFO] - Image embeddings computed.
[2025-02-08 22:43:35,466][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:35,472][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:35,492][root][INFO] - Image embeddings computed.
[2025-02-08 22:43:39,616][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:43:39,622][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:43:39,641][root][INFO] - Image embeddings computed.
The number of original masks: 31
The number of filtered masks: 25
Lang Goal: pack all the brown and red blocks into the brown box
Total Reward: 0.000 | Done: False

Mean: 0.2834662251328918 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 19/50
[2025-02-08 22:45:32,781][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:32,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:32,815][root][INFO] - Image embeddings computed.
[2025-02-08 22:45:49,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:49,553][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:49,573][root][INFO] - Image embeddings computed.
[2025-02-08 22:45:53,726][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:53,735][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:53,755][root][INFO] - Image embeddings computed.
[2025-02-08 22:45:57,885][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:45:57,894][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:45:57,914][root][INFO] - Image embeddings computed.
[2025-02-08 22:46:02,035][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:46:02,043][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:46:02,063][root][INFO] - Image embeddings computed.
The number of original masks: 39
The number of filtered masks: 34
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 22:47:54,545][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:47:54,642][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:47:54,662][root][INFO] - Image embeddings computed.
[2025-02-08 22:48:11,164][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:11,260][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:11,280][root][INFO] - Image embeddings computed.
[2025-02-08 22:48:15,433][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:15,534][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:15,554][root][INFO] - Image embeddings computed.
[2025-02-08 22:48:19,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:19,783][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:19,803][root][INFO] - Image embeddings computed.
[2025-02-08 22:48:23,953][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:48:24,052][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:48:24,072][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 37
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 22:50:10,874][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:10,884][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:10,904][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:27,428][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:27,435][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:27,455][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:31,598][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:31,607][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:31,626][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:35,775][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:35,781][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:35,801][root][INFO] - Image embeddings computed.
[2025-02-08 22:50:39,938][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:50:39,945][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:50:39,965][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 37
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 22:52:27,269][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:27,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:27,388][root][INFO] - Image embeddings computed.
[2025-02-08 22:52:44,025][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:44,127][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:44,147][root][INFO] - Image embeddings computed.
[2025-02-08 22:52:48,286][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:48,382][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:48,402][root][INFO] - Image embeddings computed.
[2025-02-08 22:52:52,552][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:52,644][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:52,664][root][INFO] - Image embeddings computed.
[2025-02-08 22:52:56,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:52:56,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:52:56,910][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 38
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 22:54:43,766][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:54:43,776][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:54:43,796][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:00,463][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:00,472][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:00,494][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:04,637][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:04,645][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:04,665][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:08,813][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:08,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:08,837][root][INFO] - Image embeddings computed.
[2025-02-08 22:55:12,968][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:55:12,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:55:12,997][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 37
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 22:57:00,565][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:00,574][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:00,594][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:17,251][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:17,262][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:17,281][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:21,424][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:21,433][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:21,453][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:25,598][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:25,606][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:25,626][root][INFO] - Image embeddings computed.
[2025-02-08 22:57:29,758][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:57:29,767][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:57:29,786][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 37
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 22:59:23,859][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:23,867][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:23,887][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:40,555][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:40,563][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:40,583][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:44,728][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:44,735][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:44,755][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:48,899][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:48,909][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:48,929][root][INFO] - Image embeddings computed.
[2025-02-08 22:59:53,064][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 22:59:53,072][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 22:59:53,092][root][INFO] - Image embeddings computed.
The number of original masks: 41
The number of filtered masks: 37
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:01:42,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:01:42,448][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:01:42,468][root][INFO] - Image embeddings computed.
[2025-02-08 23:01:59,495][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:01:59,505][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:01:59,525][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:03,672][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:03,682][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:03,702][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:07,855][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:07,863][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:07,884][root][INFO] - Image embeddings computed.
[2025-02-08 23:02:12,020][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:02:12,028][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:02:12,048][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 38
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:04:07,544][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:07,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:07,574][root][INFO] - Image embeddings computed.
[2025-02-08 23:04:24,238][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:24,246][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:24,266][root][INFO] - Image embeddings computed.
[2025-02-08 23:04:28,409][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:28,418][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:28,438][root][INFO] - Image embeddings computed.
[2025-02-08 23:04:32,585][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:32,593][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:32,613][root][INFO] - Image embeddings computed.
[2025-02-08 23:04:36,754][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:04:36,763][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:04:36,783][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 38
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:06:33,223][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:33,321][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:33,341][root][INFO] - Image embeddings computed.
[2025-02-08 23:06:49,929][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:50,026][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:50,046][root][INFO] - Image embeddings computed.
[2025-02-08 23:06:54,189][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:54,285][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:54,306][root][INFO] - Image embeddings computed.
[2025-02-08 23:06:58,454][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:06:58,552][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:06:58,572][root][INFO] - Image embeddings computed.
[2025-02-08 23:07:02,707][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:07:02,716][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:07:02,736][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 34
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:08:58,665][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:08:58,684][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:08:58,704][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:15,372][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:15,380][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:15,400][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:19,547][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:19,554][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:19,574][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:23,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:23,732][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:23,751][root][INFO] - Image embeddings computed.
[2025-02-08 23:09:27,889][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:09:27,892][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:09:27,912][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 38
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:11:16,141][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:16,151][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:16,171][root][INFO] - Image embeddings computed.
[2025-02-08 23:11:32,832][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:32,842][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:32,862][root][INFO] - Image embeddings computed.
[2025-02-08 23:11:37,006][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:37,015][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:37,035][root][INFO] - Image embeddings computed.
[2025-02-08 23:11:41,182][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:41,191][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:41,210][root][INFO] - Image embeddings computed.
[2025-02-08 23:11:45,345][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:11:45,353][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:11:45,373][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 38
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:13:36,242][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:13:36,249][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:13:36,269][root][INFO] - Image embeddings computed.
[2025-02-08 23:13:52,946][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:13:52,960][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:13:52,980][root][INFO] - Image embeddings computed.
[2025-02-08 23:13:57,119][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:13:57,128][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:13:57,147][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:01,291][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:01,300][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:01,319][root][INFO] - Image embeddings computed.
[2025-02-08 23:14:05,458][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:14:05,467][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:14:05,487][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 36
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:15:56,832][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:15:56,838][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:15:56,858][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:13,533][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:13,542][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:13,562][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:17,707][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:17,714][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:17,734][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:21,882][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:21,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:21,910][root][INFO] - Image embeddings computed.
[2025-02-08 23:16:26,048][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:16:26,055][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:16:26,075][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 39
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:18:24,213][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:24,312][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:24,344][root][INFO] - Image embeddings computed.
[2025-02-08 23:18:41,014][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:41,111][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:41,131][root][INFO] - Image embeddings computed.
[2025-02-08 23:18:45,271][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:45,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:45,388][root][INFO] - Image embeddings computed.
[2025-02-08 23:18:49,531][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:49,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:49,647][root][INFO] - Image embeddings computed.
[2025-02-08 23:18:53,781][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:18:53,878][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:18:53,898][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 39
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:20:44,638][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:20:44,647][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:20:44,667][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:01,335][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:01,363][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:01,383][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:05,525][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:05,534][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:05,554][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:09,700][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:09,709][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:09,728][root][INFO] - Image embeddings computed.
[2025-02-08 23:21:13,865][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:21:13,868][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:21:13,888][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 39
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:23:04,034][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:04,043][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:04,064][root][INFO] - Image embeddings computed.
[2025-02-08 23:23:20,731][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:20,739][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:20,759][root][INFO] - Image embeddings computed.
[2025-02-08 23:23:24,903][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:24,912][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:24,931][root][INFO] - Image embeddings computed.
[2025-02-08 23:23:29,080][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:29,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:29,108][root][INFO] - Image embeddings computed.
[2025-02-08 23:23:33,244][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:23:33,252][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:23:33,272][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 39
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:25:23,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:25:23,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:25:23,416][root][INFO] - Image embeddings computed.
[2025-02-08 23:25:40,063][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:25:40,073][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:25:40,093][root][INFO] - Image embeddings computed.
[2025-02-08 23:25:44,239][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:25:44,242][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:25:44,262][root][INFO] - Image embeddings computed.
[2025-02-08 23:25:48,413][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:25:48,416][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:25:48,436][root][INFO] - Image embeddings computed.
[2025-02-08 23:25:52,571][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:25:52,580][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:25:52,600][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 38
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:27:42,924][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:27:42,934][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:27:42,954][root][INFO] - Image embeddings computed.
[2025-02-08 23:27:59,625][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:27:59,633][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:27:59,653][root][INFO] - Image embeddings computed.
[2025-02-08 23:28:03,793][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:03,798][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:03,818][root][INFO] - Image embeddings computed.
[2025-02-08 23:28:07,966][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:07,978][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:07,997][root][INFO] - Image embeddings computed.
[2025-02-08 23:28:12,134][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:28:12,137][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:28:12,157][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 39
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

[2025-02-08 23:30:03,863][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:03,873][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:03,893][root][INFO] - Image embeddings computed.
[2025-02-08 23:30:20,553][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:20,562][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:20,581][root][INFO] - Image embeddings computed.
[2025-02-08 23:30:24,723][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:24,731][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:24,751][root][INFO] - Image embeddings computed.
[2025-02-08 23:30:28,899][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:28,902][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:28,922][root][INFO] - Image embeddings computed.
[2025-02-08 23:30:33,059][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:30:33,067][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:30:33,087][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 38
Lang Goal: pack all the yellow and green blocks into the brown box
Total Reward: 0.083 | Done: False

Mean: 0.2729329150381782 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 20/50
[2025-02-08 23:32:27,336][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:32:27,345][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:32:27,381][root][INFO] - Image embeddings computed.
[2025-02-08 23:32:43,638][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:32:43,646][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:32:43,666][root][INFO] - Image embeddings computed.
[2025-02-08 23:32:47,791][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:32:47,799][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:32:47,818][root][INFO] - Image embeddings computed.
[2025-02-08 23:32:51,980][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:32:51,984][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:32:52,004][root][INFO] - Image embeddings computed.
[2025-02-08 23:32:56,115][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:32:56,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:32:56,138][root][INFO] - Image embeddings computed.
The number of original masks: 17
The number of filtered masks: 14
Lang Goal: pack all the red blocks into the brown box
Total Reward: 0.489 | Done: False

[2025-02-08 23:34:46,218][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:34:46,224][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:34:46,244][root][INFO] - Image embeddings computed.
[2025-02-08 23:35:02,354][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:35:02,360][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:35:02,380][root][INFO] - Image embeddings computed.
[2025-02-08 23:35:06,508][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:35:06,511][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:35:06,531][root][INFO] - Image embeddings computed.
[2025-02-08 23:35:10,690][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:35:10,694][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:35:10,714][root][INFO] - Image embeddings computed.
[2025-02-08 23:35:14,822][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:35:14,824][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:35:14,844][root][INFO] - Image embeddings computed.
The number of original masks: 22
The number of filtered masks: 17
Lang Goal: pack all the red blocks into the brown box
Total Reward: 0.489 | Done: False

[2025-02-08 23:37:05,940][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:37:05,950][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:37:05,970][root][INFO] - Image embeddings computed.
[2025-02-08 23:37:22,081][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:37:22,089][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:37:22,109][root][INFO] - Image embeddings computed.
[2025-02-08 23:37:26,239][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:37:26,247][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:37:26,267][root][INFO] - Image embeddings computed.
[2025-02-08 23:37:30,414][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:37:30,423][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:37:30,443][root][INFO] - Image embeddings computed.
[2025-02-08 23:37:34,558][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:37:34,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:37:34,586][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 15
Lang Goal: pack all the red blocks into the brown box
Total Reward: 0.489 | Done: False

[2025-02-08 23:39:25,103][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:39:25,112][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:39:25,133][root][INFO] - Image embeddings computed.
[2025-02-08 23:39:41,240][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:39:41,246][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:39:41,266][root][INFO] - Image embeddings computed.
[2025-02-08 23:39:45,394][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:39:45,397][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:39:45,417][root][INFO] - Image embeddings computed.
[2025-02-08 23:39:49,563][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:39:49,566][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:39:49,586][root][INFO] - Image embeddings computed.
[2025-02-08 23:39:53,699][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:39:53,708][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:39:53,727][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: pack all the red blocks into the brown box
Total Reward: 0.489 | Done: False

[2025-02-08 23:41:49,753][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:41:49,850][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:41:49,871][root][INFO] - Image embeddings computed.
[2025-02-08 23:42:06,060][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:42:06,154][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:42:06,174][root][INFO] - Image embeddings computed.
[2025-02-08 23:42:10,303][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:42:10,419][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:42:10,440][root][INFO] - Image embeddings computed.
[2025-02-08 23:42:14,586][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:42:14,697][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:42:14,718][root][INFO] - Image embeddings computed.
[2025-02-08 23:42:18,829][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:42:18,927][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:42:18,947][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: pack all the red blocks into the brown box
Total Reward: 0.489 | Done: False

[2025-02-08 23:44:13,739][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:44:13,749][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:44:13,769][root][INFO] - Image embeddings computed.
[2025-02-08 23:44:29,873][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:44:29,882][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:44:29,902][root][INFO] - Image embeddings computed.
[2025-02-08 23:44:34,030][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:44:34,033][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:44:34,053][root][INFO] - Image embeddings computed.
[2025-02-08 23:44:38,200][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:44:38,234][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:44:38,254][root][INFO] - Image embeddings computed.
[2025-02-08 23:44:42,367][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:44:42,370][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:44:42,390][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: pack all the red blocks into the brown box
Total Reward: 0.489 | Done: False

[2025-02-08 23:46:39,445][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:39,563][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:39,583][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:55,685][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:46:55,796][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:46:55,817][root][INFO] - Image embeddings computed.
[2025-02-08 23:46:59,941][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:47:00,035][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:47:00,055][root][INFO] - Image embeddings computed.
[2025-02-08 23:47:04,198][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:47:04,295][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:47:04,315][root][INFO] - Image embeddings computed.
[2025-02-08 23:47:08,424][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:47:08,516][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:47:08,536][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: pack all the red blocks into the brown box
Total Reward: 0.489 | Done: False

[2025-02-08 23:49:04,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:49:04,388][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:49:04,408][root][INFO] - Image embeddings computed.
[2025-02-08 23:49:20,508][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:49:20,518][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:49:20,538][root][INFO] - Image embeddings computed.
[2025-02-08 23:49:24,666][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:49:24,674][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:49:24,693][root][INFO] - Image embeddings computed.
[2025-02-08 23:49:28,839][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:49:28,851][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:49:28,870][root][INFO] - Image embeddings computed.
[2025-02-08 23:49:32,989][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:49:32,997][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:49:33,017][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 16
Lang Goal: pack all the red blocks into the brown box
Total Reward: 0.489 | Done: False

[2025-02-08 23:51:25,458][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:51:25,464][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:51:25,484][root][INFO] - Image embeddings computed.
[2025-02-08 23:51:41,584][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:51:41,587][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:51:41,607][root][INFO] - Image embeddings computed.
[2025-02-08 23:51:45,733][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:51:45,737][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:51:45,757][root][INFO] - Image embeddings computed.
[2025-02-08 23:51:49,902][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:51:49,905][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:51:49,925][root][INFO] - Image embeddings computed.
[2025-02-08 23:51:54,039][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:51:54,042][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:51:54,061][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 15
Lang Goal: pack all the red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 23:53:49,101][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:53:49,108][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:53:49,128][root][INFO] - Image embeddings computed.
[2025-02-08 23:54:05,299][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:54:05,308][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:54:05,328][root][INFO] - Image embeddings computed.
[2025-02-08 23:54:09,487][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:54:09,490][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:54:09,510][root][INFO] - Image embeddings computed.
[2025-02-08 23:54:13,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:54:13,681][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:54:13,701][root][INFO] - Image embeddings computed.
[2025-02-08 23:54:17,817][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:54:17,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:54:17,845][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 14
Lang Goal: pack all the red blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-08 23:56:13,176][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:56:13,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:56:13,202][root][INFO] - Image embeddings computed.
[2025-02-08 23:56:29,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:56:29,383][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:56:29,403][root][INFO] - Image embeddings computed.
[2025-02-08 23:56:33,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:56:33,565][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:56:33,585][root][INFO] - Image embeddings computed.
[2025-02-08 23:56:37,747][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:56:37,750][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:56:37,770][root][INFO] - Image embeddings computed.
[2025-02-08 23:56:41,880][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:56:41,885][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:56:41,905][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the red blocks into the brown box
Total Reward: 1.000 | Done: True

Mean: 0.3092862692862693 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 21/50
[2025-02-08 23:58:43,411][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:58:43,538][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:58:43,558][root][INFO] - Image embeddings computed.
[2025-02-08 23:59:00,021][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:59:00,123][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:59:00,143][root][INFO] - Image embeddings computed.
[2025-02-08 23:59:04,344][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:59:04,444][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:59:04,464][root][INFO] - Image embeddings computed.
[2025-02-08 23:59:08,600][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:59:08,702][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:59:08,722][root][INFO] - Image embeddings computed.
[2025-02-08 23:59:12,883][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-08 23:59:12,992][root][INFO] - Computing image embeddings for the provided image...
[2025-02-08 23:59:13,012][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 18
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 00:01:11,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:11,485][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:11,506][root][INFO] - Image embeddings computed.
[2025-02-09 00:01:27,898][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:27,908][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:27,928][root][INFO] - Image embeddings computed.
[2025-02-09 00:01:32,112][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:32,119][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:32,139][root][INFO] - Image embeddings computed.
[2025-02-09 00:01:36,277][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:36,280][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:36,300][root][INFO] - Image embeddings computed.
[2025-02-09 00:01:40,458][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:01:40,461][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:01:40,481][root][INFO] - Image embeddings computed.
The number of original masks: 21
The number of filtered masks: 18
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.556 | Done: False

[2025-02-09 00:03:34,111][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:34,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:34,141][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:50,373][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:50,379][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:50,399][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:54,525][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:54,534][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:54,554][root][INFO] - Image embeddings computed.
[2025-02-09 00:03:58,677][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:03:58,680][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:03:58,700][root][INFO] - Image embeddings computed.
[2025-02-09 00:04:02,833][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:04:02,843][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:04:02,862][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.827 | Done: False

[2025-02-09 00:05:56,690][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:05:56,698][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:05:56,718][root][INFO] - Image embeddings computed.
[2025-02-09 00:06:12,980][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:06:12,985][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:06:13,005][root][INFO] - Image embeddings computed.
[2025-02-09 00:06:17,158][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:06:17,161][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:06:17,181][root][INFO] - Image embeddings computed.
[2025-02-09 00:06:21,306][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:06:21,309][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:06:21,329][root][INFO] - Image embeddings computed.
[2025-02-09 00:06:25,461][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:06:25,464][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:06:25,484][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 15
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.827 | Done: False

[2025-02-09 00:08:22,206][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:22,215][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:22,235][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:38,543][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:38,549][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:38,569][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:42,718][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:42,724][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:42,765][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:46,917][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:46,926][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:46,946][root][INFO] - Image embeddings computed.
[2025-02-09 00:08:51,095][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:08:51,103][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:08:51,123][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 18
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.556 | Done: False

[2025-02-09 00:10:48,083][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:10:48,089][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:10:48,110][root][INFO] - Image embeddings computed.
[2025-02-09 00:11:04,532][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:11:04,540][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:11:04,559][root][INFO] - Image embeddings computed.
[2025-02-09 00:11:08,678][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:11:08,687][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:11:08,706][root][INFO] - Image embeddings computed.
[2025-02-09 00:11:12,842][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:11:12,845][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:11:12,865][root][INFO] - Image embeddings computed.
[2025-02-09 00:11:17,022][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:11:17,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:11:17,045][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:13:11,771][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:11,779][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:11,799][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:28,028][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:28,039][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:28,058][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:32,198][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:32,208][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:32,228][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:36,371][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:36,378][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:36,398][root][INFO] - Image embeddings computed.
[2025-02-09 00:13:40,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:13:40,536][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:13:40,556][root][INFO] - Image embeddings computed.
The number of original masks: 16
The number of filtered masks: 14
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:15:35,100][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:35,110][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:35,130][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:51,353][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:51,361][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:51,381][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:55,536][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:55,545][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:55,565][root][INFO] - Image embeddings computed.
[2025-02-09 00:15:59,704][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:15:59,714][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:15:59,734][root][INFO] - Image embeddings computed.
[2025-02-09 00:16:03,871][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:16:03,879][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:16:03,899][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:18:02,386][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:02,396][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:02,416][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:18,642][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:18,648][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:18,668][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:22,828][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:22,833][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:22,853][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:26,995][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:27,006][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:27,025][root][INFO] - Image embeddings computed.
[2025-02-09 00:18:31,162][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:18:31,170][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:18:31,190][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:20:26,171][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:26,182][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:26,202][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:42,431][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:42,440][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:42,460][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:46,617][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:46,620][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:46,641][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:50,781][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:50,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:50,821][root][INFO] - Image embeddings computed.
[2025-02-09 00:20:54,958][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:20:54,966][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:20:54,986][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:22:50,133][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:22:50,142][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:22:50,163][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:06,393][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:06,402][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:06,422][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:10,578][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:10,586][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:10,606][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:14,747][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:14,756][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:14,776][root][INFO] - Image embeddings computed.
[2025-02-09 00:23:18,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:23:18,924][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:23:18,944][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 17
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:25:14,352][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:14,360][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:14,380][root][INFO] - Image embeddings computed.
[2025-02-09 00:25:30,607][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:30,615][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:30,635][root][INFO] - Image embeddings computed.
[2025-02-09 00:25:34,792][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:34,795][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:34,815][root][INFO] - Image embeddings computed.
[2025-02-09 00:25:38,959][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:38,967][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:38,987][root][INFO] - Image embeddings computed.
[2025-02-09 00:25:43,123][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:25:43,131][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:25:43,151][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:27:38,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:27:38,542][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:27:38,562][root][INFO] - Image embeddings computed.
[2025-02-09 00:27:54,785][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:27:54,792][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:27:54,812][root][INFO] - Image embeddings computed.
[2025-02-09 00:27:58,967][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:27:58,976][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:27:58,996][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:03,134][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:03,142][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:03,162][root][INFO] - Image embeddings computed.
[2025-02-09 00:28:07,301][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:28:07,308][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:28:07,329][root][INFO] - Image embeddings computed.
The number of original masks: 18
The number of filtered masks: 16
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:30:06,271][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:06,278][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:06,299][root][INFO] - Image embeddings computed.
[2025-02-09 00:30:22,526][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:22,533][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:22,553][root][INFO] - Image embeddings computed.
[2025-02-09 00:30:26,708][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:26,711][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:26,731][root][INFO] - Image embeddings computed.
[2025-02-09 00:30:30,873][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:30,881][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:30,900][root][INFO] - Image embeddings computed.
[2025-02-09 00:30:35,035][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:30:35,045][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:30:35,065][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:32:31,469][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:32:31,478][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:32:31,499][root][INFO] - Image embeddings computed.
[2025-02-09 00:32:47,727][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:32:47,737][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:32:47,757][root][INFO] - Image embeddings computed.
[2025-02-09 00:32:51,910][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:32:51,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:32:51,935][root][INFO] - Image embeddings computed.
[2025-02-09 00:32:56,074][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:32:56,082][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:32:56,102][root][INFO] - Image embeddings computed.
[2025-02-09 00:33:00,240][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:33:00,248][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:33:00,267][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:34:57,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:34:57,016][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:34:57,036][root][INFO] - Image embeddings computed.
[2025-02-09 00:35:13,274][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:35:13,277][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:35:13,297][root][INFO] - Image embeddings computed.
[2025-02-09 00:35:17,453][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:35:17,456][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:35:17,476][root][INFO] - Image embeddings computed.
[2025-02-09 00:35:21,616][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:35:21,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:35:21,639][root][INFO] - Image embeddings computed.
[2025-02-09 00:35:25,777][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:35:25,788][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:35:25,808][root][INFO] - Image embeddings computed.
The number of original masks: 19
The number of filtered masks: 16
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:37:22,806][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:37:22,817][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:37:22,837][root][INFO] - Image embeddings computed.
[2025-02-09 00:37:39,051][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:37:39,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:37:39,077][root][INFO] - Image embeddings computed.
[2025-02-09 00:37:43,228][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:37:43,231][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:37:43,251][root][INFO] - Image embeddings computed.
[2025-02-09 00:37:47,390][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:37:47,399][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:37:47,419][root][INFO] - Image embeddings computed.
[2025-02-09 00:37:51,556][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:37:51,565][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:37:51,585][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:39:48,974][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:39:48,981][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:39:49,001][root][INFO] - Image embeddings computed.
[2025-02-09 00:40:05,227][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:40:05,230][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:40:05,250][root][INFO] - Image embeddings computed.
[2025-02-09 00:40:09,405][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:40:09,408][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:40:09,428][root][INFO] - Image embeddings computed.
[2025-02-09 00:40:13,572][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:40:13,575][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:40:13,595][root][INFO] - Image embeddings computed.
[2025-02-09 00:40:17,738][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:40:17,741][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:40:17,761][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:42:15,104][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:42:15,114][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:42:15,134][root][INFO] - Image embeddings computed.
[2025-02-09 00:42:31,361][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:42:31,368][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:42:31,388][root][INFO] - Image embeddings computed.
[2025-02-09 00:42:35,539][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:42:35,542][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:42:35,562][root][INFO] - Image embeddings computed.
[2025-02-09 00:42:39,701][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:42:39,704][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:42:39,724][root][INFO] - Image embeddings computed.
[2025-02-09 00:42:43,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:42:43,870][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:42:43,890][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

[2025-02-09 00:44:42,265][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:44:42,272][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:44:42,292][root][INFO] - Image embeddings computed.
[2025-02-09 00:44:58,519][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:44:58,522][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:44:58,542][root][INFO] - Image embeddings computed.
[2025-02-09 00:45:02,691][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:45:02,694][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:45:02,714][root][INFO] - Image embeddings computed.
[2025-02-09 00:45:06,851][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:45:06,854][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:45:06,874][root][INFO] - Image embeddings computed.
[2025-02-09 00:45:11,008][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:45:11,011][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:45:11,031][root][INFO] - Image embeddings computed.
The number of original masks: 20
The number of filtered masks: 17
Lang Goal: pack all the cyan and brown blocks into the brown box
Total Reward: 0.691 | Done: False

Mean: 0.3274801624007973 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 22/50
[2025-02-09 00:47:18,450][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:47:18,458][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:47:18,478][root][INFO] - Image embeddings computed.
[2025-02-09 00:47:35,277][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:47:35,299][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:47:35,319][root][INFO] - Image embeddings computed.
[2025-02-09 00:47:39,480][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:47:39,491][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:47:39,511][root][INFO] - Image embeddings computed.
[2025-02-09 00:47:43,658][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:47:43,666][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:47:43,686][root][INFO] - Image embeddings computed.
[2025-02-09 00:47:47,819][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:47:47,828][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:47:47,848][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 37
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 00:49:46,844][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:49:46,853][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:49:46,873][root][INFO] - Image embeddings computed.
[2025-02-09 00:50:03,641][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:50:03,644][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:50:03,664][root][INFO] - Image embeddings computed.
[2025-02-09 00:50:07,820][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:50:07,823][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:50:07,843][root][INFO] - Image embeddings computed.
[2025-02-09 00:50:11,977][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:50:11,980][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:50:12,000][root][INFO] - Image embeddings computed.
[2025-02-09 00:50:16,135][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:50:16,138][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:50:16,158][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 39
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 00:52:16,110][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:52:16,124][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:52:16,144][root][INFO] - Image embeddings computed.
[2025-02-09 00:52:32,869][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:52:32,965][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:52:32,986][root][INFO] - Image embeddings computed.
[2025-02-09 00:52:37,135][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:52:37,233][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:52:37,253][root][INFO] - Image embeddings computed.
[2025-02-09 00:52:41,383][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:52:41,480][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:52:41,517][root][INFO] - Image embeddings computed.
[2025-02-09 00:52:45,646][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:52:45,742][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:52:45,762][root][INFO] - Image embeddings computed.
The number of original masks: 48
The number of filtered masks: 40
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 00:54:48,194][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:54:48,200][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:54:48,220][root][INFO] - Image embeddings computed.
[2025-02-09 00:55:04,874][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:55:04,877][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:55:04,897][root][INFO] - Image embeddings computed.
[2025-02-09 00:55:09,045][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:55:09,048][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:55:09,068][root][INFO] - Image embeddings computed.
[2025-02-09 00:55:13,202][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:55:13,205][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:55:13,225][root][INFO] - Image embeddings computed.
[2025-02-09 00:55:17,354][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:55:17,357][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:55:17,377][root][INFO] - Image embeddings computed.
The number of original masks: 46
The number of filtered masks: 37
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 00:57:17,389][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:57:17,395][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:57:17,416][root][INFO] - Image embeddings computed.
[2025-02-09 00:57:34,130][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:57:34,140][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:57:34,160][root][INFO] - Image embeddings computed.
[2025-02-09 00:57:38,298][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:57:38,306][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:57:38,326][root][INFO] - Image embeddings computed.
[2025-02-09 00:57:42,462][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:57:42,464][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:57:42,484][root][INFO] - Image embeddings computed.
[2025-02-09 00:57:46,611][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:57:46,619][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:57:46,639][root][INFO] - Image embeddings computed.
The number of original masks: 40
The number of filtered masks: 33
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 00:59:55,023][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 00:59:55,121][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 00:59:55,141][root][INFO] - Image embeddings computed.
[2025-02-09 01:00:11,799][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:00:11,890][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:00:11,910][root][INFO] - Image embeddings computed.
[2025-02-09 01:00:16,054][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:00:16,165][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:00:16,185][root][INFO] - Image embeddings computed.
[2025-02-09 01:00:20,327][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:00:20,442][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:00:20,462][root][INFO] - Image embeddings computed.
[2025-02-09 01:00:24,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:00:24,673][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:00:24,693][root][INFO] - Image embeddings computed.
The number of original masks: 51
The number of filtered masks: 38
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:02:26,313][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:02:26,319][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:02:26,339][root][INFO] - Image embeddings computed.
[2025-02-09 01:02:42,824][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:02:42,833][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:02:42,852][root][INFO] - Image embeddings computed.
[2025-02-09 01:02:46,995][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:02:47,004][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:02:47,023][root][INFO] - Image embeddings computed.
[2025-02-09 01:02:51,174][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:02:51,176][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:02:51,196][root][INFO] - Image embeddings computed.
[2025-02-09 01:02:55,328][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:02:55,335][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:02:55,355][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 37
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:05:01,127][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:05:01,134][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:05:01,154][root][INFO] - Image embeddings computed.
[2025-02-09 01:05:17,594][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:05:17,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:05:17,617][root][INFO] - Image embeddings computed.
[2025-02-09 01:05:21,757][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:05:21,760][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:05:21,780][root][INFO] - Image embeddings computed.
[2025-02-09 01:05:25,930][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:05:25,933][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:05:25,953][root][INFO] - Image embeddings computed.
[2025-02-09 01:05:30,085][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:05:30,088][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:05:30,108][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 40
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:07:38,733][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:07:38,857][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:07:38,878][root][INFO] - Image embeddings computed.
[2025-02-09 01:07:55,312][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:07:55,419][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:07:55,439][root][INFO] - Image embeddings computed.
[2025-02-09 01:07:59,581][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:07:59,690][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:07:59,710][root][INFO] - Image embeddings computed.
[2025-02-09 01:08:03,862][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:08:03,957][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:08:03,977][root][INFO] - Image embeddings computed.
[2025-02-09 01:08:08,106][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:08:08,202][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:08:08,222][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 39
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:10:18,708][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:10:18,814][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:10:18,835][root][INFO] - Image embeddings computed.
[2025-02-09 01:10:35,273][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:10:35,371][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:10:35,391][root][INFO] - Image embeddings computed.
[2025-02-09 01:10:39,534][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:10:39,625][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:10:39,645][root][INFO] - Image embeddings computed.
[2025-02-09 01:10:43,800][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:10:43,891][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:10:43,911][root][INFO] - Image embeddings computed.
[2025-02-09 01:10:48,045][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:10:48,136][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:10:48,158][root][INFO] - Image embeddings computed.
The number of original masks: 42
The number of filtered masks: 37
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:12:50,258][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:12:50,268][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:12:50,289][root][INFO] - Image embeddings computed.
[2025-02-09 01:13:06,722][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:13:06,730][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:13:06,764][root][INFO] - Image embeddings computed.
[2025-02-09 01:13:10,908][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:13:10,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:13:10,935][root][INFO] - Image embeddings computed.
[2025-02-09 01:13:15,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:13:15,100][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:13:15,120][root][INFO] - Image embeddings computed.
[2025-02-09 01:13:19,249][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:13:19,257][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:13:19,277][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 38
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:15:20,631][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:15:20,641][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:15:20,661][root][INFO] - Image embeddings computed.
[2025-02-09 01:15:37,092][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:15:37,098][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:15:37,118][root][INFO] - Image embeddings computed.
[2025-02-09 01:15:41,262][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:15:41,265][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:15:41,284][root][INFO] - Image embeddings computed.
[2025-02-09 01:15:45,440][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:15:45,443][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:15:45,463][root][INFO] - Image embeddings computed.
[2025-02-09 01:15:49,595][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:15:49,597][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:15:49,617][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 38
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:17:51,613][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:17:51,623][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:17:51,644][root][INFO] - Image embeddings computed.
[2025-02-09 01:18:08,076][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:18:08,085][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:18:08,105][root][INFO] - Image embeddings computed.
[2025-02-09 01:18:12,243][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:18:12,246][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:18:12,265][root][INFO] - Image embeddings computed.
[2025-02-09 01:18:16,419][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:18:16,422][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:18:16,442][root][INFO] - Image embeddings computed.
[2025-02-09 01:18:20,574][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:18:20,578][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:18:20,598][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 39
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:20:22,626][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:22,745][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:22,765][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:39,207][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:39,312][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:39,332][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:43,474][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:43,484][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:43,504][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:47,657][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:47,664][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:47,684][root][INFO] - Image embeddings computed.
[2025-02-09 01:20:51,818][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:20:51,825][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:20:51,845][root][INFO] - Image embeddings computed.
The number of original masks: 44
The number of filtered masks: 39
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:22:55,436][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:22:55,447][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:22:55,467][root][INFO] - Image embeddings computed.
[2025-02-09 01:23:11,911][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:23:11,919][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:23:11,939][root][INFO] - Image embeddings computed.
[2025-02-09 01:23:16,078][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:23:16,081][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:23:16,101][root][INFO] - Image embeddings computed.
[2025-02-09 01:23:20,256][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:23:20,265][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:23:20,285][root][INFO] - Image embeddings computed.
[2025-02-09 01:23:24,412][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:23:24,415][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:23:24,435][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 40
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:25:33,509][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:33,518][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:33,538][root][INFO] - Image embeddings computed.
[2025-02-09 01:25:49,974][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:49,983][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:50,003][root][INFO] - Image embeddings computed.
[2025-02-09 01:25:54,143][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:54,146][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:54,166][root][INFO] - Image embeddings computed.
[2025-02-09 01:25:58,317][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:25:58,320][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:25:58,340][root][INFO] - Image embeddings computed.
[2025-02-09 01:26:02,473][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:26:02,476][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:26:02,496][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 40
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:28:11,570][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:11,579][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:11,599][root][INFO] - Image embeddings computed.
[2025-02-09 01:28:28,041][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:28,048][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:28,068][root][INFO] - Image embeddings computed.
[2025-02-09 01:28:32,208][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:32,216][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:32,236][root][INFO] - Image embeddings computed.
[2025-02-09 01:28:36,388][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:36,399][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:36,419][root][INFO] - Image embeddings computed.
[2025-02-09 01:28:40,550][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:28:40,553][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:28:40,573][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 40
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:30:53,699][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:30:53,706][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:30:53,726][root][INFO] - Image embeddings computed.
[2025-02-09 01:31:10,153][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:31:10,162][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:31:10,182][root][INFO] - Image embeddings computed.
[2025-02-09 01:31:14,323][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:31:14,332][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:31:14,352][root][INFO] - Image embeddings computed.
[2025-02-09 01:31:18,505][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:31:18,516][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:31:18,536][root][INFO] - Image embeddings computed.
[2025-02-09 01:31:22,669][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:31:22,672][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:31:22,692][root][INFO] - Image embeddings computed.
The number of original masks: 43
The number of filtered masks: 38
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:33:33,014][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:33:33,025][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:33:33,045][root][INFO] - Image embeddings computed.
[2025-02-09 01:33:49,466][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:33:49,474][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:33:49,494][root][INFO] - Image embeddings computed.
[2025-02-09 01:33:53,634][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:33:53,637][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:33:53,657][root][INFO] - Image embeddings computed.
[2025-02-09 01:33:57,810][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:33:57,813][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:33:57,833][root][INFO] - Image embeddings computed.
[2025-02-09 01:34:01,968][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:34:01,977][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:34:01,996][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 40
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

[2025-02-09 01:36:13,326][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:13,334][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:13,355][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:30,059][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:30,068][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:30,102][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:34,245][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:34,259][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:34,279][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:38,432][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:38,439][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:38,459][root][INFO] - Image embeddings computed.
[2025-02-09 01:36:42,591][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:36:42,594][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:36:42,615][root][INFO] - Image embeddings computed.
The number of original masks: 45
The number of filtered masks: 40
Lang Goal: pack all the red and cyan blocks into the brown box
Total Reward: 0.119 | Done: False

Mean: 0.31800595588474373 | Task: packing-boxes-pairs-seen-colors | Ckpt: steps=00040-val_loss=0.00021667.ckpt
Test: 23/50
[2025-02-09 01:39:01,597][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:01,607][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:01,627][root][INFO] - Image embeddings computed.
[2025-02-09 01:39:18,087][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:18,099][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:18,119][root][INFO] - Image embeddings computed.
[2025-02-09 01:39:22,212][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:22,230][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:22,250][root][INFO] - Image embeddings computed.
[2025-02-09 01:39:26,380][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:26,388][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:26,408][root][INFO] - Image embeddings computed.
[2025-02-09 01:39:30,522][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:39:30,525][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:39:30,545][root][INFO] - Image embeddings computed.
The number of original masks: 30
The number of filtered masks: 24
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:41:34,565][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:34,574][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:34,594][root][INFO] - Image embeddings computed.
[2025-02-09 01:41:50,912][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:50,919][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:50,939][root][INFO] - Image embeddings computed.
[2025-02-09 01:41:55,009][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:55,018][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:55,038][root][INFO] - Image embeddings computed.
[2025-02-09 01:41:59,193][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:41:59,201][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:41:59,221][root][INFO] - Image embeddings computed.
[2025-02-09 01:42:03,357][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:42:03,360][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:42:03,380][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:44:07,592][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:44:07,601][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:44:07,621][root][INFO] - Image embeddings computed.
[2025-02-09 01:44:23,906][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:44:23,915][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:44:23,935][root][INFO] - Image embeddings computed.
[2025-02-09 01:44:28,007][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:44:28,017][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:44:28,037][root][INFO] - Image embeddings computed.
[2025-02-09 01:44:32,194][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:44:32,203][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:44:32,223][root][INFO] - Image embeddings computed.
[2025-02-09 01:44:36,343][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:44:36,352][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:44:36,372][root][INFO] - Image embeddings computed.
The number of original masks: 23
The number of filtered masks: 18
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:46:42,026][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:46:42,035][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:46:42,055][root][INFO] - Image embeddings computed.
[2025-02-09 01:46:58,494][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:46:58,503][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:46:58,522][root][INFO] - Image embeddings computed.
[2025-02-09 01:47:02,624][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:47:02,627][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:47:02,647][root][INFO] - Image embeddings computed.
[2025-02-09 01:47:06,807][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:47:06,816][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:47:06,836][root][INFO] - Image embeddings computed.
[2025-02-09 01:47:10,947][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:47:10,956][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:47:10,976][root][INFO] - Image embeddings computed.
The number of original masks: 29
The number of filtered masks: 23
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:49:16,528][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:16,535][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:16,555][root][INFO] - Image embeddings computed.
[2025-02-09 01:49:32,741][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:32,744][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:32,764][root][INFO] - Image embeddings computed.
[2025-02-09 01:49:36,861][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:36,870][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:36,890][root][INFO] - Image embeddings computed.
[2025-02-09 01:49:41,050][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:41,057][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:41,077][root][INFO] - Image embeddings computed.
[2025-02-09 01:49:45,173][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:49:45,175][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:49:45,195][root][INFO] - Image embeddings computed.
The number of original masks: 37
The number of filtered masks: 29
Lang Goal: pack all the gray and yellow blocks into the brown box
Total Reward: 0.000 | Done: False

[2025-02-09 01:51:53,988][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:51:54,011][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:51:54,031][root][INFO] - Image embeddings computed.
[2025-02-09 01:52:10,217][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:52:10,228][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:52:10,248][root][INFO] - Image embeddings computed.
[2025-02-09 01:52:14,330][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:52:14,333][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:52:14,353][root][INFO] - Image embeddings computed.
[2025-02-09 01:52:18,466][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:52:18,478][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:52:18,498][root][INFO] - Image embeddings computed.
[2025-02-09 01:52:22,620][root][INFO] - For numpy array image, we assume (HxWxC) format
[2025-02-09 01:52:22,628][root][INFO] - Computing image embeddings for the provided image...
[2025-02-09 01:52:22,648][root][INFO] - Image embeddings computed.
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
slurmstepd: error: *** JOB 995926 ON gpu003 CANCELLED AT 2025-02-09T01:53:24 DUE TO TIME LIMIT ***
slurmstepd: error: *** STEP 995926.0 ON gpu003 CANCELLED AT 2025-02-09T01:53:24 DUE TO TIME LIMIT ***
